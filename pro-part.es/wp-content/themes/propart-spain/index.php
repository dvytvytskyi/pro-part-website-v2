<?php
/**
 * The main template file
 *
 * This is the most generic template file in a WordPress theme
 * and one of the two required files for a theme (the other being style.css).
 * It is used to display a page when nothing more specific matches a query.
 * E.g., it puts together the home page when no home.php file exists.
 *
 * @link https://developer.wordpress.org/themes/basics/template-hierarchy/
 *
 * @package propart-spain
 */

get_header();
?>
<script src="<?php echo get_template_directory_uri(); ?>/js/simple-likes.js"></script>

<main class="mainPage">
    <nav id="bottom-navbar" class="bottom-nav">
    </nav>
    <section class="headerBlock">
        <div class="headerContent">
            <h1 class="mainHeader">Top Properties In Costa Del Sol</h1>
            <p class="mainDescription">Find your dream home With ProPart</p>
            <div class="mainPageActions">
                <div class="areaDropdown">
                    <button class="dropdownTrigger areaTrigger">
                        Select your area
                        <span class="iconArrow area"></span>
                    </button>
                    <div class="areaOptionsContainer">
                        <div class="scrollable">
                            <ul class="optionsList"></ul>
                        </div>
                    </div>

                    <div class="subAreaOptionsContainer hidden">
                        <ul class="subOptionsList"></ul>
                    </div>
                </div>

                <div class="wrapperMainPageVisibleProjects">
                    <button class="wrapperMainPageVisibleProjects__btn active" id="mainOffPlanVisible">
                        Off plan
                    </button>
                    <button class="wrapperMainPageVisibleProjects__btn" id="mainSecondaryVisible">
                        Secondary
                    </button>
                </div>

                <div class="headerActions">
                    <a href="">
                        <button class="searchButton">
                            <span class="searchButtonText" id="mainPageBtnLinkProperties">Search</span>
                        </button></a>
                    <a href="">
                        <button class="editButton" id="mainPageBtnLinkMap"></button>
                    </a>
                    <button class="aiButton" id="mainPageBtnAI" aria-label="AI Search">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <path d="M9.813 15.904L9 18.75l-.813-2.846a4.5 4.5 0 00-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 003.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 003.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 00-3.09 3.09z" stroke="#313131" stroke-width="1.5"/>
                            <path d="M18.259 8.715L18 9.75l-.259-1.035a3.375 3.375 0 00-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 002.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 002.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 00-2.456 2.456z" stroke="#313131" stroke-width="1.5"/>
                            <path d="M16.894 20.567L16.5 22l-.394-1.433a2.25 2.25 0 00-1.423-1.423L13.25 19l1.433-.394a2.25 2.25 0 001.423-1.423L16.5 15.75l.394 1.433a2.25 2.25 0 001.423 1.423L19.75 19l-1.433.394a2.25 2.25 0 00-1.423 1.423z" stroke="#313131" stroke-width="1.5"/>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </section>
    <section class="project-swiper-moreProjects projectsSwiper-main">
        <div class="swiper-container">
            <h2 class="topProjectsMain">Top projects</h2>
            <div class="swiper-wrapper">
            </div>
            <div class="swiper-custom-button-next">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                    <path d="M8.3335 14.1665L11.6668 9.99984L8.3335 5.83317" stroke="#313131" stroke-width="1.5"
                        stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </div>
            <div class="swiper-custom-button-prev">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                    <path d="M11.667 5.8335L8.33366 10.0002L11.667 14.1668" stroke="#313131" stroke-width="1.5"
                        stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </div>
        </div>
    </section>
    <section class="infoBlock">
        <div class="infoBlockLeft">
            <h2 class="infoTitle">About us</h2>
            <p class="infoText">
                Welcome to ProPart, your trusted real estate partner on Spain's Costa
                del Sol. With many years of experience in the local property market,
                we specialize in helping clients find their dream homes and investment
                opportunities in one of Spain’s most desirable regions. From
                beachfront villas to modern apartments and exclusive investment
                properties, ProPart offers a wide selection tailored to your needs.
            </p>
            <p class="infoText">
                Our dedicated team of experts provides personalized service throughout
                the entire buying or selling process. We pride ourselves on offering
                comprehensive guidance, from property selection and market analysis to
                legal and financial advice, ensuring a seamless and transparent
                experience for our clients.
            </p>
            <p class="infoText">
                At ProPart, we believe in building lasting relationships, offering
                professional expertise, and delivering exceptional results. Whether
                you are looking to relocate, invest, or find a holiday home, we are
                here to make your real estate journey in Costa del Sol successful and
                stress-free.
            </p>
        </div>
        <div class="infoBlockRight">
            <div class="getInTouchTextAndBtnContainer">
                <div class="getInTouchTextContainer">
                    <h2 class="getInTouchTitle">
                        Get in touch
                    </h2>
                    <p class="getInTouchText">
                        Organise Google Meet
                        with our agent now
                    </p>
                </div>
                <a class="getInTouchBtn" href="https://calendar.app.google/gBMV79PV8vsGrh9u5" target="_blank">
                    Go to calendar
                </a>
            </div>
            <img alt="getInTouchLogo" src="<?php echo get_template_directory_uri(); ?>/images/main/getInTouch.png" />
        </div>
    </section>
    <section class="statsBlock">
        <div class="statsItem">
            <p class="statsNumber">5</p>
            <p class="statsDescription">years on the market</p>
        </div>
        <div class="statsItem">
            <p class="statsNumber">50+</p>
            <p class="statsDescription">qualified specialists</p>
        </div>
        <div class="statsItem">
            <p class="statsNumber">100K</p>
            <p class="statsDescription">different projects</p>
        </div>
        <div class="statsItem">
            <p class="statsNumber">50+</p>
            <p class="statsDescription">reliable developers</p>
        </div>
    </section>
    <section class="mainServicesBlock">
        <p class="mainServiceHeader">Our services</p>
        <div class="servicesContainer">
            <a class="mainServiceCard" href="/legal-service">
                <span class="moreServiceCardLink">More</span>
                <p class="serviceNum">01</p>
                <p class="serviceTitle">Real estate</p>
                <p class="serviceDescription">Buy, sell and manage</p>
            </a>
            <a class="mainServiceCard" href="/concierge-service">
                <span href="/concierge-service" class="moreServiceCardLink">More</span>
                <p class="serviceNum">02</p>
                <p class="serviceTitle">Local expertise</p>
                <p class="serviceDescription">Consulting</p>
            </a>
            <a class="mainServiceCard" href="/visa-services">
                <span class="moreServiceCardLink">More</span>
                <p class="serviceNum">03</p>
                <p class="serviceTitle">Visa</p>
                <p class="serviceDescription">
                    Year-round residency via Golden Visa
                </p>
            </a>
            <a class="mainServiceCard" href="/insurance-service">
                <span class="moreServiceCardLink">More</span>
                <p class="serviceNum">04</p>
                <p class="serviceTitle">Insurance</p>
                <p class="serviceDescription">Peace of mind protection</p>
            </a>

            <a class="mainServiceCard" href="/construction-service">
                <span class="moreServiceCardLink">More</span>
                <p class="serviceNum">05</p>
                <p class="serviceTitle">Construction</p>
                <p class="serviceDescription">
                    Innovative and sustainable solutions
                </p>
            </a>

            <a class="mainServiceCard" href="/mortgage">
                <span class="moreServiceCardLink">More</span>
                <p class="serviceNum">06</p>
                <p class="serviceTitle">Mortgage</p>
                <p class="serviceDescription">Home financing for all needs</p>
            </a>
        </div>
    </section>
    <section class="areasBlock">
        <div class="areasTop">
            <div class="areasInfo">
                <p class="areasHeader">Explore the areas of the Costa del Sol</p>
                <p class="areasDescription">
                    Uncover the charm of Costa del Sol, a region known for its golden
                    beaches, picturesque towns, and vibrant lifestyle. From luxury
                    resorts to traditional Andalusian villages, Costa del Sol offers
                    diverse real estate opportunities. Whether you're looking for a
                    coastal getaway or an investment property, explore this sun-soaked
                    region and discover the perfect place to call home.
                </p>
            </div>
            <div class="areasInfoBgc">
                <p class="areasInfoBgcText">Areas</p>
            </div>
        </div>
        <div class="areasContainer">
            <a class="areaCard" href="/marbella" onclick="window.scrollTo(0, 0);">
                <img src="<?php echo get_template_directory_uri(); ?>/images/marbella.png" alt="marbella"
                    class="areaImg" />
                <span class="areaName">Marbella</span>
            </a>
            <a href="/benahavis" onclick="window.scrollTo(0, 0);" class="areaCard">
                <img src="<?php echo get_template_directory_uri(); ?>/images/benahavis.png" alt="benahavis"
                    class="areaImg" />
                <span class="areaName">Benahavis </span>
            </a>
            <a class="areaCard" href="/estepona" onclick="window.scrollTo(0, 0);">
                <img src="<?php echo get_template_directory_uri(); ?>/images/estepona.png" alt="estepona"
                    class="areaImg" />
                <span class="areaName">Estepona </span>
            </a>
            <a class="areaCard" href="/mijas" onclick="window.scrollTo(0, 0);">
                <img src="<?php echo get_template_directory_uri(); ?>/images/mijas.png" alt="mijas" class="areaImg" />
                <span class="areaName">Mijas </span>
            </a>
            <a class="areaCard" href="/sotogrande" onclick="window.scrollTo(0, 0);">
                <img src="<?php echo get_template_directory_uri(); ?>/images/sotogrande.png" alt="sotogrande"
                    class="areaImg" />
                <span class="areaName">Sotogrande</span>
            </a>
            <a class="areaCard" href="/ojen" onclick="window.scrollTo(0, 0);">
                <img src="<?php echo get_template_directory_uri(); ?>/images/ojen.png" alt="ojen" class="areaImg" />
                <span class="areaName">Ojen </span>
            </a>
        </div>
    </section>

    <div class="mainPageMapContainer">
        <div class="mainPageMapText">Explore projects</div>

        <section class="mapBlock">
            <div class="mapContainer">
                <svg width="100%" height="auto" viewBox="0 0 1440 601" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M0 577.5V599C0 600.105 0.895457 601 2.00003 601H1438C1439.1 601 1440 600.105 1440 599V304.391C1440 303.824 1439.76 303.283 1439.34 302.904L1435.36 299.328C1435.12 299.112 1434.84 298.958 1434.53 298.878L1419.75 295.063C1419.58 295.021 1419.41 295 1419.25 295H1402.23C1402.08 295 1401.92 294.982 1401.78 294.948L1387 291.5L1375.16 287.06C1375.05 287.02 1374.94 286.989 1374.83 286.968L1364.5 285L1348.5 281L1340.15 280.017C1340.05 280.006 1339.95 280.001 1339.85 280.005L1324.58 280.482C1324.2 280.494 1323.83 280.398 1323.5 280.205L1302 267.5L1280.18 252.127C1280.06 252.042 1279.93 251.972 1279.8 251.915L1268.16 247.066C1268.05 247.022 1267.95 246.969 1267.85 246.907L1257.13 240.08C1257.04 240.027 1256.97 239.986 1256.88 239.945C1251.66 237.579 1224.19 222.42 1222 220.5C1218.68 217.592 1191.08 222.207 1183.19 220.665C1182.74 220.577 1182.27 220.596 1181.85 220.772L1176.74 222.901C1176.58 222.967 1176.43 223.053 1176.29 223.157L1157.82 237.256C1157.61 237.417 1157.37 237.531 1157.11 237.612C1151.55 239.378 1147.55 247.435 1146 249.5C1144.52 251.467 1144.02 251.499 1141.73 254.354C1141.66 254.45 1141.57 254.54 1141.48 254.621L1122.06 271.509C1121.7 271.826 1121.23 272 1120.75 272H1102.02C1101.68 272 1101.34 272.088 1101.04 272.257L1093.65 276.415C1093.55 276.471 1093.45 276.537 1093.37 276.61L1088.17 280.859C1088.06 280.953 1087.93 281.033 1087.8 281.1L1078.15 285.924C1078.05 285.975 1077.95 286.034 1077.86 286.1L1070.68 291.366C1070.56 291.455 1070.45 291.558 1070.35 291.672L1061 302.5L1055.66 307.836C1055.56 307.945 1055.43 308.041 1055.3 308.122L1049.85 311.5L1035.7 318.404C1035.57 318.468 1035.43 318.517 1035.29 318.551L1023.74 321.323C1023.26 321.437 1022.85 321.721 1022.57 322.121L1020.42 325.183C1019.88 325.952 1018.88 326.196 1017.96 326.066C1014.9 325.636 1013.04 328 1010.5 328C1007.75 328 996.853 321.142 992.744 319.303C992.273 319.092 991.737 319.119 991.267 319.333L986.894 321.321C986.635 321.439 986.352 321.5 986.067 321.5H973.406C973.138 321.5 972.873 321.554 972.626 321.658L960.143 326.939C960.048 326.98 959.95 327.013 959.849 327.038L950.444 329.389C950.152 329.462 949.88 329.6 949.649 329.793L938.18 339.35C938.06 339.45 937.953 339.563 937.86 339.687L935.375 343C935.131 343.326 934.793 343.569 934.407 343.698L929.614 345.295C929.215 345.428 928.873 345.688 928.599 346.007C926.343 348.639 920.877 352.123 919 354C917.265 355.735 910.005 359.149 907.21 360.869C907.069 360.956 906.943 361.061 906.829 361.182L899.303 369.178C899.104 369.39 898.86 369.556 898.589 369.664L892.229 372.209C891.76 372.396 891.239 372.399 890.768 372.218L885.251 370.097C885.085 370.032 884.91 369.991 884.732 369.973L875.853 369.085C875.308 369.031 874.81 368.755 874.474 368.323L872.101 365.272C871.722 364.785 871.139 364.5 870.522 364.5H857.054C856.692 364.5 856.336 364.598 856.025 364.785L849.17 368.898C849.057 368.966 848.938 369.022 848.814 369.067L842 371.5L832.804 373.799C832.289 373.928 831.745 373.847 831.29 373.574L829.813 372.688C829.606 372.564 829.379 372.478 829.141 372.435L824.358 371.565C824.121 371.522 823.879 371.522 823.642 371.565L819.043 372.401C818.688 372.466 818.321 372.433 817.983 372.306L802.84 366.627C802.615 366.543 802.377 366.5 802.137 366.5H793.198C793.066 366.5 792.935 366.487 792.806 366.461L781.006 364.101C780.674 364.035 780.365 363.885 780.106 363.667L774 358.5C768.5 353 754.178 347.407 752.5 345C750.822 342.593 735.732 333.844 729.964 330L708 317L698.708 309.664C698.57 309.555 698.418 309.465 698.256 309.396L677.691 300.582C677.564 300.527 677.432 300.486 677.296 300.459L667.763 298.553C667.588 298.518 667.419 298.46 667.26 298.38L661.74 295.62C661.581 295.54 661.412 295.482 661.237 295.447L644.309 292.062C644.104 292.021 643.894 292.012 643.687 292.036L631.48 293.445C631.164 293.481 630.845 293.442 630.548 293.33L627.494 292.185C627.17 292.064 626.821 292.028 626.479 292.082L617.766 293.458C617.589 293.486 617.417 293.537 617.255 293.611L602.553 300.25C602.193 300.413 601.792 300.465 601.401 300.4L593.387 299.065C593.132 299.022 592.87 299.029 592.617 299.087L566.5 305L543.61 311.331C543.213 311.441 542.792 311.426 542.404 311.287L536 309L525.5 303.5L518.035 300.7C517.685 300.569 517.306 300.539 516.94 300.612L495.419 304.916C495.143 304.971 494.858 304.968 494.583 304.905L484.563 302.628C484.195 302.544 483.859 302.358 483.592 302.092L480.586 299.086C480.211 298.711 479.702 298.5 479.172 298.5H472.606C472.211 298.5 471.825 298.383 471.496 298.164L471.215 297.977C470.758 297.672 470.197 297.569 469.662 297.69L448.714 302.451C448.572 302.484 448.433 302.532 448.301 302.594L439.264 306.875C439.089 306.958 438.903 307.015 438.712 307.044L426.629 308.903C426.22 308.966 425.801 308.9 425.431 308.715L414.635 303.318C414.224 303.112 413.755 303.054 413.307 303.154L405.204 304.955C405.068 304.985 404.936 305.029 404.81 305.086L399.5 307.5L389.129 310.8C388.721 310.93 388.281 310.925 387.875 310.786L370.293 304.771C369.786 304.598 369.23 304.635 368.751 304.875L362.64 307.93C362.547 307.977 362.457 308.03 362.372 308.091L355.628 312.909C355.543 312.969 355.453 313.023 355.36 313.07L335.5 323L327.469 327.724C327.162 327.905 326.812 328 326.455 328H323.155C322.729 328 322.315 328.136 321.972 328.387L315.513 333.124C315.179 333.368 314.93 333.711 314.799 334.104L314.606 334.683C314.536 334.893 314.431 335.09 314.297 335.265L295 360.5L275.416 383.511C275.145 383.829 274.782 384.054 274.378 384.156L267.239 385.94C267.08 385.98 266.917 386 266.754 386H260.5L257.275 385.597C256.777 385.535 256.273 385.662 255.864 385.954L249.668 390.38C249.556 390.46 249.437 390.528 249.311 390.583L237.535 395.765C237.186 395.918 236.888 396.169 236.676 396.486L234.118 400.323C234.04 400.441 233.949 400.55 233.847 400.648L217 417L211.096 424.379C211.032 424.46 210.962 424.535 210.886 424.604L205.574 429.474C205.205 429.812 204.722 430 204.222 430H202.598C201.914 430 201.278 430.349 200.911 430.926L194.5 441L192.325 444.624C191.843 445.428 190.867 445.789 189.978 445.493L186.286 444.262C185.783 444.094 185.233 444.133 184.759 444.37L181.67 445.915C181.557 445.972 181.45 446.039 181.349 446.115L173.203 452.344C173.068 452.448 172.947 452.568 172.842 452.702L160.5 468.5L152.5 478L143.739 488.221C143.581 488.406 143.458 488.617 143.376 488.845L139.09 500.749C139.03 500.916 138.949 501.074 138.847 501.219L135.5 506L132 511.5C130.5 514 128.776 516.336 127 519C126.097 520.355 123.155 523.341 121.488 524.643C121.177 524.886 120.789 525 120.394 525H117.609C116.919 525 116.278 524.645 115.913 524.06L104.078 505.125C104.026 505.042 103.98 504.955 103.941 504.864L95.8559 486.317C95.6294 485.797 95.1929 485.398 94.655 485.218L82.3079 481.103C82.104 481.035 81.9123 480.934 81.7404 480.805L76.1661 476.625C76.0557 476.542 75.937 476.471 75.8119 476.412L69.3592 473.401C68.8154 473.147 68.1864 473.151 67.6458 473.411L55 479.5L47.8193 482.851C47.6081 482.95 47.4157 483.084 47.2509 483.249L40.7626 489.737C40.589 489.911 40.385 490.051 40.1606 490.151L36.5593 491.751C36.1948 491.913 35.887 492.181 35.6756 492.519L33.6386 495.778C33.5466 495.925 33.4741 496.084 33.4231 496.25L31.5954 502.19C31.5322 502.395 31.4363 502.589 31.3114 502.764L26.5912 509.372C26.5305 509.457 26.4765 509.547 26.4298 509.64L24.6688 513.163C24.5572 513.386 24.4884 513.628 24.4658 513.876L24.0195 518.785C24.0066 518.928 24.009 519.072 24.0268 519.214L24.9083 526.266C24.9675 526.74 24.8544 527.218 24.5899 527.615L24.3546 527.968C24.1331 528.3 23.7601 528.5 23.3608 528.5C22.8467 528.5 22.3903 528.829 22.2278 529.317L22.1439 529.568C22.0499 529.85 22.0383 530.153 22.1103 530.441L22.9233 533.693C22.9741 533.897 23.0566 534.091 23.1676 534.268L25.3324 537.732C25.4434 537.91 25.5259 538.104 25.5767 538.307L25.7598 539.039C25.9111 539.645 25.7711 540.286 25.3812 540.774L25.1183 541.102C24.4816 541.898 24.5452 543.045 25.2658 543.766L27.0675 545.568C27.6332 546.133 27.8073 546.982 27.5102 547.725L27.0982 548.754C27.033 548.917 26.9511 549.077 26.8253 549.2C25.2386 550.747 21.8812 547.519 21 548C17.3292 550.006 18.9258 548.883 16.5 550.5C15 551.5 15.8561 552.644 12.5 556C12.0043 556.496 6.59456 556.009 1.14239 556C1.04878 556 0.956409 555.978 0.872678 555.936C0.471739 555.736 0 556.027 0 556.476V577.5Z"
                        fill="url(#paint0_linear_272_5082)" />
                    <path
                        d="M1415 187L1420.95 188.859C1422.06 189.205 1422.64 190.419 1422.21 191.5L1419.52 198.349C1419.36 198.77 1419.05 199.123 1418.66 199.35L1413.96 202.06C1413.05 202.588 1412.7 203.738 1413.17 204.684L1415.86 210.079C1415.99 210.356 1416.07 210.661 1416.07 210.97V213.595C1416.07 214.438 1416.6 215.191 1417.39 215.477L1421.45 216.942C1422.35 217.266 1422.9 218.181 1422.75 219.125L1421.97 224.283C1421.94 224.427 1421.91 224.569 1421.85 224.705L1420.47 228.274C1420.09 229.248 1419.03 229.767 1418.03 229.466L1412.86 227.909C1412.62 227.838 1412.4 227.722 1412.2 227.581C1407.57 224.342 1397.9 225.226 1393.5 221.801C1392.5 221.025 1391.63 220.87 1390.99 220.883C1390.44 220.893 1390 220.552 1390 220V219V217.006C1390 216.674 1389.92 216.347 1389.76 216.055L1385.13 207.5L1383.27 204.013C1383.09 203.678 1383.02 203.299 1383.04 202.92L1383.43 197.802C1383.49 197.011 1384.02 196.33 1384.77 196.067L1387.36 195.156C1387.65 195.053 1387.92 194.883 1388.13 194.657C1393.13 189.334 1393.06 185.5 1394.73 185.5C1396.32 185.5 1402.93 183.345 1405.01 183.037C1405.27 182.998 1405.53 183.052 1405.77 183.154L1415 187Z"
                        fill="#EBEBEB" stroke="white" stroke-width="2" />
                    <path
                        d="M54.6911 478.201L67.6248 472.596C68.4398 472.243 68.9243 471.394 68.8141 470.513L68.5 468L68.0195 461.273C68.0066 461.092 67.9691 460.913 67.908 460.743L65.8553 454.995C65.633 454.372 65.7325 453.68 66.1213 453.146L68.8668 449.371C69.2621 448.827 69.358 448.121 69.122 447.492L68 444.5L66.5 439L65.262 435.286C65.0942 434.783 65.1333 434.233 65.3705 433.759L67.3687 429.763C67.4558 429.588 67.5169 429.403 67.5503 429.211L69.4374 418.36C69.4788 418.122 69.563 417.893 69.6859 417.685L75.3381 408.12C75.7405 407.439 75.7037 406.585 75.2441 405.941L72.5161 402.118C72.4598 402.04 72.4093 401.957 72.365 401.871L69.3493 396C68.3219 394 68.1164 392.3 67.2945 391.5C66.2671 390.5 63.8176 387.5 62.9876 386.5C62.1575 385.5 60.8063 384.359 59.589 383C58.2453 381.5 58.0479 380.5 56.5069 379C54.9658 377.5 54.9658 376 53.4247 374C51.8836 372 49.3151 368.5 48.2877 368C47.4658 367.6 42.1233 366 39.5548 365L27.894 360.559C27.7913 360.52 27.6906 360.471 27.5956 360.416C25.1517 359 24.6478 358.991 24.1438 358.5C23.3316 357.709 21.5753 354.5 21.0616 353C20.5479 351.5 20.0342 350.5 20.0342 350C20.0342 348.11 18.6586 346.667 17.6403 345.249C17.5228 345.085 17.4425 344.899 17.3522 344.718C16.6167 343.252 13.9681 342.596 13.3562 342C12.3288 341 10.1027 339.833 9.76027 339.5L5.65068 336.5L4.41672 335.699C4.21365 335.568 4.03619 335.4 3.89298 335.205L2.47168 333.268C1.97999 332.598 1.0095 332.517 0.413969 333.097C0.149298 333.355 0 333.708 0 334.078V480.566C0 482.222 1.94056 482.5 3.59589 482.5H4.77661C5.6112 482.5 6.358 481.982 6.65008 481.2L8.15837 477.163C8.19883 477.054 8.24797 476.95 8.30753 476.851C9.03165 475.646 10.5131 473.5 11.3014 473.5H16.4384H19.4035C20.1128 473.5 20.7677 473.876 21.1313 474.485C21.9078 475.786 22.9944 477.572 23.6301 478.5C24.0898 479.171 24.7851 480.082 25.4285 480.9C26.1235 481.784 27.4132 481.894 28.2635 481.158L31.0578 478.74C31.2415 478.581 31.4525 478.457 31.6807 478.374L35.113 477.121C35.3328 477.041 35.5649 477 35.7988 477H37.7007C38.5117 477 39.2423 476.51 39.5506 475.76L39.6967 475.405C39.9313 474.834 40.4162 474.403 41.0108 474.238L42.5571 473.808C43.2427 473.617 43.978 473.805 44.488 474.302L45.8969 475.673C46.1179 475.888 46.3856 476.049 46.6791 476.144L53.2831 478.269C53.7452 478.418 54.2456 478.394 54.6911 478.201Z"
                        fill="#EBEBEB" stroke="white" stroke-width="2" />
                    <path
                        d="M8.02136 242.675L10.8479 233.701C11.1532 232.732 12.1371 232.146 13.135 232.338L23.9969 234.438C24.2107 234.479 24.4163 234.555 24.6056 234.663C27.6352 236.386 33.4658 239.725 34.6686 240.5C36.2209 241.5 48.4485 244.665 52.7791 246.5C57.5 248.5 61.5756 249.5 64.1628 249.5C66.2326 249.5 70.3442 249 72 249C74.0698 249 82.4701 254.594 84.8605 255.5C87.445 256.479 89.8958 256.02 95.3731 255.531C95.6057 255.51 95.8421 255.531 96.0676 255.591L104.331 257.809C104.789 257.932 105.189 258.215 105.458 258.605L106.883 260.671C107.033 260.888 107.225 261.074 107.447 261.217L113.32 265L119.74 269.772C119.943 269.923 120.115 270.11 120.247 270.325L124.462 277.131C124.8 277.677 125.379 278.027 126.02 278.073L131.001 278.429C131.63 278.474 132.201 278.812 132.541 279.342L136.182 285.006C136.39 285.328 136.5 285.704 136.5 286.087V293V298.077C136.5 298.663 136.757 299.219 137.203 299.599L141.464 303.232C141.672 303.409 141.842 303.626 141.959 303.872C143.643 307.396 145.6 312.842 146 314C146.384 315.112 151.052 320.172 153.47 323.296C153.815 323.741 154.319 324.035 154.878 324.098L158.047 324.45C158.345 324.483 158.632 324.583 158.886 324.741L166.239 329.337C166.412 329.445 166.601 329.526 166.798 329.577L170.993 330.66C171.787 330.865 172.375 331.534 172.478 332.347L172.914 335.82C172.97 336.261 173.171 336.671 173.485 336.985L177.414 340.914C177.789 341.289 178 341.798 178 342.328V344.943C178 345.527 177.527 346 176.943 346C176.405 346 175.954 346.403 175.892 346.937L175.595 349.522C175.524 350.139 175.171 350.687 174.638 351.007L166.258 356.045C165.775 356.335 165.437 356.815 165.327 357.367L164 364L162.155 373.685C162.056 374.207 161.753 374.668 161.314 374.966L153.163 380.5L151.212 381.631C150.801 381.869 150.319 381.954 149.852 381.869L134.67 379.118C134.246 379.041 133.809 379.104 133.423 379.295L116.246 387.832C116.022 387.943 115.821 388.095 115.653 388.28L112.285 392L105.558 398L101.18 402.653C100.688 403.177 99.9524 403.396 99.2539 403.227L94.1744 402L89.1682 401.12C88.7242 401.042 88.2668 401.117 87.8703 401.331L77.2693 407.068C76.3121 407.586 75.1164 407.243 74.5787 406.297L71 400L67.9212 392.339C67.8311 392.115 67.701 391.909 67.5374 391.731L59.5058 383L55.5 378L49.5535 369.094C49.2971 368.71 48.9156 368.426 48.4739 368.292L39.3256 365.5L24.7493 359.672C24.4667 359.559 24.2132 359.385 24.0151 359.154C22.7484 357.677 20.6977 354.843 20.6977 353C20.6977 351.13 18.8889 347.658 17.8077 345.852C17.6677 345.619 17.4777 345.42 17.254 345.264L4.87191 336.65C4.72923 336.55 4.6001 336.433 4.48778 336.3L0.878552 332.038C0.348309 331.411 0.254376 330.525 0.641621 329.801L7.49896 316.991C7.67081 316.67 7.92704 316.402 8.24002 316.216L14.4884 312.5L20.6977 308.5L29.3516 304.518C30.4969 303.991 30.8764 302.55 30.1594 301.513C27.6474 297.88 24.3198 292.66 24.3198 291V288.5V276.808C24.3198 276.604 24.2886 276.401 24.2274 276.207L20.7804 265.263C20.7255 265.088 20.647 264.922 20.5469 264.769L14.4884 255.5L8.18438 244.254C7.91461 243.773 7.85562 243.202 8.02136 242.675Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M68.709 119.057L81.1203 98.9645C81.4847 98.3747 82.1285 98.0156 82.8218 98.0156H86.2584C86.6791 98.0156 87.089 98.1482 87.4299 98.3946L90.7617 100.802C90.9619 100.947 91.1337 101.128 91.2681 101.335L93.0729 104.118C93.4416 104.686 94.0732 105.029 94.7508 105.029H98.6189C99.111 105.029 99.5817 105.212 99.9624 105.524C102.738 107.797 108.799 111.542 114.98 111.542C123.299 111.542 117.06 108.536 119.139 108.536C120.778 108.536 125.913 101.733 128.386 98.1768C128.461 98.068 128.546 97.9693 128.641 97.8773L136.235 90.5598C136.608 90.2007 137.105 90 137.623 90H153.973H161.047C161.515 90 161.968 90.1645 162.328 90.4649L168.328 95.4759C169.052 96.0806 170.1 96.0971 170.843 95.5156L176.976 90.7139C177.54 90.2723 178.297 90.1661 178.961 90.4354L187.408 93.8626C187.645 93.9585 187.861 94.0987 188.044 94.2757L194.433 100.431C194.824 100.808 195.045 101.328 195.045 101.872V107.729C195.045 108.247 195.245 108.744 195.605 109.117L201.244 114.969C201.603 115.341 201.803 115.839 201.803 116.357V118.407C201.803 118.829 201.67 119.241 201.422 119.582L198.546 123.541C198.298 123.882 198.164 124.292 198.164 124.714V137.092V142.044C198.164 142.41 198.264 142.767 198.453 143.08L201.377 147.909C201.65 148.361 201.734 148.902 201.609 149.415L198.22 163.411C198.183 163.565 198.164 163.723 198.164 163.882V173.705C198.164 174.007 198.233 174.305 198.364 174.577L201.803 181.678L211.082 199.561C211.135 199.662 211.179 199.768 211.214 199.877L216.829 217.585C216.863 217.694 216.907 217.8 216.96 217.901L219.312 222.435C219.72 223.221 219.563 224.182 218.925 224.796L214.373 229.182C213.982 229.559 213.761 230.079 213.761 230.622V235.097C213.761 235.542 213.91 235.974 214.183 236.325L219.578 243.257C219.852 243.609 220 244.041 220 244.486V258.327V270.852V277.569C220 277.766 219.971 277.961 219.914 278.149L216.414 289.712C216.379 289.83 216.332 289.944 216.275 290.053L213.761 294.899L210.96 300.297C210.754 300.694 210.687 301.149 210.77 301.589L212.687 311.748C212.71 311.87 212.721 311.994 212.721 312.119V322.772C212.721 322.892 212.732 323.013 212.754 323.132L214.075 330.347C214.203 331.043 213.953 331.754 213.418 332.218L209.191 335.884C209.118 335.947 209.051 336.015 208.988 336.087L203.883 341.99L200.642 345.895C200.093 346.555 199.184 346.792 198.383 346.483L197.932 346.309C197.417 346.111 196.842 346.134 196.345 346.374L196.019 346.531C195.411 346.824 194.697 346.79 194.119 346.442L191.202 344.686C190.995 344.561 190.758 344.495 190.516 344.495C190.416 344.495 190.316 344.506 190.219 344.529L180.176 346.833C179.71 346.94 179.221 346.854 178.819 346.596C178.249 346.23 177.937 345.572 178.015 344.899L178.288 342.531C178.363 341.879 178.113 341.231 177.619 340.798L173.288 337.004C172.903 336.667 172.662 336.196 172.614 335.687L172.3 332.36C172.222 331.524 171.629 330.827 170.818 330.614L166.728 329.539C166.544 329.49 166.367 329.416 166.204 329.318L158.608 324.743C158.296 324.555 157.94 324.456 157.576 324.456H154.92C154.32 324.456 153.752 324.187 153.373 323.724L146.392 315.203C146.248 315.027 146.135 314.828 146.058 314.615L142.209 303.953C142.082 303.601 141.859 303.293 141.566 303.061L137.058 299.507C136.577 299.128 136.296 298.549 136.296 297.936V285.986C136.296 285.591 136.179 285.205 135.96 284.876L132.211 279.257C131.84 278.7 131.215 278.366 130.547 278.366H126.041C125.312 278.366 124.64 277.969 124.288 277.33L120.406 270.262C120.257 269.991 120.047 269.758 119.793 269.582L107.48 261.039C107.283 260.902 107.112 260.731 106.975 260.534L105.511 258.417C105.246 258.035 104.858 257.757 104.411 257.631L96.6174 255.422C96.3835 255.356 96.1396 255.333 95.8975 255.354L90.5448 255.823H85.8363C85.5141 255.823 85.1966 255.745 84.9109 255.596L73.303 249.537C73.0174 249.388 72.6999 249.31 72.3776 249.31H61.6888C61.5172 249.31 61.3464 249.288 61.1804 249.244L55.8977 247.856C55.7738 247.823 55.6533 247.779 55.5379 247.723L51.5522 245.803L34.5995 240.358C34.4639 240.314 34.3333 240.256 34.2101 240.185L24.2565 234.43C24.0848 234.331 23.8993 234.258 23.7061 234.213L12.5494 231.633C11.6423 231.423 11 230.616 11 229.685V228.77L11.5199 224.762V203.946C11.5199 203.477 11.6847 203.023 11.9855 202.663L26.597 185.185L37.9413 169.285C38.0035 169.198 38.0587 169.106 38.1062 169.01L43.1297 158.844C43.1989 158.704 43.2842 158.573 43.3839 158.453L53.5137 146.251C53.5923 146.157 53.662 146.055 53.7219 145.948L68.709 119.057Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M211.974 108.917L207.496 112.373C207.386 112.457 207.268 112.53 207.143 112.591L204.735 113.752C204.398 113.914 204.114 114.167 203.914 114.482L202 117.5L198.258 123.581C198.088 123.856 197.988 124.161 197.976 124.484C197.844 128.068 198 142.241 198 143C198 143.762 201.172 146.698 201.476 148.273C201.506 148.423 201.482 148.575 201.448 148.724L198.052 163.276C198.017 163.425 198 163.577 198 163.73V174.011C198 174.332 198.077 174.649 198.225 174.934L204.5 187L211.376 199.812C211.444 199.937 211.497 200.069 211.536 200.205L215.5 214L216.455 216.865C216.485 216.955 216.521 217.042 216.563 217.127L218 220L219.129 222.541C219.6 223.6 220.869 224.047 221.909 223.535C226.91 221.075 237.141 216.346 237.5 216C237.915 215.6 245.081 212.5 247.5 211.5L256.5 208.5L264.094 205.652C264.362 205.552 264.604 205.396 264.806 205.194L273.272 196.728C273.729 196.271 274.378 196.063 275.015 196.169L285.119 197.853C285.68 197.947 286.253 197.797 286.697 197.442L291 194L297.739 189.186C297.912 189.063 298.064 188.913 298.189 188.742L303.5 181.5L307.765 175.813C307.92 175.606 308.114 175.432 308.336 175.298L312.745 172.653C312.914 172.552 313.097 172.476 313.289 172.428L318.286 171.179C318.747 171.063 319.152 170.788 319.428 170.401L321.127 168.022C321.37 167.682 321.5 167.276 321.5 166.859V162.828C321.5 162.298 321.711 161.789 322.086 161.414L323.035 160.465C323.337 160.163 323.534 159.772 323.598 159.35L324.482 153.5L324.93 149.607C324.976 149.211 324.902 148.811 324.719 148.458L322.408 144L320.335 141L318.486 137.433C318.338 137.148 318.261 136.833 318.261 136.512V134.681C318.261 133.953 317.865 133.282 317.227 132.93L315.045 131.727C314.774 131.578 314.541 131.367 314.365 131.113L311.692 127.245C311.579 127.083 311.492 126.904 311.432 126.716L309.673 121.203C309.528 120.749 309.226 120.362 308.822 120.111L303.426 116.765C302.69 116.309 301.744 116.378 301.082 116.937L298.604 119.028C298.243 119.333 297.786 119.5 297.314 119.5H292.314C291.68 119.5 291.084 119.2 290.706 118.69L286.722 113.31C286.345 112.8 285.749 112.5 285.115 112.5H284.099C283.421 112.5 282.79 112.157 282.421 111.588L280.632 108.826C280.492 108.611 280.314 108.425 280.102 108.279C278.105 106.904 274.467 104.621 273.682 105C273.028 105.315 271.902 105.651 271.115 105.861C270.76 105.956 270.386 105.941 270.036 105.828L264.517 104.053C264.407 104.018 264.293 103.992 264.178 103.976L257.605 103.07C257.27 103.024 256.929 103.063 256.614 103.187C253.901 104.252 249.19 106.247 248.8 107C248.43 107.713 246.662 108.214 245.548 108.432C245.299 108.481 245.044 108.472 244.797 108.417L238.628 107.044C238.498 107.015 238.371 106.973 238.249 106.918L231.991 104.132C231.794 104.045 231.585 103.989 231.37 103.97C229.545 103.808 226.254 103.623 225.473 104C224.804 104.323 223.414 106.188 222.448 107.596C222.065 108.155 221.436 108.5 220.758 108.5H213.196C212.754 108.5 212.324 108.647 211.974 108.917Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M361.116 120.352L361.448 120.99L364.071 128.137C364.36 128.925 365.109 129.448 365.948 129.448H368.695C369.606 129.448 370.401 130.064 370.63 130.945L371.793 135.419L374.051 141.066C374.26 141.589 374.68 141.999 375.207 142.196L383.69 145.369L391.558 148.486C392.14 148.717 392.581 149.207 392.749 149.811L394.479 156.053C394.527 156.227 394.552 156.407 394.552 156.587V162.247C394.552 162.598 394.644 162.943 394.82 163.247L396.756 166.601C397.002 167.026 397.083 167.527 396.983 168.008L396.3 171.292C396.176 171.889 396.331 172.509 396.72 172.978L402.31 179.7L404.897 182.187L407.66 185.288C407.883 185.539 408.04 185.841 408.115 186.168L408.867 189.423C408.954 189.8 408.93 190.193 408.798 190.557L405.318 200.127C405.116 200.68 404.681 201.117 404.128 201.32L396.913 203.972C396.719 204.043 396.538 204.143 396.375 204.27L389 210L374.524 219.484C374.508 219.495 374.493 219.507 374.48 219.52C374.303 219.697 374 219.572 374 219.322V207.972C374 207.358 373.718 206.779 373.236 206.399L367.43 201.838C367.149 201.617 366.932 201.324 366.802 200.99L363.636 192.85C363.546 192.619 363.5 192.373 363.5 192.125V183.382C363.5 183.13 363.452 182.879 363.359 182.645L360.599 175.689C360.477 175.382 360.282 175.11 360.029 174.898L356.797 172.172C356.298 171.751 355.624 171.6 354.993 171.768L351.622 172.667C351.454 172.711 351.281 172.734 351.107 172.734H344.812C344.211 172.734 343.642 172.464 343.262 171.998L340.248 168.304C340.084 168.103 339.883 167.936 339.656 167.812L335.355 165.466C334.815 165.172 334.441 164.646 334.34 164.039L333.649 159.893C333.554 159.325 333.709 158.744 334.073 158.299L341.063 149.746C341.515 149.193 341.638 148.441 341.385 147.773L339.963 144.01C339.808 143.601 339.792 143.152 339.916 142.733L341.643 136.92C341.741 136.588 341.924 136.288 342.174 136.048L348.281 130.173C348.437 130.023 348.581 129.848 348.611 129.633C348.705 128.958 348.326 127.983 349.034 126.961C349.652 126.069 350.404 124.014 350.818 122.822C351.002 122.29 351.399 121.859 351.917 121.637L355.58 120.071C355.699 120.021 355.822 119.981 355.948 119.955L358.924 119.318C359.804 119.13 360.701 119.553 361.116 120.352Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M363.256 117.781L361.889 119.125C361.345 119.661 361.153 120.459 361.394 121.183L362.5 124.5L363.997 128.243C364.301 129.002 365.036 129.5 365.854 129.5H368.558C369.419 129.5 370.184 130.051 370.456 130.868L372 135.5L374.183 141.175C374.385 141.7 374.799 142.116 375.324 142.321L391.575 148.64C392.158 148.867 392.601 149.353 392.773 149.955L394.423 155.731C394.474 155.909 394.5 156.094 394.5 156.28V161.926C394.5 162.301 394.605 162.669 394.804 162.986L396.59 165.844C396.854 166.266 396.951 166.772 396.862 167.261L396.163 171.104C396.059 171.673 396.207 172.259 396.569 172.711L402 179.5L407.47 185.425C407.811 185.795 408 186.279 408 186.782V187.76C408 189.115 409.319 190.078 410.61 189.665L415.812 188L423.148 185.137C423.381 185.047 423.629 185.003 423.878 184.993C426.629 184.885 428.743 183.561 430.652 181.824C430.883 181.613 431.156 181.453 431.455 181.363L434.575 180.428C435.421 180.174 436 179.395 436 178.512V168.715C436 168.253 436.179 167.813 436.397 167.406C437.752 164.869 436 161.109 436 160V154.781C436 154.279 436.189 153.795 436.53 153.425L441.708 147.816C441.901 147.608 442.046 147.361 442.136 147.092L444.325 140.526C444.439 140.182 444.458 139.813 444.38 139.459L442.848 132.566C442.645 131.651 441.833 131 440.896 131H436.202C434.936 131 433.997 129.829 433.975 128.563C433.965 128.001 433.903 127.447 433.75 127C433.238 125.5 429.65 122 427.6 121C425.96 120.2 421.792 120 419.912 120H415.705C414.85 120 414.089 119.456 413.813 118.647L412.225 114C411.712 111.5 410.688 106.3 410.688 105.5V99.3429C410.688 98.8039 410.47 98.2878 410.084 97.9114L406.713 94.6228C406.63 94.5411 406.553 94.4522 406.485 94.3571L403.268 89.8734C403.092 89.6277 402.862 89.4251 402.596 89.281L399.683 87.702C398.912 87.2845 397.96 87.417 397.333 88.0288L393.775 91.5L391.39 94.2927C391.272 94.4303 391.174 94.5831 391.097 94.7471L389.188 98.8446C388.86 99.5494 388.153 100 387.375 100H382.962C382.658 100 382.358 100.069 382.085 100.202L378.402 101.999C377.766 102.309 377.339 102.933 377.294 103.64C377.146 105.967 377.028 109.322 377.375 110C377.697 110.629 375.293 111.506 373.255 112.095C372.369 112.351 371.738 113.149 371.738 114.071V115.481C371.738 116.379 371.139 117.167 370.275 117.408L368.653 117.86C368.323 117.952 367.975 117.957 367.642 117.876L365.132 117.264C364.459 117.1 363.75 117.296 363.256 117.781Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M257.223 94.528L258.021 92.7073C258.34 91.9803 259.059 91.5106 259.853 91.5106H266.068C266.206 91.5106 266.343 91.5249 266.478 91.5531L273.287 92.9788C273.422 93.007 273.559 93.0213 273.697 93.0213H278.813C279.042 93.0213 279.267 93.0601 279.482 93.1358C281.469 93.834 285.077 95.0355 285.857 95.0355C286.888 95.0355 290.495 92.5177 291.526 91.5106C292.556 90.5035 295.648 90 297.709 90C299.77 90 300.286 91.5106 301.832 91.5106C303.068 91.5106 305.439 95.2033 306.469 97.0496L310.592 102.589L314.911 108.216C315.12 108.488 315.394 108.701 315.709 108.837C318.613 110.093 323.977 112.524 325.536 113.667C327.597 115.177 331.719 113.667 334.811 113.667C337.092 113.667 338.964 114.523 339.781 115.051C339.905 115.132 340.033 115.207 340.169 115.266L343.812 116.848C344.316 117.067 344.889 117.069 345.394 116.853L351.638 114.183C352.372 113.87 353.222 114.022 353.801 114.571L356.58 117.206C357.558 118.133 357.033 119.781 355.699 119.972C355.567 119.99 355.438 120.026 355.314 120.076L352.075 121.406C351.58 121.609 351.187 122.002 350.984 122.498L349.389 126.395C349.29 126.635 349.24 126.893 349.24 127.152V128.938C349.24 129.477 349.023 129.992 348.638 130.369L342.4 136.464C342.155 136.704 341.975 137.003 341.878 137.333L340.151 143.243C340.03 143.656 340.045 144.098 340.196 144.501L341.611 148.305C341.867 148.991 341.726 149.762 341.246 150.315L333.695 158.995C333.416 159.316 333.041 159.54 332.626 159.633L327.058 160.889C326.735 160.962 326.399 160.953 326.081 160.864L324.738 160.489C323.733 160.209 323.113 159.204 323.312 158.18L324.877 150.154C324.969 149.68 324.887 149.188 324.645 148.77L318.59 138.302C318.414 137.997 318.321 137.652 318.321 137.3V134.982C318.321 134.258 317.929 133.59 317.296 133.236L315.075 131.995C314.837 131.863 314.629 131.683 314.463 131.467L311.837 128.046C311.695 127.861 311.587 127.652 311.516 127.429L309.782 121.921C309.64 121.469 309.34 121.081 308.938 120.829L303.497 117.411C302.803 116.974 301.913 117.006 301.251 117.491L298.681 119.375C298.382 119.593 298.03 119.725 297.661 119.748C296.112 119.844 291.85 120.026 291.01 119.206C290.106 118.322 288.921 116.067 287.149 113.668C286.687 113.043 285.885 112.801 285.109 112.784C284.487 112.771 283.769 112.633 283.281 112.156C282.323 111.22 281.963 110.338 280.947 108.954C280.789 108.74 280.585 108.563 280.354 108.431L275.289 105.545C274.799 105.265 274.215 105.206 273.679 105.38L272.024 105.92C271.636 106.046 271.219 106.051 270.829 105.933L264.867 104.14C264.775 104.113 264.682 104.092 264.588 104.078L259.525 103.317C258.641 103.184 257.952 102.48 257.839 101.593L257.07 95.5851C257.024 95.2254 257.077 94.8601 257.223 94.528Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M475.358 90.3072C476.901 90.8226 479.091 91.6135 480.302 92.2467C480.585 92.3948 480.809 92.6306 480.971 92.9062L483.153 96.6206C483.285 96.8466 483.46 97.0433 483.669 97.2024C485.563 98.6491 489.384 101.672 491.768 103.926C494.105 106.137 497.525 108.234 499.271 109.19C499.524 109.329 499.747 109.514 499.92 109.746C501.381 111.706 503.862 115.483 503.862 117.354C503.862 119.841 501.233 121.831 501.759 124.317L503.819 134.061C503.848 134.197 503.862 134.335 503.862 134.474V142.132C503.862 143.059 504.5 143.865 505.402 144.078L522.363 148.089C524.088 148.497 524.469 150.781 522.969 151.727L519.503 153.912C519.246 154.074 518.955 154.176 518.653 154.209L505.44 155.651C502.811 156.148 497.867 156.844 497.026 157.64C496.256 158.368 494.841 163.453 494.472 165.583C494.413 165.919 494.294 166.242 494.097 166.52L492.409 168.916C492.332 169.025 492.245 169.125 492.148 169.217L489.138 172.063L478.304 180.359C478.165 180.465 478.014 180.552 477.853 180.619L470.088 183.832C469.829 183.939 469.537 183.932 469.284 183.812C468.894 183.628 468.668 183.213 468.725 182.785L469.627 175.959C469.663 175.686 469.642 175.408 469.566 175.143L468.2 170.407C468.136 170.187 468.036 169.979 467.902 169.793L460.223 159.113C459.623 158.278 459.755 157.124 460.514 156.429C463.075 154.086 466.526 150.683 466.526 149.683C466.526 148.52 468.52 145.379 469.596 143.836C469.653 143.755 469.704 143.669 469.749 143.58L473.776 135.538C474.158 134.776 474.016 133.856 473.42 133.247C471.124 130.902 467.614 127.336 466.526 126.307C465.545 125.379 464.077 123.79 463.06 122.661C462.597 122.147 462.441 121.428 462.641 120.765L464.235 115.491C464.357 115.086 464.605 114.73 464.942 114.475L467.939 112.208C468.875 111.499 469.003 110.14 468.214 109.27L466.623 107.514C466.559 107.443 466.489 107.377 466.416 107.316L462.456 104.039C462.365 103.964 462.281 103.881 462.206 103.79C460.782 102.073 458.345 98.5124 459.164 96.963C459.688 95.9733 460.509 95.958 461.224 96.2475C461.964 96.5471 462.794 96.7587 463.528 96.4434L467.909 94.5598C468.039 94.5042 468.162 94.4351 468.277 94.3537L473.604 90.575C474.114 90.2128 474.765 90.1089 475.358 90.3072Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M443.378 94.9602C444.984 94.5814 449.899 91.168 452.49 89.2669C452.738 89.0845 453.023 88.9617 453.326 88.9071L463.464 87.0843C463.772 87.0289 464.089 87.0466 464.389 87.1361L470.207 88.8705C471.769 89.336 472.148 91.3738 470.858 92.37L468.321 94.3297C468.206 94.4181 468.083 94.4938 467.952 94.5555L463.586 96.6163C463.131 96.831 462.612 96.8664 462.132 96.7154L461.168 96.412C460.377 96.1632 459.539 96.625 459.327 97.4263C459.238 97.7612 459.272 98.1168 459.422 98.429L461.619 102.992C461.754 103.272 461.952 103.517 462.199 103.707L467.429 107.747C467.557 107.846 467.672 107.959 467.773 108.086L468.617 109.148C468.988 109.615 469.131 110.223 469.008 110.807L468.843 111.582C468.736 112.089 468.435 112.535 468.005 112.825L465.557 114.476C465.187 114.725 464.911 115.091 464.773 115.515L463.237 120.228C463.015 120.909 463.174 121.656 463.654 122.188L474.038 133.695C474.613 134.332 474.717 135.265 474.298 136.013L470.257 143.219L467.187 148.531C467.126 148.638 467.074 148.75 467.033 148.866L466.636 149.99C466.591 150.119 466.532 150.243 466.461 150.36L464.647 153.356C464.523 153.562 464.363 153.743 464.175 153.891L461.142 156.283C460.333 156.921 460.141 158.069 460.698 158.935L464.986 165.607L467.974 169.838C468.09 170.001 468.18 170.181 468.242 170.372L470.091 176.042C470.199 176.376 470.218 176.733 470.146 177.077L468.995 182.508C468.807 183.396 468.044 184.046 467.138 184.091L449.277 184.979C448.925 184.996 448.649 185.287 448.649 185.639C448.649 186.191 448.013 186.5 447.579 186.158L442.635 182.269C442.43 182.108 442.195 181.988 441.944 181.917L437.178 180.567C437.096 180.544 437.011 180.532 436.926 180.532C436.414 180.532 436 180.118 436 179.607V168.998C436 168.73 436.054 168.465 436.158 168.218L436.823 166.65C436.974 166.294 437.018 165.902 436.951 165.522L436.03 160.307C436.01 160.192 436 160.076 436 159.959V154.937C436 154.44 436.185 153.96 436.519 153.592L442.021 147.533C442.221 147.313 442.369 147.052 442.455 146.768L444.277 140.748C444.379 140.411 444.39 140.053 444.309 139.711L442.49 131.981C442.383 131.527 442.091 131.14 441.859 130.735C440.19 127.824 443.378 118.458 443.378 117.348C443.378 115.856 438.635 111.876 438.635 109.388C438.635 108.191 439.779 106.935 441.034 105.942C442.112 105.091 442.339 103.432 441.341 102.489L436.527 97.9453C435.473 96.9502 441.27 95.4577 443.378 94.9602Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M601.354 98.9798H590.499C589.982 98.9798 589.485 99.1803 589.112 99.5391L588.658 99.9764L585.295 102.495C584.54 103.06 584.283 104.077 584.678 104.934L587.983 112.093C588.087 112.319 588.232 112.523 588.411 112.695L595.401 119.425C596.012 120.014 596.186 120.924 595.834 121.696L587.362 140.276C587.195 140.642 587.142 141.051 587.211 141.447L588.069 146.406C588.116 146.678 588.219 146.937 588.371 147.167L591.663 152.149C591.73 152.249 591.805 152.343 591.888 152.43L597.417 158.198C597.774 158.57 597.974 159.066 597.974 159.582V164.004C597.974 164.173 597.952 164.342 597.909 164.506L596.466 170.064C596.436 170.181 596.417 170.299 596.408 170.419L595.408 183.893C595.393 184.091 595.349 184.286 595.277 184.471L594.169 187.318C593.956 187.864 593.993 188.476 594.271 188.992L601.079 201.633L602.303 204.776C602.512 205.312 602.479 205.912 602.214 206.423L600.629 209.477C600.584 209.563 600.545 209.652 600.514 209.744L599.354 213.093C599.138 213.717 599.244 214.408 599.638 214.939L600.967 216.731C601.361 217.262 601.467 217.953 601.251 218.577L599.316 224.166C599.121 224.729 599.187 225.348 599.495 225.857L602.632 231.034L605.013 234.09C605.436 234.633 605.423 235.397 604.984 235.927C604.34 236.702 604.653 237.881 605.597 238.234L612.643 240.873C612.868 240.957 613.105 241 613.345 241H626.797C626.903 241 627.009 240.992 627.114 240.975L648.356 237.566C648.579 237.53 648.795 237.457 648.993 237.349L656.845 233.084C656.948 233.028 657.056 232.981 657.167 232.944L658.052 232.649C658.347 232.551 658.614 232.386 658.834 232.166L670 221L692.613 193.471C692.865 193.164 693.203 192.939 693.584 192.825L697.468 191.66C697.816 191.555 698.129 191.358 698.373 191.089L701.986 187.116C702.586 186.455 702.676 185.477 702.206 184.718L699.412 180.205L696.825 176.219L690.935 165.823C690.727 165.455 690.64 165.029 690.689 164.608L692.684 147.316V144.564C692.684 143.569 691.955 142.728 690.975 142.562C687.238 141.926 681.68 140.708 680.263 139.343C678.193 137.35 676.123 141.337 675.088 141.337H668.289C667.185 141.337 666.289 140.441 666.289 139.337V136.588C666.289 135.833 665.865 135.143 665.191 134.802C661.322 132.843 654.996 129.602 653.868 128.879C652.71 128.135 646.365 122.426 642.715 119.099C642.242 118.668 641.594 118.489 640.968 118.616L632.819 120.268C632.374 120.358 631.912 120.298 631.514 120.078C628.803 118.583 624.368 115.516 624.368 112.933V104.697C624.368 104.222 624.2 103.764 623.892 103.403L615.652 93.7049C615.272 93.2577 614.714 93 614.128 93H609.602C609.113 93 608.64 93.1797 608.274 93.5051L602.682 98.4747C602.316 98.8001 601.843 98.9798 601.354 98.9798Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M699.439 136.065L692.729 142.46C692.333 142.837 692.109 143.36 692.109 143.907V147.4C692.109 147.516 692.099 147.631 692.079 147.745L691.582 150.589L690.07 164.517C690.025 164.936 690.113 165.36 690.323 165.726L696.327 176.218L698.871 180.098C698.933 180.191 698.986 180.29 699.031 180.393L700.928 184.731C701.31 185.605 702.29 186.048 703.198 185.757C703.708 185.594 704.263 185.658 704.722 185.933L706.06 186.736C706.349 186.909 706.589 187.152 706.759 187.443L709.421 192.008C709.78 192.622 710.437 193 711.149 193H715.175C715.39 193 715.604 192.965 715.808 192.897L717.868 192.211C718.278 192.074 718.722 192.074 719.132 192.211L728.262 195.254C728.737 195.412 729.135 195.743 729.378 196.18L731.306 199.651C731.434 199.881 731.606 200.084 731.813 200.248L745.586 211.154C745.787 211.314 746.018 211.433 746.265 211.506L751.981 213.182C752.472 213.326 752.897 213.654 753.016 214.152C753.543 216.339 753.273 221.18 753.273 222.452C753.273 223.909 755.354 224.918 755.493 227.254C755.502 227.417 755.48 227.58 755.44 227.739L755.231 228.576C755.085 229.161 755.21 229.78 755.571 230.262L755.899 230.698C756.277 231.203 756.871 231.499 757.502 231.498L757.797 231.498C757.944 231.498 758.091 231.481 758.234 231.449L777.324 227.14C777.787 227.035 778.182 226.732 778.403 226.311C778.52 226.087 778.688 225.895 778.891 225.744C781.149 224.07 785.811 220.085 787.018 218.934C788.6 217.426 788.073 216.924 789.655 214.914C791.236 212.904 789.655 209.888 790.182 208.381C790.604 207.175 796.158 202.853 797.564 200.843L802.065 193.216C802.225 192.944 802.448 192.714 802.715 192.544L804.761 191.244C805.216 190.955 805.535 190.494 805.646 189.967L805.957 188.482C805.986 188.347 806 188.213 806 188.075V174.208C806 173.203 802.836 170.69 802.836 168.68C802.836 167.368 802.485 161.954 802.356 159.367C802.318 158.607 801.877 157.914 801.195 157.576L788.492 151.298C788.216 151.162 787.913 151.091 787.606 151.091H783.723C783.137 151.091 782.581 151.348 782.201 151.794L776.247 158.779C776.048 159.011 775.8 159.195 775.52 159.316L771.103 161.23C770.503 161.49 769.814 161.44 769.258 161.097L761.182 156.117C757.667 153.604 750.425 148.277 749.582 147.071C748.527 145.563 748 144.056 747.473 141.543C747.082 139.683 745.457 137.966 744.521 137.189C744.382 137.074 744.224 136.986 744.057 136.919L734.649 133.144C734.413 133.049 734.16 133 733.905 133H725.953C725.545 133 725.148 133.124 724.813 133.356L720.16 136.581C719.753 136.864 719.255 136.985 718.763 136.921L707.927 135.513H700.819C700.305 135.513 699.811 135.71 699.439 136.065Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M807.779 94.1682L799.82 98.4344C799.171 98.7827 798.765 99.46 798.765 100.197V104.957C798.765 105.313 798.86 105.662 799.039 105.968L805.228 116.532C805.407 116.838 805.502 117.187 805.501 117.542C805.488 120.532 805.374 125.872 804.984 127C804.569 128.2 802.738 132.5 801.874 134.5L798.923 143.992C798.82 144.325 798.805 144.679 798.881 145.019L801.837 158.332C801.862 158.444 801.877 158.557 801.883 158.672L802.368 168.98C802.384 169.321 802.487 169.652 802.668 169.942L805.2 174.015C805.398 174.332 805.502 174.695 805.502 175.068V188.5C805.502 190.276 803.596 191.92 802.322 192.733C802.033 192.917 801.78 193.153 801.599 193.443L797.306 200.347C797.242 200.449 797.17 200.545 797.089 200.634L790.474 207.928C790.14 208.296 789.955 208.775 789.955 209.272V213.429C789.955 213.802 789.851 214.168 789.654 214.485L787.007 218.741C786.9 218.913 786.768 219.067 786.616 219.199L779.06 225.721C778.039 226.603 778.166 228.223 779.313 228.935L783.771 231.7C784.087 231.896 784.452 232 784.825 232H793.583L798.176 231.557C798.561 231.52 798.948 231.595 799.29 231.773L804.813 234.642C805.255 234.872 805.593 235.263 805.756 235.734C805.925 236.224 806.283 236.627 806.75 236.852L807.496 237.212C807.884 237.399 808.321 237.456 808.744 237.374L809.872 237.157C810.392 237.056 810.931 237.167 811.37 237.463L815.63 240.341C815.787 240.446 815.958 240.529 816.137 240.587L821.709 242.379C821.957 242.459 822.188 242.587 822.387 242.755L825.774 245.614C826.072 245.866 826.437 246.025 826.825 246.072L830.377 246.5H842.902C843.186 246.5 843.465 246.56 843.724 246.676L848.098 248.646C849.467 249.262 851.002 248.206 850.916 246.707L850.63 241.75C850.602 241.266 850.771 240.788 851.226 240.623C852.369 240.208 854.651 240 856.287 240C858.002 240 861.489 239.316 862.937 238.514C863.389 238.263 863.461 237.723 863.314 237.227L861.47 231L858.12 221.766C857.942 221.275 857.963 220.734 858.179 220.258L861.291 213.394C861.409 213.134 861.47 212.853 861.47 212.568V211.92C861.47 211.336 861.725 210.781 862.168 210.401L870.526 203.233C870.706 203.079 870.909 202.957 871.133 202.88C873.45 202.084 877.485 201.262 880.644 200.5C883.893 199.716 887.572 196.15 887.884 192.715C887.897 192.572 887.918 192.43 887.955 192.292L890.895 181.42C890.969 181.143 891.103 180.886 891.286 180.665L894.793 176.435C895.029 176.15 895.339 175.937 895.688 175.818L902.555 173.48C903.391 173.195 903.941 172.395 903.909 171.513L903.445 159V151.236C903.445 151.079 903.464 150.923 903.5 150.771L904.651 145.959C904.858 145.095 904.469 144.197 903.696 143.757L894.265 138.38C893.837 138.135 893.513 137.741 893.358 137.272L889.656 126.11C889.524 125.713 889.52 125.285 889.644 124.886L890.785 121.217C890.929 120.755 891.236 120.36 891.648 120.107L894.508 118.351C895.622 117.667 895.791 116.115 894.85 115.207L893.853 114.245C893.685 114.083 893.547 113.893 893.444 113.683L889.945 106.507C889.64 105.882 889.682 105.142 890.056 104.555L893.285 99.492C893.49 99.1707 893.599 98.7976 893.599 98.4165V94C893.599 92.8954 892.704 92 891.6 92H886.344C885.31 92 884.49 90.7025 883.936 89.3217C883.468 88.1538 882.156 87.4526 880.996 87.9393L872.17 91.6419C871.628 91.869 871.014 91.8467 870.49 91.5808L861.713 87.1237C861.552 87.0416 861.385 86.983 861.207 86.9473C852.825 85.2641 836.163 82 834.522 82C832.915 82 821.11 85.1333 814.882 86.8431C814.509 86.9454 814.175 87.1537 813.919 87.4425L808.33 93.7338C808.173 93.9099 807.987 94.057 807.779 94.1682Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M909.11 143.055L906.389 143.706C905.646 143.884 905.069 144.469 904.902 145.214L903.662 150.754C903.63 150.897 903.613 151.044 903.613 151.191V165.415V171.48C903.613 172.324 903.083 173.077 902.289 173.362L895.796 175.692C895.461 175.812 895.165 176.019 894.937 176.292L891.408 180.513C891.219 180.739 891.083 181.003 891.008 181.288C890.103 184.735 888.397 191.051 887.998 191.815C887.61 192.558 883.872 197.113 881.681 199.744C881.389 200.094 880.988 200.332 880.542 200.422L871.788 202.185C871.494 202.245 871.218 202.368 870.979 202.55C867.586 205.142 861.451 210.202 861.451 211.74C861.451 213.732 857.808 219.709 857.808 220.706C857.808 221.503 860.237 227.679 861.451 230.668L862.958 236.074C863.269 237.191 862.569 238.337 861.433 238.57L856.445 239.593C856.313 239.62 856.178 239.634 856.043 239.634H852.119C850.969 239.634 850.056 240.602 850.123 241.75L850.405 246.607C850.469 247.708 851.412 248.55 852.514 248.488L858.502 248.151C859.055 248.12 859.597 248.319 859.997 248.703L861.715 250.346C862.2 250.811 862.887 251.001 863.542 250.851L873.148 248.663C873.331 248.621 873.518 248.605 873.705 248.616L881.295 249.043C881.911 249.078 882.509 248.826 882.915 248.36L884.474 246.57C884.735 246.27 885.08 246.054 885.464 245.951L897.38 242.759C897.713 242.67 898.063 242.668 898.397 242.754L910.81 245.952C911.208 246.054 911.564 246.277 911.831 246.589L915.969 251.428C916.06 251.535 916.162 251.632 916.273 251.717L921.18 255.473C921.267 255.54 921.36 255.6 921.457 255.651L925.02 257.545C925.627 257.868 926.365 257.865 926.918 257.456C929.193 255.772 931.324 252.906 932.242 251.589C933.283 250.094 935.886 248.102 936.927 248.102C937.643 248.102 940.08 250.683 941.521 252.355C941.914 252.811 942.481 253.083 943.083 253.083H946.56C946.73 253.083 946.9 253.061 947.065 253.018L951.661 251.819C952.221 251.673 952.816 251.776 953.294 252.103L955.941 253.912C956.103 254.023 956.248 254.157 956.371 254.31L966.473 266.877C966.555 266.979 966.627 267.088 966.687 267.204L968.833 271.311C969.61 272.798 971.761 272.726 972.436 271.191L974.508 266.482C974.769 265.889 975.302 265.458 975.937 265.328L981.845 264.117C982.088 264.067 982.337 264.063 982.58 264.104L990.637 265.464C990.916 265.511 991.182 265.617 991.417 265.775L995.518 268.522C995.994 268.84 996.583 268.94 997.136 268.795L1001.65 267.617C1001.88 267.558 1002.11 267.539 1002.34 267.56L1011.65 268.409C1012.43 268.479 1013.17 268.094 1013.56 267.421L1015.34 264.36C1015.46 264.149 1015.62 263.963 1015.81 263.81L1022.18 258.652C1022.25 258.592 1022.32 258.528 1022.39 258.458L1025.96 254.61C1026.28 254.267 1026.71 254.047 1027.17 253.988L1034.26 253.083C1035.3 253.083 1037.49 255.374 1037.91 254.577C1038.31 253.797 1046.91 251.201 1049.71 248.755C1049.83 248.653 1049.95 248.56 1050.08 248.482L1056.45 244.733C1056.58 244.655 1056.7 244.561 1056.81 244.455L1060.71 240.729C1060.78 240.663 1060.84 240.593 1060.9 240.518L1066.83 232.944C1066.98 232.756 1067.16 232.597 1067.36 232.472L1079.75 224.888C1079.96 224.758 1080.15 224.588 1080.3 224.389L1090.24 211.255C1090.7 210.639 1090.77 209.808 1090.41 209.122L1090.36 209.026C1090.11 208.533 1089.65 208.169 1089.12 208.023L1082.93 206.331C1082.76 206.284 1082.58 206.26 1082.4 206.26H1070.65C1070.34 206.26 1070.03 206.188 1069.76 206.05L1058.42 200.392C1058.28 200.319 1058.15 200.23 1058.02 200.126L1049.81 193.142C1049.22 192.637 1048.97 191.832 1049.18 191.081L1050.77 185.39C1050.87 185.031 1050.87 184.652 1050.76 184.295L1048.52 176.584C1048.39 176.127 1048.1 175.732 1047.7 175.47L1039.99 170.396L1038.17 169.006C1037.68 168.627 1037.03 168.5 1036.43 168.665L1033.98 169.336C1033.82 169.378 1033.67 169.44 1033.53 169.518C1031.38 170.719 1027.26 173 1026.46 173.385C1025.68 173.758 1019.65 175.912 1016.18 177.137C1015.76 177.288 1015.4 177.577 1015.15 177.96C1013.49 180.612 1010.57 185.228 1009.8 186.336C1008.76 187.83 1004.07 186.336 1003.55 184.842C1003.19 183.798 999.63 181.163 997.23 179.515C996.637 179.108 995.869 179.065 995.227 179.39L987.843 183.131C987.563 183.273 987.255 183.347 986.941 183.347H977.006C975.445 183.347 974.404 182.351 973.363 180.857C972.624 179.796 969.1 178.396 966.86 177.63C966.359 177.458 965.811 177.506 965.34 177.749L960.263 180.365C959.667 180.672 958.957 180.663 958.379 180.323C956.162 179.023 952.903 176.912 952.542 175.875C952.022 174.381 944.214 167.408 943.173 167.408H937.447C935.886 167.408 930.16 165.415 928.598 163.921C927.037 162.426 928.598 161.43 928.598 160.434C928.598 159.438 924.434 151.966 922.873 149.475C922.224 148.441 922.108 147.092 922.22 145.849C922.347 144.446 921.351 143 919.942 143H909.57C909.414 143 909.262 143.018 909.11 143.055Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M1309.3 209.49L1313.19 208.464C1313.87 208.285 1314.44 208.993 1314.12 209.615C1314 209.848 1314 210.124 1314.12 210.357L1314.81 211.698C1314.9 211.879 1314.97 212.075 1315.01 212.277L1315.87 217.286C1315.94 217.705 1316.14 218.089 1316.45 218.384L1317.63 219.524C1317.89 219.781 1318.08 220.105 1318.18 220.462L1318.55 221.902C1319.06 223.392 1323.07 222.895 1324.71 222.895C1326.77 222.895 1330.73 219.42 1334.47 219.42C1338.06 219.42 1353.7 218.341 1352.5 219.5C1349.93 222.479 1345.71 239.3 1344.07 242.08C1342.01 245.556 1341.65 246.979 1343 249.5C1343.79 250.974 1345.57 253.084 1346.79 254.291C1347.38 254.865 1347.75 255.701 1347.56 256.497C1346.97 258.909 1345.59 262.119 1343.2 262.119C1340.32 262.119 1340.85 266.934 1341.5 269.5C1342.05 271.69 1341.62 274.399 1341 277.417C1340.81 278.341 1339.99 279 1339.05 279H1324.22C1323.87 279 1323.52 278.908 1323.22 278.735L1307.25 269.566L1291.33 258.643L1281.21 252.123C1280.1 251.407 1279.97 249.83 1280.96 248.95L1285.26 245.116C1285.53 244.871 1285.73 244.555 1285.84 244.202L1288.98 233.809C1289.16 233.191 1289.63 232.702 1290.24 232.493L1296.39 230.397C1297.32 230.08 1297.88 229.133 1297.71 228.165L1297.62 227.611C1297.54 227.132 1297.28 226.699 1296.9 226.393L1295.25 225.063C1294.72 224.64 1294.45 223.98 1294.51 223.309L1295.31 215.263C1295.38 214.471 1295.93 213.8 1296.68 213.556L1309.3 209.49Z"
                        fill="#EBEBEB" stroke="white" stroke-width="2" />
                    <path
                        d="M1316 218C1315.09 217.114 1314.63 212.298 1314.17 210.519C1314.09 210.17 1314.01 209.81 1314.03 209.45L1314.48 202.376C1314.49 202.127 1314.55 201.884 1314.66 201.658L1320.64 188.782C1320.87 188.283 1321.3 187.901 1321.82 187.727L1322.19 187.603C1322.4 187.535 1322.61 187.5 1322.82 187.5H1327.67C1328.2 187.5 1328.71 187.289 1329.09 186.914L1335.25 180.75C1335.72 180.281 1336.39 180.075 1337.04 180.199L1343.65 181.466C1343.77 181.489 1343.89 181.522 1344 181.566L1346.09 182.378C1346.3 182.459 1346.49 182.574 1346.66 182.718L1350.41 185.907C1350.49 185.969 1350.56 186.027 1350.65 186.078C1353.44 187.841 1353.53 188.106 1355.16 188.5C1357.21 189 1356.97 199 1358 200.5C1359.03 202 1356.01 204 1355.5 205C1354.99 206 1352.5 210 1352.5 213C1352.5 214.314 1352.89 215.538 1353.36 216.54C1353.86 217.598 1353.48 218.919 1352.4 219.362C1352.18 219.453 1351.94 219.5 1351.7 219.5H1344.34H1334.51C1334.21 219.5 1333.91 219.569 1333.63 219.702L1326.31 223.267C1325.99 223.42 1325.64 223.487 1325.29 223.464L1319.74 223.085C1318.98 223.033 1318.32 222.552 1318.03 221.848C1316.84 218.951 1316.74 218.715 1316 218Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M1375.78 201.463C1375 202.601 1368.54 202.925 1364.98 202.952C1364.65 202.955 1364.33 202.875 1364.05 202.723L1359.39 200.263C1359.06 200.089 1358.65 200.147 1358.39 200.406C1358.34 200.448 1358.31 200.494 1358.27 200.544C1353.99 206.885 1351.65 209.932 1352.67 214.388L1353.41 216.522C1353.6 217.062 1353.54 217.656 1353.26 218.154L1350.7 222.692C1350.65 222.79 1350.6 222.893 1350.56 223L1346.96 233.092C1346.49 234.395 1347.46 235.765 1348.84 235.765H1355.23C1355.58 235.765 1355.91 235.852 1356.21 236.024C1359.09 237.701 1362.98 240.51 1363.81 241.116C1363.92 241.196 1364.01 241.282 1364.11 241.382C1364.77 242.117 1367.74 245.383 1369.1 246.702C1370.56 248.114 1375.55 248.19 1377.05 247.791C1377.23 247.742 1377.39 247.632 1377.53 247.503L1384.88 240.835C1385.3 240.456 1385.54 239.918 1385.54 239.354V236.481C1385.54 236.336 1385.52 236.191 1385.49 236.049L1384.12 229.853C1384.04 229.493 1384.06 229.118 1384.18 228.77L1385.42 225.171C1385.5 224.945 1385.61 224.734 1385.77 224.549L1387.45 222.514C1387.54 222.4 1387.65 222.293 1387.77 222.2C1395.08 216.227 1381.95 206.888 1383.48 201.463C1383.86 200.112 1384.07 199.165 1384.15 198.474C1384.35 196.917 1381.86 196.219 1380.62 197.189C1378.54 198.829 1376.32 200.674 1375.78 201.463Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M1381.68 152.136L1386.68 156L1392.96 159.732C1393.26 159.908 1393.5 160.156 1393.67 160.454L1395.55 163.711C1395.83 164.212 1395.9 164.818 1395.61 165.322C1394.07 168.056 1389.43 172.747 1388.75 175C1388.26 176.661 1382.94 177.265 1380.08 176.67C1379.1 176.467 1377.91 176.444 1377.11 177.041L1371.09 181.561C1370.71 181.845 1370.24 181.985 1369.77 181.958L1363.37 181.588C1362.47 181.536 1361.64 182.094 1361.36 182.95L1359.96 187.135C1359.68 187.95 1358.92 188.5 1358.06 188.5H1355.02C1354.68 188.5 1354.34 188.413 1354.05 188.248L1350.19 186.103C1350.06 186.035 1349.95 185.953 1349.84 185.86L1346.35 182.809C1346.12 182.606 1345.84 182.459 1345.55 182.38L1337.92 180.372C1337.07 180.151 1336.47 179.409 1336.43 178.538L1336.06 171.162C1336.02 170.444 1336.37 169.761 1336.98 169.375L1340.77 166.963C1341.24 166.667 1341.8 166.576 1342.34 166.711L1349.18 168.439C1349.34 168.48 1349.51 168.505 1349.67 168.486C1350.98 168.334 1351 166.972 1351 166.5C1351 165.3 1350.31 163.333 1351 162.5L1360.69 153.298C1360.89 153.102 1361.14 152.952 1361.41 152.858L1373.23 148.765C1373.73 148.595 1374.26 148.623 1374.73 148.842L1381.31 151.906C1381.44 151.968 1381.57 152.046 1381.68 152.136Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M1394.4 222.509C1393.86 222.335 1393.25 221.935 1392.68 221.455C1391.68 220.607 1390.05 220.358 1389.07 221.236L1386.37 223.666C1386.13 223.885 1385.94 224.161 1385.83 224.469L1384.21 228.918C1384.07 229.297 1384.05 229.709 1384.16 230.1L1384.2 230.26C1384.73 232.327 1385.5 235.288 1385.5 236V239.172C1385.5 239.702 1385.29 240.211 1384.91 240.586L1381 244.5L1378.12 246.967C1377.72 247.308 1377.21 247.477 1376.68 247.46C1374.15 247.374 1370.28 247.525 1369.53 247.164C1368.73 246.776 1366.25 243.849 1365 242.291C1364.91 242.186 1364.82 242.089 1364.71 242.003L1360.62 238.598C1360.54 238.533 1360.46 238.474 1360.37 238.421L1355.98 235.785C1355.66 235.599 1355.31 235.5 1354.95 235.5H1348.72C1348.57 235.5 1348.43 235.483 1348.28 235.45C1347.39 235.24 1346.47 235.7 1346.09 236.544L1343.63 242.133C1340.67 247.255 1341.29 250.862 1346.67 255.426C1347.42 256.062 1347.65 257.135 1347.18 257.998L1345.5 261.081C1345.19 261.657 1344.61 262.042 1343.96 262.112L1342.88 262.228C1342.69 262.249 1342.5 262.294 1342.33 262.379C1341.23 262.917 1340.93 263.657 1341 265.46C1341 265.486 1341 265.512 1341 265.539C1341 265.893 1341.03 268.567 1341.5 269.5C1341.95 270.403 1341.63 272.797 1341.57 273.253C1341.56 273.304 1341.55 273.354 1341.54 273.404L1340.59 277.408C1340.29 278.664 1341.24 279.87 1342.53 279.87H1343.11H1345.18H1347.85C1348.14 279.87 1348.43 279.935 1348.69 280.05C1352.82 281.823 1360.96 283.392 1361.76 283.392C1362.8 283.392 1369.02 285.405 1372.64 285.405C1376.27 285.405 1384.56 289.933 1387.67 290.94C1390.78 291.946 1402.69 293.959 1403.73 293.959H1418.53C1418.68 293.959 1418.83 293.976 1418.98 294.011C1424.06 295.203 1434 297.587 1434.82 297.984C1435.57 298.351 1438.11 292.325 1439.6 288.464C1439.85 287.814 1439.74 287.083 1439.31 286.534L1429.08 273.441C1428.77 273.045 1428.62 272.551 1428.66 272.051C1429.2 265.445 1430.16 253.24 1430.16 251.693C1430.16 249.68 1426.53 234.082 1425.49 233.076C1424.72 232.331 1422.12 230.665 1420.64 229.756C1420.42 229.622 1420.18 229.533 1419.93 229.491L1417.41 229.084C1417.27 229.062 1417.14 229.024 1417 228.976C1414.48 228.044 1411.99 228.019 1410.98 227.038C1410.33 226.402 1405.28 224.354 1402.69 224.019C1400.79 223.684 1395.65 222.912 1394.4 222.509Z"
                        fill="#EBEBEB" stroke="white" stroke-width="2" />
                    <path
                        d="M1397.54 164.435L1398.65 164.79C1399.1 164.934 1399.49 165.232 1399.74 165.635C1400.32 166.576 1401.13 167.91 1401.46 168.557C1401.99 169.57 1415.19 176.152 1417.83 177.165C1419.51 177.809 1420.41 179.563 1420.8 180.849C1420.96 181.395 1420.79 181.973 1420.42 182.402C1418.86 184.18 1416.31 186.785 1415.19 186.785C1414.02 186.785 1408.84 184.473 1405.84 183.058C1405.4 182.85 1404.9 182.807 1404.43 182.937C1401.25 183.822 1395.77 185.266 1394.6 185.266C1393.45 185.266 1392.5 187.698 1392.07 189.25C1391.99 189.54 1391.86 189.813 1391.67 190.046L1388.04 194.513C1387.84 194.758 1387.59 194.953 1387.3 195.08L1381.14 197.804C1380.96 197.883 1380.8 197.99 1380.65 198.118L1375.96 202.163C1375.72 202.372 1375.43 202.52 1375.12 202.594L1373.48 202.987L1368.73 203.494L1364.69 203.924C1364.23 203.973 1363.76 203.859 1363.38 203.601L1357.8 199.897C1357.36 199.606 1357.05 199.154 1356.94 198.639L1355.02 189.409C1355.01 189.348 1355 189.285 1355 189.222C1355 188.715 1355.41 188.304 1355.92 188.304H1358.46C1358.62 188.304 1358.78 188.292 1358.92 188.228C1360.75 187.417 1359.98 182.587 1361.34 181.722C1362.81 180.782 1368.07 181.877 1370.36 181.77C1370.68 181.755 1370.97 181.622 1371.23 181.431L1377.55 176.664C1377.99 176.337 1378.54 176.2 1379.07 176.286L1381.24 176.633C1381.35 176.65 1381.45 176.658 1381.56 176.658H1384.26C1384.46 176.658 1384.67 176.626 1384.87 176.563L1386.15 176.152L1387.01 175.876C1387.48 175.728 1387.87 175.414 1388.12 174.995L1389.77 172.225C1389.82 172.143 1389.88 172.064 1389.94 171.989L1393.54 167.544L1395.33 165.145C1395.84 164.46 1396.73 164.175 1397.54 164.435Z"
                        fill="#ECECEC" stroke="white" stroke-width="2" />
                    <path
                        d="M47.6444 476.204L53.9118 478.519C53.9386 478.529 53.967 478.534 53.9957 478.534C54.25 478.534 54.3325 478.876 54.1061 478.992L47.4045 482.424C47.231 482.513 47.0714 482.627 46.9309 482.762L41.0568 488.403C40.9243 488.531 40.775 488.639 40.6129 488.725L36.5385 490.899C36.278 491.038 36.0511 491.233 35.8766 491.471C34.9579 492.725 33.5238 494.77 33.5238 495.135C33.5238 495.519 32.2521 499.292 31.5288 501.385C31.4622 501.578 31.3666 501.758 31.2449 501.922L26.3222 508.541C26.2346 508.658 26.1605 508.785 26.1012 508.919C25.5565 510.15 24.619 512.362 24.619 512.742C24.619 513.125 24.3027 515.97 24.1216 517.544C24.1041 517.697 24.1042 517.85 24.1218 518.003L24.9791 525.412C25.0771 526.26 24.6261 527.101 23.7875 527.257C23.5454 527.302 23.2935 527.331 23.0476 527.331C22.2095 527.331 22 528.337 22 528.84L22.4533 532.323C22.4994 532.678 22.64 533.014 22.8602 533.296L25.4118 536.563C25.5799 536.778 25.7022 537.026 25.771 537.29L25.8952 537.767C26.0775 538.468 25.8631 539.209 25.3646 539.733C24.7347 540.397 24.0952 541.145 24.0952 541.417C24.0952 541.92 26.1905 542.926 27.2381 543.933C28.2857 544.939 27.7619 545.442 27.7619 546.448C27.7619 546.917 27.406 547.523 27.0054 548.046C26.5476 548.644 25.7424 548.807 25.0313 548.558L21.4492 547.307C20.8123 547.085 20.1076 547.2 19.5647 547.6C18.6124 548.303 17.3816 549.169 16.7619 549.466C15.7143 549.969 14.6667 552.485 14.1429 552.988C13.8984 553.223 13.5231 553.697 13.1836 554.152C12.7913 554.677 12.1805 555 11.5251 555H2C0.89543 555 0 554.105 0 553V486.583V486.08V484.571V481.667C0 481.381 0.298799 481.193 0.556732 481.316C0.929366 481.495 3.29208 482.032 3.70541 482.026C4.22152 482.018 4.74577 482.011 5.09327 482.006C5.34579 482.002 5.57381 481.867 5.69627 481.646C6.37569 480.421 8.6228 476.374 9.30063 475.225C9.38446 475.083 9.48876 474.954 9.60776 474.84L10.9433 473.558C11.3158 473.2 11.8116 473 12.3279 473.014C14.7105 473.077 20.1 473.345 20.4286 473.503C21.4762 474.006 22 475.515 23.0476 477.025C23.3561 477.469 24.0366 478.508 24.6483 479.35C25.1918 480.098 26.1531 480.957 26.9867 481.357C27.227 481.472 27.4885 481.552 27.7619 481.552C28.9332 481.552 29.9286 478.503 31.5 478C32.6244 477.64 34.3786 477.392 35.2362 477.104C35.4151 477.044 35.5945 476.984 35.7806 476.953L37.6673 476.639C38.1997 476.55 38.6809 476.255 39.0302 475.844C39.3636 475.451 39.7414 474.997 40 474.5C40.3759 473.778 42.4915 473.144 44.4012 473.385C44.825 473.438 45.1951 473.68 45.4685 474.008L46.8007 475.608C47.0249 475.877 47.3158 476.082 47.6444 476.204Z"
                        fill="#EBEBEB" stroke="white" stroke-width="2" />
                    <path class="mapArea" id="estepona"
                        d="M354.27 312.5L342.316 319L337.226 321.448C335.816 322.126 334.208 320.995 334.37 319.439L335.039 313V294.5L336.599 283.5L339.107 271.437C339.166 271.149 339.289 270.878 339.465 270.643L345.954 262L357.706 247.253C357.84 247.086 357.946 246.897 358.019 246.696L360.91 238.818C360.987 238.608 361.099 238.411 361.241 238.238L368.822 229L371.635 225.843C371.836 225.617 371.984 225.349 372.066 225.058L373.297 220.715C373.428 220.254 373.72 219.855 374.12 219.591L391.691 208L396.658 204.177C396.811 204.06 396.98 203.965 397.159 203.896L403.832 201.328C404.373 201.12 404.797 200.687 404.995 200.141L408.461 190.553C408.698 189.899 409.257 189.414 409.939 189.274L415.814 188.063C416.016 188.021 416.208 187.949 416.388 187.849C418.562 186.644 422.719 184.5 423.914 184.5C425.474 184.5 429.632 183 430.151 182C430.517 181.297 432.513 180.543 433.815 180.144C434.138 180.045 434.482 180.041 434.81 180.12L442.19 181.895C442.477 181.964 442.744 182.095 442.974 182.28L448.586 186.779C448.768 186.925 448.924 187.102 449.045 187.302L452.422 192.871C452.474 192.957 452.519 193.047 452.558 193.14L454.276 197.271C454.471 197.74 454.836 198.116 455.298 198.325L462.804 201.723C463.2 201.903 463.527 202.207 463.735 202.589L469.052 212.355C469.105 212.451 469.15 212.552 469.186 212.656L471.62 219.682C471.693 219.892 471.73 220.114 471.73 220.337V229.635C471.73 229.876 471.774 230.116 471.859 230.342L473.727 235.283C473.782 235.427 473.853 235.565 473.939 235.692L479.442 243.875C479.498 243.958 479.548 244.046 479.591 244.137L484.637 254.817C484.695 254.939 484.74 255.066 484.772 255.196L486.735 263.222C486.78 263.407 486.851 263.583 486.946 263.747L491.113 270.964C491.619 271.84 491.391 272.957 490.581 273.564L488.259 275.306C488.088 275.434 487.938 275.589 487.817 275.766C486.397 277.85 484 281.734 484 282.5C484 283.241 480.323 287.613 478.816 289.181C478.61 289.396 478.354 289.549 478.071 289.643L473.515 291.162C472.881 291.373 472.394 291.888 472.218 292.533L471.32 295.827C471.123 296.548 470.542 297.099 469.812 297.256L448.01 301.959C447.885 301.986 447.763 302.025 447.646 302.076L438.687 305.906C438.541 305.968 438.388 306.013 438.231 306.04L427.139 307.895C426.732 307.963 426.314 307.904 425.942 307.725L420.276 305L414.126 302.269C413.732 302.094 413.293 302.051 412.873 302.146L404.875 303.957C404.748 303.986 404.624 304.027 404.505 304.079L397.928 307L389.226 309.79C388.803 309.926 388.345 309.917 387.927 309.764L377.658 306C375.232 305.333 370.174 304 369.342 304C368.53 304 364.346 305.908 362.215 306.929C362.115 306.976 362.02 307.032 361.93 307.096L354.27 312.5Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g filter="url(#filter0_d_272_5082)">
                        <path
                            d="M386.162 261V251.102H392.98V252.46H387.646V255.428H392.364V256.772H387.646V259.642H392.98V261H386.162ZM398.388 261.112C397.744 261.112 397.137 261.019 396.568 260.832C395.998 260.645 395.518 260.342 395.126 259.922C394.734 259.502 394.472 258.947 394.342 258.256H395.868C395.989 258.648 396.185 258.956 396.456 259.18C396.726 259.395 397.039 259.544 397.394 259.628C397.758 259.712 398.122 259.754 398.486 259.754C398.831 259.754 399.153 259.707 399.452 259.614C399.76 259.521 400.012 259.367 400.208 259.152C400.404 258.937 400.502 258.657 400.502 258.312C400.502 258.051 400.45 257.836 400.348 257.668C400.245 257.5 400.1 257.365 399.914 257.262C399.736 257.15 399.522 257.061 399.27 256.996C398.98 256.903 398.668 256.823 398.332 256.758C398.005 256.693 397.678 256.618 397.352 256.534C397.034 256.45 396.736 256.343 396.456 256.212C396.222 256.119 395.994 256.007 395.77 255.876C395.555 255.736 395.368 255.573 395.21 255.386C395.051 255.19 394.92 254.961 394.818 254.7C394.724 254.439 394.678 254.14 394.678 253.804C394.678 253.356 394.748 252.973 394.888 252.656C395.037 252.339 395.228 252.073 395.462 251.858C395.704 251.643 395.98 251.475 396.288 251.354C396.605 251.223 396.936 251.13 397.282 251.074C397.627 251.018 397.963 250.99 398.29 250.99C398.887 250.99 399.438 251.083 399.942 251.27C400.446 251.457 400.861 251.755 401.188 252.166C401.524 252.567 401.706 253.099 401.734 253.762H400.292C400.254 253.407 400.133 253.127 399.928 252.922C399.732 252.707 399.484 252.558 399.186 252.474C398.887 252.381 398.57 252.334 398.234 252.334C397.991 252.334 397.748 252.357 397.506 252.404C397.263 252.441 397.039 252.516 396.834 252.628C396.638 252.731 396.479 252.871 396.358 253.048C396.246 253.225 396.19 253.445 396.19 253.706C396.19 253.93 396.236 254.131 396.33 254.308C396.423 254.476 396.554 254.621 396.722 254.742C396.899 254.854 397.095 254.952 397.31 255.036C397.702 255.185 398.131 255.302 398.598 255.386C399.064 255.461 399.503 255.568 399.914 255.708C400.212 255.801 400.492 255.918 400.754 256.058C401.015 256.189 401.239 256.352 401.426 256.548C401.612 256.735 401.757 256.959 401.86 257.22C401.962 257.472 402.014 257.766 402.014 258.102C402.014 258.653 401.916 259.124 401.72 259.516C401.524 259.899 401.258 260.207 400.922 260.44C400.586 260.673 400.198 260.846 399.76 260.958C399.321 261.061 398.864 261.112 398.388 261.112ZM405.941 261V252.46H402.805V251.102H410.547V252.46H407.425V261H405.941ZM411.892 261V251.102H418.71V252.46H413.376V255.428H418.094V256.772H413.376V259.642H418.71V261H411.892ZM420.492 261V251.102H424.062C424.799 251.102 425.434 251.219 425.966 251.452C426.507 251.685 426.923 252.049 427.212 252.544C427.501 253.029 427.646 253.659 427.646 254.434C427.646 255.181 427.478 255.806 427.142 256.31C426.815 256.814 426.367 257.197 425.798 257.458C425.229 257.71 424.58 257.836 423.852 257.836H421.976V261H420.492ZM421.976 256.492H423.796C424.505 256.492 425.075 256.329 425.504 256.002C425.933 255.666 426.148 255.129 426.148 254.392C426.148 253.748 425.971 253.267 425.616 252.95C425.261 252.623 424.725 252.46 424.006 252.46H421.976V256.492ZM433.606 261.112C432.588 261.112 431.725 260.897 431.016 260.468C430.316 260.029 429.784 259.427 429.42 258.662C429.056 257.897 428.874 257.029 428.874 256.058C428.874 255.078 429.056 254.205 429.42 253.44C429.784 252.675 430.32 252.077 431.03 251.648C431.739 251.209 432.602 250.99 433.62 250.99C434.646 250.99 435.51 251.205 436.21 251.634C436.91 252.063 437.442 252.661 437.806 253.426C438.17 254.191 438.352 255.064 438.352 256.044C438.352 257.015 438.17 257.883 437.806 258.648C437.442 259.413 436.905 260.015 436.196 260.454C435.496 260.893 434.632 261.112 433.606 261.112ZM433.62 259.754C434.366 259.754 434.978 259.581 435.454 259.236C435.93 258.891 436.28 258.438 436.504 257.878C436.728 257.318 436.84 256.711 436.84 256.058C436.84 255.563 436.774 255.092 436.644 254.644C436.522 254.196 436.331 253.799 436.07 253.454C435.808 253.109 435.472 252.838 435.062 252.642C434.651 252.446 434.17 252.348 433.62 252.348C432.882 252.348 432.271 252.521 431.786 252.866C431.31 253.211 430.955 253.664 430.722 254.224C430.488 254.784 430.372 255.395 430.372 256.058C430.372 256.711 430.484 257.318 430.708 257.878C430.941 258.438 431.296 258.891 431.772 259.236C432.257 259.581 432.873 259.754 433.62 259.754ZM440.125 261V251.102H441.847L446.817 258.83V251.102H448.287V261H446.607L441.609 253.314V261H440.125ZM449.547 261L453.285 251.102H455.203L458.927 261H457.331L456.603 259.012H451.871L451.143 261H449.547ZM452.361 257.682H456.113L454.237 252.516L452.361 257.682Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="сasares"
                        d="M204.1 354H212.582C213.209 354 213.467 353.196 212.958 352.83C212.697 352.643 212.614 352.292 212.762 352.007L213.95 349.733C214.027 349.586 214.122 349.449 214.233 349.325L216.894 346.352C217.09 346.134 217.332 345.961 217.601 345.846L226.331 342.132C226.489 342.065 226.638 341.977 226.773 341.872L237.267 333.74C237.428 333.616 237.568 333.468 237.684 333.302L243.504 324.943C243.673 324.701 243.893 324.499 244.149 324.352L251.44 320.165C251.53 320.113 251.621 320.069 251.718 320.033C254.427 319.051 261.175 317.985 261.994 317.593C262.828 317.194 266.683 313.105 268.246 311.11L270.775 308.285C271.154 307.861 271.696 307.619 272.265 307.619H273.893C274.584 307.619 275.219 308.003 275.539 308.616C275.859 309.229 276.493 309.614 277.185 309.614H280.203C280.56 309.614 280.911 309.518 281.218 309.337L286.75 306.078C287.241 305.789 287.831 305.723 288.373 305.896L288.565 305.957C288.905 306.066 289.209 306.263 289.447 306.528L291.872 309.237C292.094 309.484 292.373 309.673 292.686 309.785L295.642 310.846C296.115 311.016 296.506 311.357 296.739 311.802L299.905 317.864C299.984 318.015 300.082 318.156 300.197 318.283L310.443 329.563L313.383 332.025C314.1 332.626 315.139 332.649 315.883 332.08L321.887 327.481C322.236 327.214 322.663 327.069 323.103 327.069H326.115C326.429 327.069 326.739 326.995 327.019 326.853L334.353 323.136C335.025 322.795 335.449 322.106 335.449 321.352V311.609V294.332C335.449 294.213 335.459 294.098 335.48 293.981C336.358 289.104 338.054 279.586 338.054 279.192C338.054 278.815 338.984 274.255 339.526 271.649C339.586 271.361 339.709 271.09 339.886 270.855L346.389 262.235L358.168 247.527C358.303 247.359 358.409 247.171 358.484 246.969L361.376 239.125C361.456 238.907 361.574 238.705 361.723 238.527L372.16 226.157C372.343 225.941 372.477 225.688 372.555 225.415L373.923 220.611C373.974 220.433 374 220.249 374 220.063V207.888C374 207.253 373.698 206.655 373.186 206.278L367.698 202.237C367.391 202.01 367.155 201.701 367.018 201.345L363.714 192.761C363.626 192.532 363.581 192.288 363.581 192.043V183.212C363.581 183.031 363.556 182.85 363.507 182.675L361.677 176.102C361.56 175.684 361.311 175.315 360.966 175.051L357.019 172.028C356.555 171.673 355.958 171.538 355.386 171.66L351.805 172.422C351.668 172.451 351.528 172.465 351.388 172.465H345.279C344.664 172.465 344.084 172.183 343.705 171.699L341.449 168.82C341.272 168.593 341.047 168.407 340.791 168.275L335.491 165.543C334.825 165.2 334.407 164.514 334.407 163.766V161C334.407 159.895 333.512 159 332.407 159H329.875C329.436 159 329.008 159.145 328.659 159.412L327.704 160.144C327.037 160.655 326.121 160.694 325.412 160.242L325.086 160.033C324.182 159.456 322.983 159.696 322.369 160.576L321.742 161.477C321.508 161.813 321.383 162.211 321.383 162.62V166.85C321.383 167.259 321.258 167.658 321.024 167.993L319.701 169.894C319.441 170.267 319.062 170.541 318.625 170.669L312.799 172.385C312.618 172.439 312.447 172.517 312.288 172.618L308.153 175.257C307.945 175.39 307.763 175.56 307.617 175.758L298.128 188.668C298.003 188.837 297.853 188.986 297.683 189.108L286.119 197.411C285.683 197.724 285.139 197.848 284.61 197.756L275.006 196.085C274.361 195.972 273.701 196.183 273.241 196.648L264.925 205.051C264.71 205.268 264.449 205.433 264.161 205.534L247.407 211.366L220.622 223.694C220.42 223.786 220.236 223.912 220.075 224.066L214.683 229.228C214.289 229.605 214.066 230.127 214.066 230.673V235.113C214.066 235.56 214.216 235.994 214.491 236.346L219.892 243.239C220.168 243.591 220.317 244.026 220.317 244.473V267.721V277.398C220.317 277.595 220.288 277.792 220.231 277.981L216.725 289.487C216.689 289.605 216.642 289.72 216.584 289.83L211.262 300.021C211.054 300.42 210.986 300.877 211.07 301.32L212.989 311.424C213.012 311.547 213.024 311.672 213.024 311.797V322.408C213.024 322.523 213.034 322.638 213.054 322.751L214.379 330.364C214.507 331.097 214.216 331.842 213.625 332.294L209.545 335.419C209.433 335.504 209.331 335.601 209.24 335.708L200.48 345.958C200.17 346.32 200 346.781 200 347.257V349.32C200 349.767 200.15 350.202 200.426 350.554L202.525 353.233C202.904 353.717 203.485 354 204.1 354Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g filter="url(#filter1_d_272_5082)">
                        <path
                            d="M256.236 258.112C255.219 258.112 254.365 257.897 253.674 257.468C252.993 257.039 252.479 256.446 252.134 255.69C251.789 254.934 251.616 254.061 251.616 253.072C251.616 252.083 251.789 251.205 252.134 250.44C252.489 249.675 253.007 249.077 253.688 248.648C254.379 248.209 255.233 247.99 256.25 247.99C256.987 247.99 257.631 248.111 258.182 248.354C258.733 248.587 259.176 248.923 259.512 249.362C259.857 249.791 260.086 250.305 260.198 250.902H258.742C258.602 250.426 258.317 250.048 257.888 249.768C257.459 249.488 256.908 249.348 256.236 249.348C255.489 249.348 254.887 249.521 254.43 249.866C253.982 250.211 253.655 250.664 253.45 251.224C253.245 251.775 253.142 252.372 253.142 253.016C253.142 253.679 253.249 254.295 253.464 254.864C253.679 255.433 254.019 255.891 254.486 256.236C254.953 256.581 255.55 256.754 256.278 256.754C256.726 256.754 257.123 256.693 257.468 256.572C257.813 256.441 258.103 256.259 258.336 256.026C258.569 255.783 258.728 255.503 258.812 255.186H260.366C260.245 255.793 259.997 256.315 259.624 256.754C259.251 257.193 258.779 257.529 258.21 257.762C257.641 257.995 256.983 258.112 256.236 258.112ZM260.737 258L264.475 248.102H266.393L270.117 258H268.521L267.793 256.012H263.061L262.333 258H260.737ZM263.551 254.682H267.303L265.427 249.516L263.551 254.682ZM274.751 258.112C274.107 258.112 273.5 258.019 272.931 257.832C272.362 257.645 271.881 257.342 271.489 256.922C271.097 256.502 270.836 255.947 270.705 255.256H272.231C272.352 255.648 272.548 255.956 272.819 256.18C273.09 256.395 273.402 256.544 273.757 256.628C274.121 256.712 274.485 256.754 274.849 256.754C275.194 256.754 275.516 256.707 275.815 256.614C276.123 256.521 276.375 256.367 276.571 256.152C276.767 255.937 276.865 255.657 276.865 255.312C276.865 255.051 276.814 254.836 276.711 254.668C276.608 254.5 276.464 254.365 276.277 254.262C276.1 254.15 275.885 254.061 275.633 253.996C275.344 253.903 275.031 253.823 274.695 253.758C274.368 253.693 274.042 253.618 273.715 253.534C273.398 253.45 273.099 253.343 272.819 253.212C272.586 253.119 272.357 253.007 272.133 252.876C271.918 252.736 271.732 252.573 271.573 252.386C271.414 252.19 271.284 251.961 271.181 251.7C271.088 251.439 271.041 251.14 271.041 250.804C271.041 250.356 271.111 249.973 271.251 249.656C271.4 249.339 271.592 249.073 271.825 248.858C272.068 248.643 272.343 248.475 272.651 248.354C272.968 248.223 273.3 248.13 273.645 248.074C273.99 248.018 274.326 247.99 274.653 247.99C275.25 247.99 275.801 248.083 276.305 248.27C276.809 248.457 277.224 248.755 277.551 249.166C277.887 249.567 278.069 250.099 278.097 250.762H276.655C276.618 250.407 276.496 250.127 276.291 249.922C276.095 249.707 275.848 249.558 275.549 249.474C275.25 249.381 274.933 249.334 274.597 249.334C274.354 249.334 274.112 249.357 273.869 249.404C273.626 249.441 273.402 249.516 273.197 249.628C273.001 249.731 272.842 249.871 272.721 250.048C272.609 250.225 272.553 250.445 272.553 250.706C272.553 250.93 272.6 251.131 272.693 251.308C272.786 251.476 272.917 251.621 273.085 251.742C273.262 251.854 273.458 251.952 273.673 252.036C274.065 252.185 274.494 252.302 274.961 252.386C275.428 252.461 275.866 252.568 276.277 252.708C276.576 252.801 276.856 252.918 277.117 253.058C277.378 253.189 277.602 253.352 277.789 253.548C277.976 253.735 278.12 253.959 278.223 254.22C278.326 254.472 278.377 254.766 278.377 255.102C278.377 255.653 278.279 256.124 278.083 256.516C277.887 256.899 277.621 257.207 277.285 257.44C276.949 257.673 276.562 257.846 276.123 257.958C275.684 258.061 275.227 258.112 274.751 258.112ZM278.975 258L282.713 248.102H284.631L288.355 258H286.759L286.031 256.012H281.299L280.571 258H278.975ZM281.789 254.682H285.541L283.665 249.516L281.789 254.682ZM289.609 258V248.102H293.417C293.949 248.102 294.435 248.158 294.873 248.27C295.312 248.373 295.695 248.545 296.021 248.788C296.348 249.021 296.6 249.339 296.777 249.74C296.955 250.141 297.043 250.636 297.043 251.224C297.043 251.756 296.95 252.213 296.763 252.596C296.577 252.979 296.32 253.296 295.993 253.548C295.667 253.8 295.298 253.991 294.887 254.122L297.001 258H295.363L293.403 254.36H291.093V258H289.609ZM291.093 253.03H293.109C293.445 253.03 293.758 253.007 294.047 252.96C294.346 252.904 294.607 252.811 294.831 252.68C295.055 252.54 295.228 252.353 295.349 252.12C295.48 251.877 295.545 251.569 295.545 251.196C295.555 250.767 295.471 250.426 295.293 250.174C295.125 249.913 294.873 249.731 294.537 249.628C294.201 249.516 293.795 249.46 293.319 249.46H291.093V253.03ZM298.961 258V248.102H305.779V249.46H300.445V252.428H305.163V253.772H300.445V256.642H305.779V258H298.961ZM311.186 258.112C310.542 258.112 309.936 258.019 309.366 257.832C308.797 257.645 308.316 257.342 307.924 256.922C307.532 256.502 307.271 255.947 307.14 255.256H308.666C308.788 255.648 308.984 255.956 309.254 256.18C309.525 256.395 309.838 256.544 310.192 256.628C310.556 256.712 310.92 256.754 311.284 256.754C311.63 256.754 311.952 256.707 312.25 256.614C312.558 256.521 312.81 256.367 313.006 256.152C313.202 255.937 313.3 255.657 313.3 255.312C313.3 255.051 313.249 254.836 313.146 254.668C313.044 254.5 312.899 254.365 312.712 254.262C312.535 254.15 312.32 254.061 312.068 253.996C311.779 253.903 311.466 253.823 311.13 253.758C310.804 253.693 310.477 253.618 310.15 253.534C309.833 253.45 309.534 253.343 309.254 253.212C309.021 253.119 308.792 253.007 308.568 252.876C308.354 252.736 308.167 252.573 308.008 252.386C307.85 252.19 307.719 251.961 307.616 251.7C307.523 251.439 307.476 251.14 307.476 250.804C307.476 250.356 307.546 249.973 307.686 249.656C307.836 249.339 308.027 249.073 308.26 248.858C308.503 248.643 308.778 248.475 309.086 248.354C309.404 248.223 309.735 248.13 310.08 248.074C310.426 248.018 310.762 247.99 311.088 247.99C311.686 247.99 312.236 248.083 312.74 248.27C313.244 248.457 313.66 248.755 313.986 249.166C314.322 249.567 314.504 250.099 314.532 250.762H313.09C313.053 250.407 312.932 250.127 312.726 249.922C312.53 249.707 312.283 249.558 311.984 249.474C311.686 249.381 311.368 249.334 311.032 249.334C310.79 249.334 310.547 249.357 310.304 249.404C310.062 249.441 309.838 249.516 309.632 249.628C309.436 249.731 309.278 249.871 309.156 250.048C309.044 250.225 308.988 250.445 308.988 250.706C308.988 250.93 309.035 251.131 309.128 251.308C309.222 251.476 309.352 251.621 309.52 251.742C309.698 251.854 309.894 251.952 310.108 252.036C310.5 252.185 310.93 252.302 311.396 252.386C311.863 252.461 312.302 252.568 312.712 252.708C313.011 252.801 313.291 252.918 313.552 253.058C313.814 253.189 314.038 253.352 314.224 253.548C314.411 253.735 314.556 253.959 314.658 254.22C314.761 254.472 314.812 254.766 314.812 255.102C314.812 255.653 314.714 256.124 314.518 256.516C314.322 256.899 314.056 257.207 313.72 257.44C313.384 257.673 312.997 257.846 312.558 257.958C312.12 258.061 311.662 258.112 311.186 258.112Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="benahavís"
                        d="M467.984 184.281L449.53 184.76C449.214 184.768 448.913 184.894 448.685 185.112C448.279 185.502 448.179 186.113 448.439 186.612L451.638 192.751L453.922 197.572C454.125 198 454.474 198.343 454.907 198.538L462.461 201.949C462.858 202.128 463.185 202.431 463.394 202.813L468.71 212.55C468.763 212.647 468.808 212.748 468.844 212.852L471.277 219.856C471.351 220.068 471.388 220.289 471.388 220.513V229.649C471.388 231.976 472.993 234.268 473.467 235.633C473.987 237.129 477.279 241.45 478.664 244.11L484.27 254.866C484.344 255.008 484.401 255.158 484.439 255.314L486.391 263.273C486.437 263.461 486.51 263.641 486.608 263.808L490.684 270.759C490.973 271.252 491.037 271.845 490.861 272.389L490.759 272.702C490.593 273.212 490.636 273.768 490.92 274.224C492.409 276.618 496.028 281.274 496.5 281.5C498.489 282.454 503.92 284.176 506.208 284.469C506.403 284.494 506.597 284.479 506.789 284.437L529.255 279.553C529.418 279.518 529.575 279.462 529.724 279.388L536.352 276.074C536.45 276.025 536.545 275.967 536.634 275.903L542 272L543.238 271.071C543.72 270.71 544.339 270.585 544.924 270.731L547.282 271.321C547.745 271.436 548.235 271.383 548.662 271.169L551.843 269.579C551.947 269.526 552.056 269.483 552.169 269.45L578.306 261.706C578.754 261.573 579.142 261.287 579.402 260.898L586 251L592.62 242.488C592.868 242.17 593.205 241.934 593.589 241.811L604.314 238.379C605.04 238.147 605.571 237.522 605.683 236.769L605.867 235.531C605.952 234.962 605.787 234.384 605.415 233.945L602.5 230.5L599.529 225.831C599.195 225.307 599.124 224.658 599.337 224.074L601.434 218.307C601.685 217.615 601.536 216.841 601.046 216.292L599.805 214.902C599.31 214.347 599.164 213.564 599.425 212.868L600.448 210.139C600.483 210.047 600.524 209.957 600.572 209.87L602.391 206.598C602.699 206.043 602.726 205.374 602.462 204.796L600.5 200.5C598.941 196.677 596.247 189.399 595 189C593.894 188.646 594.408 186.252 595.262 184.786C595.465 184.438 595.619 184.059 595.645 183.658L596.488 170.68C596.496 170.56 596.515 170.441 596.544 170.325L597.94 164.739C597.98 164.58 598 164.417 598 164.254V159.247C598 158.765 597.828 158.298 597.485 157.959C596.444 156.934 594.744 155.524 594.046 154.855C593.297 154.136 592.659 152.801 592.16 152.179C592.06 152.054 591.957 151.932 591.871 151.797L588.71 146.831C588.571 146.612 588.476 146.369 588.43 146.115L587.605 141.577C587.536 141.2 587.578 140.812 587.723 140.458L591.447 131.419L595.914 121.767C596.266 121.006 596.106 120.106 595.513 119.513L593.5 117.5L588.259 112.259C588.088 112.088 587.949 111.887 587.85 111.666L584.437 104.086C584.264 103.702 583.975 103.383 583.611 103.173L582.46 102.511C581.903 102.19 581.225 102.157 580.639 102.421L572.996 105.872C572.824 105.95 572.664 106.051 572.521 106.173L563.633 113.753C563.467 113.895 563.324 114.063 563.212 114.251L553.189 131.08C553.055 131.304 552.967 131.552 552.929 131.809L552.279 136.17C552.103 137.356 550.929 138.121 549.773 137.804L548.309 137.403L540.768 135.594C540.27 135.475 539.746 135.55 539.303 135.805L535.007 138.278C534.867 138.359 534.737 138.457 534.62 138.569L528.796 144.156C528.639 144.307 528.508 144.482 528.407 144.675L526.221 148.869C526.051 149.197 525.793 149.47 525.476 149.66L518.015 154.134C517.771 154.28 517.498 154.373 517.216 154.406L504.651 155.852L496.958 157.589C496.253 157.748 495.688 158.274 495.486 158.969C494.758 161.467 493.737 165.14 493.737 165.825C493.737 166.822 489.579 171.808 488.539 172.307C487.5 172.805 480.224 178.789 478.145 180.285C476.537 181.442 471.24 183.312 468.541 184.187C468.361 184.245 468.174 184.276 467.984 184.281Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g filter="url(#filter2_d_272_5082)">
                        <path
                            d="M495.148 219V209.102H498.914C499.39 209.102 499.824 209.144 500.216 209.228C500.617 209.303 500.963 209.438 501.252 209.634C501.541 209.821 501.761 210.077 501.91 210.404C502.069 210.721 502.148 211.123 502.148 211.608C502.148 212.084 502.041 212.513 501.826 212.896C501.611 213.269 501.285 213.549 500.846 213.736C501.434 213.867 501.877 214.133 502.176 214.534C502.484 214.935 502.638 215.463 502.638 216.116C502.638 216.676 502.535 217.143 502.33 217.516C502.125 217.889 501.84 218.183 501.476 218.398C501.112 218.613 500.692 218.767 500.216 218.86C499.74 218.953 499.231 219 498.69 219H495.148ZM496.632 217.642H498.746C499.026 217.642 499.306 217.628 499.586 217.6C499.866 217.563 500.123 217.493 500.356 217.39C500.599 217.287 500.79 217.133 500.93 216.928C501.079 216.723 501.154 216.447 501.154 216.102C501.154 215.813 501.098 215.575 500.986 215.388C500.874 215.192 500.725 215.038 500.538 214.926C500.351 214.814 500.132 214.735 499.88 214.688C499.637 214.641 499.385 214.618 499.124 214.618H496.632V217.642ZM496.632 213.344H498.508C498.825 213.344 499.115 213.316 499.376 213.26C499.647 213.204 499.88 213.111 500.076 212.98C500.272 212.849 500.421 212.686 500.524 212.49C500.636 212.285 500.692 212.037 500.692 211.748C500.701 211.365 500.617 211.085 500.44 210.908C500.272 210.721 500.043 210.6 499.754 210.544C499.465 210.479 499.147 210.446 498.802 210.446H496.632V213.344ZM504.432 219V209.102H511.25V210.46H505.916V213.428H510.634V214.772H505.916V217.642H511.25V219H504.432ZM513.031 219V209.102H514.753L519.723 216.83V209.102H521.193V219H519.513L514.515 211.314V219H513.031ZM522.453 219L526.191 209.102H528.109L531.833 219H530.237L529.509 217.012H524.777L524.049 219H522.453ZM525.267 215.682H529.019L527.143 210.516L525.267 215.682ZM533.088 219V209.102H534.572V213.456H539.528V209.102H541.012V219H539.528V214.814H534.572V219H533.088ZM542.278 219L546.016 209.102H547.934L551.658 219H550.062L549.334 217.012H544.602L543.874 219H542.278ZM545.092 215.682H548.844L546.968 210.516L545.092 215.682ZM554.889 219L551.207 209.102H552.831L555.925 217.74L559.005 209.102H560.601L556.947 219H554.889ZM561.935 219V209.102H563.419V219H561.935ZM569.376 219.112C568.732 219.112 568.125 219.019 567.556 218.832C566.987 218.645 566.506 218.342 566.114 217.922C565.722 217.502 565.461 216.947 565.33 216.256H566.856C566.977 216.648 567.173 216.956 567.444 217.18C567.715 217.395 568.027 217.544 568.382 217.628C568.746 217.712 569.11 217.754 569.474 217.754C569.819 217.754 570.141 217.707 570.44 217.614C570.748 217.521 571 217.367 571.196 217.152C571.392 216.937 571.49 216.657 571.49 216.312C571.49 216.051 571.439 215.836 571.336 215.668C571.233 215.5 571.089 215.365 570.902 215.262C570.725 215.15 570.51 215.061 570.258 214.996C569.969 214.903 569.656 214.823 569.32 214.758C568.993 214.693 568.667 214.618 568.34 214.534C568.023 214.45 567.724 214.343 567.444 214.212C567.211 214.119 566.982 214.007 566.758 213.876C566.543 213.736 566.357 213.573 566.198 213.386C566.039 213.19 565.909 212.961 565.806 212.7C565.713 212.439 565.666 212.14 565.666 211.804C565.666 211.356 565.736 210.973 565.876 210.656C566.025 210.339 566.217 210.073 566.45 209.858C566.693 209.643 566.968 209.475 567.276 209.354C567.593 209.223 567.925 209.13 568.27 209.074C568.615 209.018 568.951 208.99 569.278 208.99C569.875 208.99 570.426 209.083 570.93 209.27C571.434 209.457 571.849 209.755 572.176 210.166C572.512 210.567 572.694 211.099 572.722 211.762H571.28C571.243 211.407 571.121 211.127 570.916 210.922C570.72 210.707 570.473 210.558 570.174 210.474C569.875 210.381 569.558 210.334 569.222 210.334C568.979 210.334 568.737 210.357 568.494 210.404C568.251 210.441 568.027 210.516 567.822 210.628C567.626 210.731 567.467 210.871 567.346 211.048C567.234 211.225 567.178 211.445 567.178 211.706C567.178 211.93 567.225 212.131 567.318 212.308C567.411 212.476 567.542 212.621 567.71 212.742C567.887 212.854 568.083 212.952 568.298 213.036C568.69 213.185 569.119 213.302 569.586 213.386C570.053 213.461 570.491 213.568 570.902 213.708C571.201 213.801 571.481 213.918 571.742 214.058C572.003 214.189 572.227 214.352 572.414 214.548C572.601 214.735 572.745 214.959 572.848 215.22C572.951 215.472 573.002 215.766 573.002 216.102C573.002 216.653 572.904 217.124 572.708 217.516C572.512 217.899 572.246 218.207 571.91 218.44C571.574 218.673 571.187 218.846 570.748 218.958C570.309 219.061 569.852 219.112 569.376 219.112Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="marbella"
                        d="M487.91 275.325L489.562 274.192C490.506 273.544 491.801 273.82 492.399 274.797L496.107 280.851C496.362 281.269 496.763 281.579 497.232 281.721L505.887 284.347C506.219 284.447 506.569 284.46 506.907 284.384C512.996 283.007 525.016 280.277 528.253 279.5C532.417 278.5 540.225 273.5 541.786 271.5C542.812 270.185 545.314 270.581 547.04 271.134C547.671 271.336 548.365 271.286 548.923 270.929L552.465 268.661C552.631 268.554 552.813 268.473 553.004 268.419L565.208 265L578.452 261.702C578.97 261.573 579.414 261.242 579.688 260.784C581.889 257.103 585.768 250.749 586.548 250C587.325 249.253 590.886 244.67 592.908 242.031C593.172 241.686 593.54 241.437 593.958 241.32L605.184 238.174C605.588 238.061 606.018 238.078 606.412 238.222L613.667 240.878C613.887 240.959 614.12 241 614.355 241H626.838C626.946 241 627.053 240.991 627.16 240.974L648.176 237.553C648.391 237.518 648.598 237.448 648.79 237.347L657.293 232.848C658.202 232.367 659.328 232.653 659.896 233.511L662.167 236.939C662.408 237.303 662.762 237.578 663.175 237.722L668.059 239.428C668.195 239.476 668.336 239.509 668.48 239.526L676.284 240.463C676.488 240.488 676.687 240.543 676.874 240.628L686.17 244.859C686.376 244.952 686.564 245.08 686.727 245.237L691.906 250.211C692.104 250.402 692.261 250.631 692.367 250.885L696.283 260.29C696.341 260.43 696.415 260.562 696.503 260.685L701.915 268.248C702.035 268.415 702.179 268.563 702.344 268.686L711.063 275.2C711.326 275.397 711.635 275.526 711.96 275.575L721.204 276.977C721.304 276.992 721.404 277 721.504 277H731.074C731.186 277 731.298 276.991 731.409 276.972L740.091 275.5L753.21 272.107C753.483 272.036 753.767 272.024 754.045 272.071L761.936 273.409C762.287 273.469 762.616 273.621 762.888 273.85L766.489 276.877C766.587 276.959 766.676 277.05 766.757 277.149L769.933 281.073C770.16 281.352 770.457 281.566 770.795 281.69L777.046 284L783.407 287.202C783.792 287.395 784.104 287.708 784.297 288.094L788.331 296.161C788.443 296.385 788.595 296.586 788.782 296.753L793.347 300.863C793.449 300.954 793.559 301.035 793.677 301.104L799.188 304.318C799.394 304.438 799.577 304.595 799.728 304.779L808.5 315.5L810.853 318.343C811.201 318.763 811.362 319.306 811.3 319.848L810.427 327.391C810.381 327.788 810.455 328.189 810.64 328.544L813.71 334.442C813.899 334.805 813.972 335.218 813.919 335.624L813.58 338.228C813.515 338.725 813.267 339.179 812.884 339.501L809.785 342.105C809.479 342.363 809.237 342.706 809.228 343.105C809.192 344.823 810.728 346.786 810.357 347.5C809.836 348.5 808.795 352 807.754 352.5C806.921 352.9 804.631 355.5 804.631 356C804.631 357.5 803.59 360.7 803.59 361.5C803.59 361.84 803.622 362.494 803.684 363.223C803.802 364.594 802.675 365.934 801.3 365.871L793.371 365.509C793.244 365.503 793.119 365.485 792.995 365.456L780.996 362.574C780.792 362.525 780.599 362.445 780.421 362.336C778.437 361.11 774.841 358.764 774.443 358C774.027 357.2 769.065 353.667 766.636 352L752.583 344L728.64 328L707.998 316.598C707.88 316.533 707.769 316.456 707.667 316.368L698.681 308.695C698.529 308.566 698.359 308.46 698.176 308.381L677.791 299.569C677.686 299.523 677.577 299.487 677.465 299.46L665.348 296.55C665.211 296.517 665.077 296.469 664.949 296.408L661.201 294.607C661.052 294.536 660.896 294.483 660.734 294.45L644.113 291.064C643.907 291.021 643.694 291.012 643.485 291.036L631.217 292.451C630.935 292.483 630.649 292.455 630.378 292.369L626.559 291.146C626.26 291.05 625.943 291.026 625.633 291.075L617.01 292.456C616.828 292.485 616.651 292.539 616.484 292.617L602.157 299.261C601.82 299.417 601.446 299.477 601.078 299.432L593.624 298.537C593.419 298.513 593.211 298.52 593.008 298.559L582.904 300.5L565.208 304.5L552.716 308L543.936 310.343C543.552 310.445 543.147 310.431 542.771 310.302L536.208 308.051C536.11 308.017 536.015 307.976 535.923 307.927L525.651 302.5L517.831 299.683C517.498 299.563 517.14 299.533 516.793 299.597L506.393 301.5L494.861 303.908C494.572 303.969 494.273 303.964 493.985 303.895L484.61 301.644C484.22 301.55 483.868 301.342 483.598 301.046L480.964 298.153C480.585 297.737 480.048 297.5 479.485 297.5H472.192C471.779 297.5 471.401 297.271 471.211 296.905C471.076 296.646 471.049 296.343 471.136 296.064L472.262 292.46C472.45 291.856 472.914 291.377 473.511 291.168L477.875 289.644C478.146 289.549 478.392 289.399 478.596 289.197C479.722 288.077 483.569 284.131 484.012 282C484.456 279.869 486.79 276.649 487.47 275.744C487.593 275.58 487.741 275.441 487.91 275.325Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g filter="url(#filter3_d_272_5082)">
                        <path
                            d="M611.162 273V263.102H613.276L616.146 268.324L618.96 263.102H621.018V273H619.548V264.852L616.426 270.536H615.782L612.646 264.852V273H611.162ZM622.28 273L626.018 263.102H627.936L631.66 273H630.064L629.336 271.012H624.604L623.876 273H622.28ZM625.094 269.682H628.846L626.97 264.516L625.094 269.682ZM632.914 273V263.102H636.722C637.254 263.102 637.739 263.158 638.178 263.27C638.617 263.373 638.999 263.545 639.326 263.788C639.653 264.021 639.905 264.339 640.082 264.74C640.259 265.141 640.348 265.636 640.348 266.224C640.348 266.756 640.255 267.213 640.068 267.596C639.881 267.979 639.625 268.296 639.298 268.548C638.971 268.8 638.603 268.991 638.192 269.122L640.306 273H638.668L636.708 269.36H634.398V273H632.914ZM634.398 268.03H636.414C636.75 268.03 637.063 268.007 637.352 267.96C637.651 267.904 637.912 267.811 638.136 267.68C638.36 267.54 638.533 267.353 638.654 267.12C638.785 266.877 638.85 266.569 638.85 266.196C638.859 265.767 638.775 265.426 638.598 265.174C638.43 264.913 638.178 264.731 637.842 264.628C637.506 264.516 637.1 264.46 636.624 264.46H634.398V268.03ZM642.252 273V263.102H646.018C646.494 263.102 646.928 263.144 647.32 263.228C647.721 263.303 648.066 263.438 648.356 263.634C648.645 263.821 648.864 264.077 649.014 264.404C649.172 264.721 649.252 265.123 649.252 265.608C649.252 266.084 649.144 266.513 648.93 266.896C648.715 267.269 648.388 267.549 647.95 267.736C648.538 267.867 648.981 268.133 649.28 268.534C649.588 268.935 649.742 269.463 649.742 270.116C649.742 270.676 649.639 271.143 649.434 271.516C649.228 271.889 648.944 272.183 648.58 272.398C648.216 272.613 647.796 272.767 647.32 272.86C646.844 272.953 646.335 273 645.794 273H642.252ZM643.736 271.642H645.85C646.13 271.642 646.41 271.628 646.69 271.6C646.97 271.563 647.226 271.493 647.46 271.39C647.702 271.287 647.894 271.133 648.034 270.928C648.183 270.723 648.258 270.447 648.258 270.102C648.258 269.813 648.202 269.575 648.09 269.388C647.978 269.192 647.828 269.038 647.642 268.926C647.455 268.814 647.236 268.735 646.984 268.688C646.741 268.641 646.489 268.618 646.228 268.618H643.736V271.642ZM643.736 267.344H645.612C645.929 267.344 646.218 267.316 646.48 267.26C646.75 267.204 646.984 267.111 647.18 266.98C647.376 266.849 647.525 266.686 647.628 266.49C647.74 266.285 647.796 266.037 647.796 265.748C647.805 265.365 647.721 265.085 647.544 264.908C647.376 264.721 647.147 264.6 646.858 264.544C646.568 264.479 646.251 264.446 645.906 264.446H643.736V267.344ZM651.535 273V263.102H658.353V264.46H653.019V267.428H657.737V268.772H653.019V271.642H658.353V273H651.535ZM660.135 273V263.102H661.619V271.642H666.911V273H660.135ZM668.269 273V263.102H669.753V271.642H675.045V273H668.269ZM675.614 273L679.352 263.102H681.27L684.994 273H683.398L682.67 271.012H677.938L677.21 273H675.614ZM678.428 269.682H682.18L680.304 264.516L678.428 269.682Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="ojen"
                        d="M669.925 221.131L659.299 230.816C658.556 231.493 658.431 232.617 659.008 233.44L661.791 237.419C662.054 237.795 662.439 238.069 662.88 238.195L667.291 239.456C667.394 239.485 667.499 239.506 667.605 239.519L675.536 240.464C675.739 240.488 675.936 240.543 676.122 240.627L685.502 244.86C685.707 244.953 685.895 245.079 686.058 245.235L691.789 250.695C692 250.896 692.163 251.138 692.27 251.409C693.369 254.194 695.383 259.239 695.782 260C696.307 261 701.03 268 701.03 268.5C701.03 268.886 707.216 273.026 710.637 275.263C710.877 275.42 711.147 275.522 711.43 275.565L720.822 276.978C720.921 276.993 721.02 277 721.12 277H730.791C730.891 277 730.99 276.993 731.089 276.978L740.911 275.5L752.586 272.598C752.846 272.533 753.117 272.522 753.382 272.564L761.96 273.926C762.266 273.975 762.557 274.094 762.809 274.274L766.406 276.845C766.551 276.948 766.681 277.07 766.793 277.207L769.95 281.075C770.177 281.353 770.475 281.565 770.812 281.689L777.119 284L783.325 287.184C783.724 287.389 784.042 287.72 784.229 288.127C785.527 290.95 787.749 295.758 788.139 296.5C788.663 297.5 792.861 301 793.386 301C793.787 301 797.094 303.13 798.914 304.337C799.077 304.445 799.222 304.577 799.346 304.728L804.931 311.5L807.991 315.388C808.05 315.462 808.114 315.533 808.183 315.599L810.548 317.853C811.223 318.495 812.282 318.495 812.957 317.853C813.493 317.342 813.648 316.548 813.344 315.873L807.974 303.934C807.711 303.347 807.745 302.67 808.066 302.113L812.831 293.859C813.143 293.318 813.185 292.662 812.943 292.085L812.344 290.66C812.3 290.553 812.246 290.451 812.184 290.354L806.667 281.752C806.559 281.585 806.478 281.403 806.424 281.211L802.41 266.868C802.342 266.625 802.32 266.371 802.347 266.12L803.356 256.5C803.356 256 807.704 249.716 808.079 249C808.604 248 811.228 244.5 812.277 243.5C813.327 242.5 817 241 817 240C817 239.503 813.348 236.4 810.682 237.019C809.992 237.179 809.245 237.341 808.599 237.049C806.172 235.949 806.878 235.712 806.505 235C805.98 234 800.208 232 799.683 231C799.294 230.259 796.475 231.176 794.81 231.846C794.562 231.946 794.298 232 794.03 232H785.606C785.205 232 784.813 231.879 784.481 231.653L778.385 227.505C777.913 227.184 777.327 227.079 776.773 227.218L767.673 229.5L758.01 231.502C756.768 231.759 755.604 230.811 755.604 229.543V227.34C755.604 227.115 755.566 226.892 755.492 226.679L754.142 222.821C754.068 222.608 754.03 222.386 754.03 222.161V216.5V215.028C754.03 214.126 753.426 213.337 752.558 213.092C749.979 212.366 746.505 211.33 746.158 211C745.739 210.6 742.485 208.167 740.911 207L731.873 200.302C731.605 200.104 731.392 199.842 731.251 199.54L729.709 196.235C729.489 195.764 729.095 195.396 728.609 195.211L719.609 191.781C719.135 191.6 718.61 191.607 718.141 191.798L715.562 192.852C715.321 192.95 715.065 193 714.805 193H711.16C710.416 193 709.734 192.588 709.389 191.929L707.448 188.231C707.368 188.078 707.267 187.935 707.15 187.808L705.576 186.094C704.64 185.074 702.976 185.292 702.332 186.518L702.079 187C701.554 188 698.406 190.5 697.881 191C697.507 191.357 694.88 192.27 693.199 192.818C692.83 192.938 692.503 193.16 692.257 193.461L685.287 202L676.366 212.5L670.185 220.844C670.108 220.948 670.021 221.044 669.925 221.131Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g filter="url(#filter4_d_272_5082)">
                        <path
                            d="M730.348 255.112C729.331 255.112 728.467 254.897 727.758 254.468C727.058 254.029 726.526 253.427 726.162 252.662C725.798 251.897 725.616 251.029 725.616 250.058C725.616 249.078 725.798 248.205 726.162 247.44C726.526 246.675 727.063 246.077 727.772 245.648C728.481 245.209 729.345 244.99 730.362 244.99C731.389 244.99 732.252 245.205 732.952 245.634C733.652 246.063 734.184 246.661 734.548 247.426C734.912 248.191 735.094 249.064 735.094 250.044C735.094 251.015 734.912 251.883 734.548 252.648C734.184 253.413 733.647 254.015 732.938 254.454C732.238 254.893 731.375 255.112 730.348 255.112ZM730.362 253.754C731.109 253.754 731.72 253.581 732.196 253.236C732.672 252.891 733.022 252.438 733.246 251.878C733.47 251.318 733.582 250.711 733.582 250.058C733.582 249.563 733.517 249.092 733.386 248.644C733.265 248.196 733.073 247.799 732.812 247.454C732.551 247.109 732.215 246.838 731.804 246.642C731.393 246.446 730.913 246.348 730.362 246.348C729.625 246.348 729.013 246.521 728.528 246.866C728.052 247.211 727.697 247.664 727.464 248.224C727.231 248.784 727.114 249.395 727.114 250.058C727.114 250.711 727.226 251.318 727.45 251.878C727.683 252.438 728.038 252.891 728.514 253.236C728.999 253.581 729.615 253.754 730.362 253.754ZM739.636 255.112C739.141 255.112 738.698 255.056 738.306 254.944C737.914 254.832 737.578 254.655 737.298 254.412C737.018 254.16 736.798 253.843 736.64 253.46C736.481 253.068 736.392 252.601 736.374 252.06H737.858C737.895 252.387 737.974 252.681 738.096 252.942C738.217 253.194 738.399 253.395 738.642 253.544C738.894 253.684 739.22 253.754 739.622 253.754C740.032 253.754 740.35 253.67 740.574 253.502C740.798 253.325 740.956 253.091 741.05 252.802C741.152 252.503 741.204 252.167 741.204 251.794V245.102H742.688V251.556C742.688 252.088 742.632 252.573 742.52 253.012C742.408 253.451 742.23 253.829 741.988 254.146C741.745 254.454 741.428 254.692 741.036 254.86C740.653 255.028 740.186 255.112 739.636 255.112ZM744.947 255V245.102H751.765V246.46H746.431V249.428H751.149V250.772H746.431V253.642H751.765V255H744.947ZM753.547 255V245.102H755.269L760.239 252.83V245.102H761.709V255H760.029L755.031 247.314V255H753.547Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="mijas"
                        d="M814.113 369.912L803.917 366.366C803.113 366.087 802.574 365.329 802.574 364.477V361.072C802.574 360.947 802.585 360.821 802.609 360.698L803.503 355.995C803.581 355.586 803.785 355.211 804.086 354.923L806.59 352.528C806.71 352.414 806.815 352.286 806.902 352.145C808.379 349.752 808.985 348.12 809.393 347.34C809.774 346.611 807.437 343.474 808.063 342.535C808.194 342.339 808.436 342.247 808.617 342.096L811.941 339.314C812.326 338.992 812.576 338.537 812.641 338.04L812.983 335.427C813.036 335.019 812.962 334.605 812.772 334.241L809.678 328.324C809.492 327.969 809.417 327.565 809.464 327.167L810.325 319.752C810.399 319.122 810.766 318.564 811.317 318.248L811.445 318.174C812.357 317.651 812.708 316.511 812.249 315.566L806.71 304.158C806.42 303.559 806.446 302.855 806.78 302.28L811.395 294.337C811.459 294.227 811.512 294.111 811.554 293.991L811.73 293.485C811.912 292.963 811.87 292.389 811.614 291.9L810.966 290.661L805.334 281.357C805.242 281.207 805.172 281.045 805.123 280.876L801.107 266.954C801.036 266.71 801.013 266.454 801.038 266.201L802.003 256.518C802.033 256.211 802.134 255.915 802.299 255.653L806.77 248.527L810.824 243.197C810.919 243.072 811.026 242.96 811.148 242.862C812.446 241.823 815.012 240 816.212 240C817.785 240 820.933 241.505 821.982 242.006C823.031 242.508 824.604 244.013 825.653 245.016C826.493 245.818 830.199 246.019 831.948 246.019H841.914C844.636 246.019 848.768 247.454 850.89 248.33C851.198 248.457 851.528 248.512 851.86 248.484C853.945 248.308 857.68 248.025 859.224 248.025C861.322 248.025 863.42 250.533 863.945 250.533C864.469 250.533 873.387 248.025 874.436 248.025C875.485 248.025 882.304 249.029 882.828 248.527L885.137 246.32C885.344 246.121 885.59 245.97 885.861 245.877C887.967 245.152 892.147 243.76 894.893 243.01C898.564 242.006 900.138 242.508 902.236 243.01C903.819 243.388 908.947 244.985 911.726 245.867C912.039 245.967 912.323 246.143 912.552 246.379L919.021 253.041C920.945 254.546 925.106 257.556 926.365 257.556C927.939 257.556 931.61 254.045 932.135 253.041C932.459 252.422 934.471 250.168 936.096 248.403C936.813 247.624 938.015 247.552 938.81 248.252C940.261 249.529 942.016 251.163 942.626 252.038C943.675 253.543 946.298 253.041 947.347 253.041C948.037 253.041 950.67 252.136 952.555 251.442C953.228 251.194 953.984 251.316 954.539 251.771L957.18 253.936C957.269 254.008 957.35 254.088 957.425 254.174L969.693 268.349C969.831 268.509 969.944 268.69 970.025 268.886L971.507 272.428C971.808 273.146 971.664 273.974 971.137 274.548C969.843 275.957 968.14 277.8 967.804 278.121C967.279 278.623 968.853 282.134 968.853 283.137C968.853 284.14 966.755 291.664 966.755 293.169C966.755 294.322 963.864 295.261 962.238 295.632C962.102 295.663 961.963 295.677 961.824 295.677H958.58C958.435 295.677 958.291 295.692 958.149 295.724L952.178 297.041C951.765 297.132 951.392 297.352 951.112 297.669L946.21 303.208C945.926 303.529 945.547 303.75 945.128 303.839L941.484 304.613C941.2 304.674 940.932 304.796 940.699 304.971L933.824 310.136C933.747 310.194 933.666 310.246 933.582 310.292C932.324 310.993 930.037 312.456 930.037 313.232C930.037 314.235 928.463 317.747 928.463 318.75C928.463 319.399 926.177 319.217 924.377 318.947C923.659 318.839 922.927 319.094 922.474 319.66C921.754 320.56 920.896 321.685 920.595 322.261C920.071 323.264 915.874 328.28 915.35 329.283C914.986 329.979 913.544 332.234 912.597 333.693C912.342 334.085 912.232 334.554 912.286 335.018L912.624 337.926C912.69 338.491 912.512 339.057 912.135 339.482L906.957 345.334L901.736 351.575C901.115 352.317 901.115 353.399 901.736 354.141L905.8 358.999C906.458 359.785 906.415 360.94 905.696 361.67C903.224 364.177 899.622 367.733 898.564 368.407C897.454 369.115 894.359 370.395 892.444 371.146C891.994 371.323 891.495 371.325 891.041 371.158L885.206 369.012C885.021 368.944 884.826 368.903 884.629 368.892C881.569 368.72 875.891 368.407 875.485 368.407C875.135 368.407 873.543 366.312 872.416 364.744C872.034 364.213 871.424 363.893 870.77 363.893H862.371H856.636C856.27 363.893 855.913 363.993 855.598 364.182C853.503 365.439 849.623 367.666 847.684 368.407C845.061 369.411 835.62 372.42 833.521 372.922C832.367 373.198 831.477 372.698 830.92 372.142C830.511 371.733 830.051 371.34 829.489 371.205L824.591 370.034C824.256 369.954 823.906 369.962 823.574 370.057L819.416 371.25C819.037 371.359 818.634 371.353 818.257 371.233L814.113 369.912Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g filter="url(#filter5_d_272_5082)">
                        <path
                            d="M855.162 308V298.102H857.276L860.146 303.324L862.96 298.102H865.018V308H863.548V299.852L860.426 305.536H859.782L856.646 299.852V308H855.162ZM867.344 308V298.102H868.828V308H867.344ZM873.79 308.112C873.295 308.112 872.852 308.056 872.46 307.944C872.068 307.832 871.732 307.655 871.452 307.412C871.172 307.16 870.953 306.843 870.794 306.46C870.635 306.068 870.547 305.601 870.528 305.06H872.012C872.049 305.387 872.129 305.681 872.25 305.942C872.371 306.194 872.553 306.395 872.796 306.544C873.048 306.684 873.375 306.754 873.776 306.754C874.187 306.754 874.504 306.67 874.728 306.502C874.952 306.325 875.111 306.091 875.204 305.802C875.307 305.503 875.358 305.167 875.358 304.794V298.102H876.842V304.556C876.842 305.088 876.786 305.573 876.674 306.012C876.562 306.451 876.385 306.829 876.142 307.146C875.899 307.454 875.582 307.692 875.19 307.86C874.807 308.028 874.341 308.112 873.79 308.112ZM877.901 308L881.639 298.102H883.557L887.281 308H885.685L884.957 306.012H880.225L879.497 308H877.901ZM880.715 304.682H884.467L882.591 299.516L880.715 304.682ZM891.915 308.112C891.271 308.112 890.664 308.019 890.095 307.832C889.526 307.645 889.045 307.342 888.653 306.922C888.261 306.502 888 305.947 887.869 305.256H889.395C889.516 305.648 889.712 305.956 889.983 306.18C890.254 306.395 890.566 306.544 890.921 306.628C891.285 306.712 891.649 306.754 892.013 306.754C892.358 306.754 892.68 306.707 892.979 306.614C893.287 306.521 893.539 306.367 893.735 306.152C893.931 305.937 894.029 305.657 894.029 305.312C894.029 305.051 893.978 304.836 893.875 304.668C893.772 304.5 893.628 304.365 893.441 304.262C893.264 304.15 893.049 304.061 892.797 303.996C892.508 303.903 892.195 303.823 891.859 303.758C891.532 303.693 891.206 303.618 890.879 303.534C890.562 303.45 890.263 303.343 889.983 303.212C889.75 303.119 889.521 303.007 889.297 302.876C889.082 302.736 888.896 302.573 888.737 302.386C888.578 302.19 888.448 301.961 888.345 301.7C888.252 301.439 888.205 301.14 888.205 300.804C888.205 300.356 888.275 299.973 888.415 299.656C888.564 299.339 888.756 299.073 888.989 298.858C889.232 298.643 889.507 298.475 889.815 298.354C890.132 298.223 890.464 298.13 890.809 298.074C891.154 298.018 891.49 297.99 891.817 297.99C892.414 297.99 892.965 298.083 893.469 298.27C893.973 298.457 894.388 298.755 894.715 299.166C895.051 299.567 895.233 300.099 895.261 300.762H893.819C893.782 300.407 893.66 300.127 893.455 299.922C893.259 299.707 893.012 299.558 892.713 299.474C892.414 299.381 892.097 299.334 891.761 299.334C891.518 299.334 891.276 299.357 891.033 299.404C890.79 299.441 890.566 299.516 890.361 299.628C890.165 299.731 890.006 299.871 889.885 300.048C889.773 300.225 889.717 300.445 889.717 300.706C889.717 300.93 889.764 301.131 889.857 301.308C889.95 301.476 890.081 301.621 890.249 301.742C890.426 301.854 890.622 301.952 890.837 302.036C891.229 302.185 891.658 302.302 892.125 302.386C892.592 302.461 893.03 302.568 893.441 302.708C893.74 302.801 894.02 302.918 894.281 303.058C894.542 303.189 894.766 303.352 894.953 303.548C895.14 303.735 895.284 303.959 895.387 304.22C895.49 304.472 895.541 304.766 895.541 305.102C895.541 305.653 895.443 306.124 895.247 306.516C895.051 306.899 894.785 307.207 894.449 307.44C894.113 307.673 893.726 307.846 893.287 307.958C892.848 308.061 892.391 308.112 891.915 308.112Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="malaga"
                        d="M1044.5 262.5C1041.91 261.5 1041.12 257.5 1038 255.5C1035.1 253.639 1048.74 248.748 1050.65 248.077C1050.8 248.024 1050.94 247.956 1051.08 247.87L1056.94 244.106C1057.05 244.036 1057.15 243.954 1057.24 243.864L1060.63 240.599C1060.7 240.533 1060.77 240.462 1060.82 240.387L1066.75 232.785C1066.89 232.596 1067.07 232.436 1067.27 232.311L1079.61 224.704C1079.83 224.569 1080.02 224.394 1080.18 224.188L1089.74 211.2C1090.55 210.111 1090.06 208.556 1088.78 208.12L1082.85 206.106C1082.65 206.036 1082.43 206 1082.21 206H1070.05C1069.73 206 1069.41 205.922 1069.13 205.773L1057.3 199.604C1057.17 199.535 1057.05 199.451 1056.93 199.355L1049.32 192.886C1048.69 192.352 1048.46 191.487 1048.73 190.708L1050.66 185.115C1050.8 184.715 1050.81 184.282 1050.68 183.877L1048.49 176.689C1048.35 176.244 1048.07 175.86 1047.68 175.603L1040.58 170.929C1039.49 170.207 1039.37 168.643 1040.35 167.768L1045.24 163.394C1045.53 163.137 1045.74 162.802 1045.84 162.43L1048.05 154.333C1048.2 153.801 1048.12 153.233 1047.83 152.763L1043.45 145.598C1043.22 145.211 1043.12 144.755 1043.17 144.305L1045.6 125.142C1045.65 124.725 1045.83 124.337 1046.12 124.031C1049.38 120.58 1055.52 114.5 1057.1 114.5C1058.76 114.5 1057.8 109.833 1057.1 107.5L1055.17 97.2485C1055.08 96.7664 1055.17 96.2676 1055.42 95.8471L1059.77 88.6137C1060.31 87.7071 1061.47 87.3816 1062.41 87.8709L1072.76 93.2732C1073.05 93.4222 1073.36 93.5 1073.69 93.5H1078.66C1079.44 93.5 1080.15 93.9586 1080.48 94.6729L1087.03 109.106C1087.15 109.366 1087.21 109.648 1087.21 109.933V115.007C1087.21 116.286 1088.4 117.237 1089.65 116.959L1100.5 114.548C1100.64 114.516 1100.78 114.5 1100.93 114.5H1110.57H1121.48H1133.95C1134.59 114.5 1135.2 114.194 1135.57 113.676L1138.5 109.642C1138.57 109.548 1138.65 109.459 1138.73 109.378L1148.02 100.429C1148.32 100.149 1148.68 99.9642 1149.08 99.8972L1169.24 96.5L1179.57 93.7861C1180.24 93.6085 1180.78 93.0907 1180.98 92.4205L1183.67 83.344C1183.74 83.1165 1183.84 82.9028 1183.99 82.7129L1190.12 74.5333C1190.38 74.1871 1190.52 73.7661 1190.52 73.3334V65.3524C1190.52 64.5354 1191.02 63.8006 1191.77 63.4963L1196.22 61.7106C1196.57 61.5729 1196.87 61.3428 1197.09 61.0458L1200.71 56.1594C1201.38 55.2518 1202.67 55.0816 1203.56 55.7839L1210.52 61.3047C1210.68 61.4341 1210.82 61.5882 1210.94 61.7614L1214.84 67.6103C1215.22 68.1662 1215.84 68.5 1216.51 68.5H1221.86C1222.08 68.5 1222.29 68.4653 1222.49 68.3973L1234.89 64.265C1235.4 64.0955 1235.95 64.1371 1236.43 64.3806L1244.08 68.2817C1244.36 68.4252 1244.67 68.5 1244.99 68.5H1252.06C1252.84 68.5 1253.54 68.9497 1253.87 69.6534L1257.47 77.3466C1257.8 78.0503 1258.5 78.5 1259.28 78.5H1260.73C1260.99 78.5 1261.25 78.4486 1261.49 78.3487L1271.79 74.0983C1271.94 74.0331 1272.09 73.9477 1272.23 73.8445L1278.5 69.1002C1279 68.7221 1279.29 68.1319 1279.29 67.5054V64.3988C1279.29 64.1355 1279.34 63.8748 1279.44 63.6317L1285.31 49.5025C1285.45 49.1735 1285.67 48.8869 1285.96 48.6725L1297.46 40L1302.58 35.0692C1303.23 34.4391 1304.23 34.3289 1305.01 34.801L1313.29 39.837C1313.46 39.945 1313.62 40.08 1313.76 40.2371L1321.22 48.8585C1321.3 48.9526 1321.37 49.0542 1321.43 49.1618L1328.61 61.5L1336.09 73.5145C1336.29 73.8318 1336.4 74.1982 1336.4 74.572V85.3706C1336.4 86.3194 1337.06 87.1376 1337.99 87.3293L1350.58 89.928C1350.81 89.9756 1351.03 90.0636 1351.23 90.188L1364.67 98.5367C1365.83 99.2568 1365.94 100.9 1364.89 101.773L1356.77 108.527C1356.08 109.102 1355.86 110.065 1356.22 110.889C1358.04 115.077 1360.79 122.003 1360.79 124.5C1360.79 126.992 1364.08 129.404 1366.27 130.61C1366.75 130.872 1367.31 130.893 1367.82 130.705L1373.44 128.625C1373.66 128.542 1373.89 128.5 1374.13 128.5H1378C1379.11 128.5 1380 129.394 1380 130.498V141.5C1380 143.812 1376.15 147.238 1374.01 148.827C1373.85 148.943 1373.68 149.032 1373.5 149.096L1361.21 153.356C1360.94 153.451 1360.69 153.604 1360.48 153.805L1351.54 162.41C1351.15 162.787 1350.93 163.307 1350.93 163.85V166.708C1350.93 168.078 1349.58 169.042 1348.29 168.601L1342.92 166.776C1342.4 166.6 1341.83 166.644 1341.35 166.9L1337.47 168.938C1336.81 169.284 1336.4 169.965 1336.4 170.708V179.149C1336.4 179.693 1336.17 180.213 1335.78 180.59L1329.19 186.941C1328.82 187.299 1328.32 187.5 1327.8 187.5H1322.62C1321.84 187.5 1321.13 187.951 1320.8 188.656L1314.74 201.68C1314.64 201.892 1314.58 202.119 1314.56 202.352L1314.19 206.663C1314.12 207.472 1313.57 208.158 1312.79 208.4L1296.27 213.562C1295.43 213.822 1294.87 214.596 1294.87 215.471V223.53C1294.87 224.142 1295.15 224.721 1295.63 225.101L1297.58 226.636C1298.84 227.635 1298.47 229.646 1296.92 230.119L1290.17 232.188C1289.54 232.383 1289.04 232.883 1288.85 233.52L1285.67 244.001C1285.57 244.328 1285.39 244.625 1285.15 244.862L1280.17 249.651C1279.63 250.172 1278.84 250.346 1278.13 250.102L1272.2 248.059C1272.08 248.02 1271.97 247.97 1271.86 247.911L1244.51 232.5L1222.65 219.772C1222.35 219.594 1222 219.5 1221.65 219.5H1201.94H1183.77C1180.14 219.5 1176.22 222.642 1174.57 224.35C1174.47 224.449 1174.37 224.54 1174.26 224.619L1155.4 237.87C1155.28 237.956 1155.17 238.056 1155.07 238.168L1141.72 253L1122.04 270.495C1121.68 270.82 1121.2 271 1120.71 271H1106.42L1102.09 271.399C1101.41 271.462 1100.75 271.174 1100.33 270.636L1094.28 262.858C1094.1 262.622 1093.86 262.431 1093.6 262.297L1087.15 259.074C1087.05 259.025 1086.96 258.967 1086.87 258.903L1082.03 255.383C1081.69 255.134 1081.27 255 1080.85 255H1072.18C1071.74 255 1071.31 255.146 1070.96 255.415L1059.16 264.494C1058.74 264.818 1058.21 264.962 1057.68 264.89C1055.03 264.525 1046.68 263.337 1044.5 262.5Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g clip-path="url(#clip0_272_5082)">
                        <path
                            d="M1115.12 244L1115.9 243.215C1116.21 242.911 1116.13 242.537 1115.73 242.381L1110.66 240.366C1109.86 240.048 1109.71 239.298 1110.31 238.697L1111.24 237.764C1111.72 237.283 1112.64 237.085 1113.27 237.346L1119.04 239.645C1119.2 239.701 1119.45 239.652 1119.58 239.524L1121.74 237.361C1122.42 236.682 1123.74 236.371 1124.65 236.661C1124.97 236.767 1125.22 237.021 1125.33 237.339C1125.63 238.259 1125.32 239.567 1124.64 240.246L1122.48 242.409C1122.35 242.537 1122.3 242.784 1122.36 242.954L1122.78 244L1115.12 244Z"
                            fill="#313131" />
                        <path opacity="0.4"
                            d="M1124.24 250.76L1123.31 251.693C1122.7 252.294 1121.95 252.138 1121.64 251.339L1119.62 246.269C1119.45 245.873 1119.09 245.796 1118.79 246.1L1116.73 248.157C1116.57 248.32 1116.42 248.645 1116.43 248.879L1116.42 252.167C1116.42 252.506 1116.16 252.923 1115.85 253.079L1114.57 253.722C1114.01 253.998 1113.35 253.715 1113.15 253.135L1112.88 250.038C1112.85 249.565 1112.43 249.147 1111.96 249.112L1108.86 248.843C1108.27 248.652 1108 247.981 1108.29 247.436L1108.93 246.156C1109.09 245.838 1109.5 245.584 1109.84 245.584L1113.13 245.576C1113.36 245.576 1113.68 245.435 1113.84 245.272L1115.12 244L1122.78 244L1124.66 248.723C1124.92 249.359 1124.72 250.279 1124.24 250.76Z"
                            fill="#313131" />
                    </g>
                    <g filter="url(#filter6_d_272_5082)">
                        <path
                            d="M1180.16 167V157.102H1182.28L1185.15 162.324L1187.96 157.102H1190.02V167H1188.55V158.852L1185.43 164.536H1184.78L1181.65 158.852V167H1180.16ZM1191.28 167L1195.02 157.102H1196.94L1200.66 167H1199.06L1198.34 165.012H1193.6L1192.88 167H1191.28ZM1194.09 163.682H1197.85L1195.97 158.516L1194.09 163.682ZM1201.91 167V157.102H1203.4V165.642H1208.69V167H1201.91ZM1209.26 167L1213 157.102H1214.91L1218.64 167H1217.04L1216.31 165.012H1211.58L1210.85 167H1209.26ZM1212.07 163.682H1215.82L1213.95 158.516L1212.07 163.682ZM1223.73 167.112C1222.71 167.112 1221.85 166.897 1221.16 166.468C1220.48 166.039 1219.96 165.446 1219.62 164.69C1219.27 163.925 1219.1 163.052 1219.1 162.072C1219.1 161.335 1219.19 160.658 1219.38 160.042C1219.58 159.417 1219.87 158.875 1220.25 158.418C1220.63 157.961 1221.11 157.611 1221.68 157.368C1222.26 157.116 1222.92 156.99 1223.68 156.99C1224.42 156.99 1225.06 157.107 1225.62 157.34C1226.18 157.564 1226.65 157.891 1227.01 158.32C1227.38 158.749 1227.64 159.267 1227.77 159.874H1226.2C1226.11 159.547 1225.96 159.272 1225.72 159.048C1225.5 158.824 1225.21 158.651 1224.87 158.53C1224.53 158.409 1224.15 158.348 1223.72 158.348C1223.16 158.348 1222.68 158.446 1222.29 158.642C1221.9 158.838 1221.58 159.109 1221.33 159.454C1221.08 159.79 1220.91 160.182 1220.79 160.63C1220.68 161.078 1220.63 161.554 1220.63 162.058C1220.63 162.73 1220.73 163.346 1220.95 163.906C1221.16 164.466 1221.5 164.914 1221.96 165.25C1222.41 165.586 1223.01 165.754 1223.75 165.754C1224.32 165.754 1224.81 165.656 1225.22 165.46C1225.63 165.255 1225.95 164.965 1226.18 164.592C1226.42 164.209 1226.54 163.747 1226.55 163.206H1223.48V161.904H1228V162.632C1228 163.537 1227.84 164.326 1227.5 164.998C1227.16 165.67 1226.68 166.193 1226.04 166.566C1225.41 166.93 1224.64 167.112 1223.73 167.112ZM1228.45 167L1232.19 157.102H1234.11L1237.83 167H1236.24L1235.51 165.012H1230.78L1230.05 167H1228.45ZM1231.27 163.682H1235.02L1233.14 158.516L1231.27 163.682Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="torremolinos"
                        d="M1021.47 259.5L1013.45 266.01C1012.35 266.906 1012.61 268.658 1013.92 269.196C1014.4 269.39 1014.77 269.769 1014.96 270.245L1016.1 273.17C1016.19 273.388 1016.31 273.59 1016.47 273.765L1021.79 279.777C1021.92 279.925 1022.03 280.091 1022.11 280.271L1025.52 287.718C1025.61 287.905 1025.72 288.077 1025.86 288.229L1032.45 295.5L1039.26 302.5L1044.49 307L1048.56 310.114C1049.25 310.642 1050.2 310.664 1050.92 310.168L1055.35 307.089C1055.43 307.03 1055.51 306.966 1055.59 306.894C1058.07 304.517 1063.13 299.576 1064.37 298C1065.58 296.461 1068.5 292.641 1069.96 290.72C1070.07 290.573 1070.2 290.444 1070.35 290.333L1077.32 285.104C1077.41 285.035 1077.5 284.975 1077.61 284.922C1080.28 283.559 1085.75 280.785 1087.4 280C1088.97 279.246 1091.29 277.251 1092.43 276.186C1092.56 276.063 1092.71 275.957 1092.87 275.872L1098.97 272.593C1100.04 272.016 1100.35 270.623 1099.63 269.643L1095.02 263.401C1094.82 263.138 1094.57 262.926 1094.27 262.785L1087.59 259.594C1087.46 259.532 1087.34 259.455 1087.22 259.365L1082.18 255.424C1081.83 255.149 1081.4 255 1080.95 255H1071.88C1071.42 255 1070.98 255.157 1070.62 255.445L1064.37 260.5L1059.3 264.464C1058.86 264.806 1058.3 264.95 1057.76 264.863L1046.21 263.025C1046.11 263.008 1046.01 263.002 1045.9 262.994C1043.35 262.808 1041.01 258.176 1039.78 257C1038.71 255.977 1036.67 254.518 1035.23 253.49C1034.79 253.177 1034.25 253.054 1033.72 253.149L1026.82 254.383C1026.4 254.459 1026.02 254.669 1025.72 254.981L1021.47 259.5Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g filter="url(#filter7_d_272_5082)">
                        <path
                            d="M1059.3 289V280.46H1056.17V279.102H1063.91V280.46H1060.79V289H1059.3ZM1069.44 289.112C1068.42 289.112 1067.56 288.897 1066.85 288.468C1066.15 288.029 1065.62 287.427 1065.26 286.662C1064.89 285.897 1064.71 285.029 1064.71 284.058C1064.71 283.078 1064.89 282.205 1065.26 281.44C1065.62 280.675 1066.16 280.077 1066.87 279.648C1067.58 279.209 1068.44 278.99 1069.46 278.99C1070.48 278.99 1071.35 279.205 1072.05 279.634C1072.75 280.063 1073.28 280.661 1073.64 281.426C1074.01 282.191 1074.19 283.064 1074.19 284.044C1074.19 285.015 1074.01 285.883 1073.64 286.648C1073.28 287.413 1072.74 288.015 1072.03 288.454C1071.33 288.893 1070.47 289.112 1069.44 289.112ZM1069.46 287.754C1070.2 287.754 1070.81 287.581 1071.29 287.236C1071.77 286.891 1072.12 286.438 1072.34 285.878C1072.56 285.318 1072.68 284.711 1072.68 284.058C1072.68 283.563 1072.61 283.092 1072.48 282.644C1072.36 282.196 1072.17 281.799 1071.91 281.454C1071.64 281.109 1071.31 280.838 1070.9 280.642C1070.49 280.446 1070.01 280.348 1069.46 280.348C1068.72 280.348 1068.11 280.521 1067.62 280.866C1067.15 281.211 1066.79 281.664 1066.56 282.224C1066.32 282.784 1066.21 283.395 1066.21 284.058C1066.21 284.711 1066.32 285.318 1066.54 285.878C1066.78 286.438 1067.13 286.891 1067.61 287.236C1068.09 287.581 1068.71 287.754 1069.46 287.754ZM1075.96 289V279.102H1079.77C1080.3 279.102 1080.79 279.158 1081.22 279.27C1081.66 279.373 1082.05 279.545 1082.37 279.788C1082.7 280.021 1082.95 280.339 1083.13 280.74C1083.31 281.141 1083.39 281.636 1083.39 282.224C1083.39 282.756 1083.3 283.213 1083.11 283.596C1082.93 283.979 1082.67 284.296 1082.34 284.548C1082.02 284.8 1081.65 284.991 1081.24 285.122L1083.35 289H1081.71L1079.75 285.36H1077.44V289H1075.96ZM1077.44 284.03H1079.46C1079.8 284.03 1080.11 284.007 1080.4 283.96C1080.7 283.904 1080.96 283.811 1081.18 283.68C1081.41 283.54 1081.58 283.353 1081.7 283.12C1081.83 282.877 1081.9 282.569 1081.9 282.196C1081.91 281.767 1081.82 281.426 1081.64 281.174C1081.48 280.913 1081.22 280.731 1080.89 280.628C1080.55 280.516 1080.15 280.46 1079.67 280.46H1077.44V284.03ZM1085.31 289V279.102H1089.12C1089.65 279.102 1090.14 279.158 1090.58 279.27C1091.02 279.373 1091.4 279.545 1091.72 279.788C1092.05 280.021 1092.3 280.339 1092.48 280.74C1092.66 281.141 1092.75 281.636 1092.75 282.224C1092.75 282.756 1092.65 283.213 1092.47 283.596C1092.28 283.979 1092.02 284.296 1091.7 284.548C1091.37 284.8 1091 284.991 1090.59 285.122L1092.7 289H1091.07L1089.11 285.36H1086.8V289H1085.31ZM1086.8 284.03H1088.81C1089.15 284.03 1089.46 284.007 1089.75 283.96C1090.05 283.904 1090.31 283.811 1090.53 283.68C1090.76 283.54 1090.93 283.353 1091.05 283.12C1091.18 282.877 1091.25 282.569 1091.25 282.196C1091.26 281.767 1091.17 281.426 1091 281.174C1090.83 280.913 1090.58 280.731 1090.24 280.628C1089.9 280.516 1089.5 280.46 1089.02 280.46H1086.8V284.03ZM1094.66 289V279.102H1101.48V280.46H1096.15V283.428H1100.87V284.772H1096.15V287.642H1101.48V289H1094.66ZM1103.26 289V279.102H1105.38L1108.25 284.324L1111.06 279.102H1113.12V289H1111.65V280.852L1108.53 286.536H1107.88L1104.75 280.852V289H1103.26ZM1119.63 289.112C1118.61 289.112 1117.75 288.897 1117.04 288.468C1116.34 288.029 1115.81 287.427 1115.45 286.662C1115.08 285.897 1114.9 285.029 1114.9 284.058C1114.9 283.078 1115.08 282.205 1115.45 281.44C1115.81 280.675 1116.35 280.077 1117.06 279.648C1117.76 279.209 1118.63 278.99 1119.65 278.99C1120.67 278.99 1121.54 279.205 1122.24 279.634C1122.94 280.063 1123.47 280.661 1123.83 281.426C1124.2 282.191 1124.38 283.064 1124.38 284.044C1124.38 285.015 1124.2 285.883 1123.83 286.648C1123.47 287.413 1122.93 288.015 1122.22 288.454C1121.52 288.893 1120.66 289.112 1119.63 289.112ZM1119.65 287.754C1120.39 287.754 1121 287.581 1121.48 287.236C1121.96 286.891 1122.31 286.438 1122.53 285.878C1122.75 285.318 1122.87 284.711 1122.87 284.058C1122.87 283.563 1122.8 283.092 1122.67 282.644C1122.55 282.196 1122.36 281.799 1122.1 281.454C1121.83 281.109 1121.5 280.838 1121.09 280.642C1120.68 280.446 1120.2 280.348 1119.65 280.348C1118.91 280.348 1118.3 280.521 1117.81 280.866C1117.34 281.211 1116.98 281.664 1116.75 282.224C1116.51 282.784 1116.4 283.395 1116.4 284.058C1116.4 284.711 1116.51 285.318 1116.73 285.878C1116.97 286.438 1117.32 286.891 1117.8 287.236C1118.28 287.581 1118.9 287.754 1119.65 287.754ZM1126.15 289V279.102H1127.87L1132.84 286.83V279.102H1134.31V289H1132.63L1127.63 281.314V289H1126.15ZM1136.64 289V279.102H1138.12V289H1136.64ZM1140.45 289V279.102H1141.94V287.642H1147.23V289H1140.45ZM1152.77 289.112C1151.75 289.112 1150.89 288.897 1150.18 288.468C1149.48 288.029 1148.95 287.427 1148.59 286.662C1148.22 285.897 1148.04 285.029 1148.04 284.058C1148.04 283.078 1148.22 282.205 1148.59 281.44C1148.95 280.675 1149.49 280.077 1150.2 279.648C1150.91 279.209 1151.77 278.99 1152.79 278.99C1153.81 278.99 1154.68 279.205 1155.38 279.634C1156.08 280.063 1156.61 280.661 1156.97 281.426C1157.34 282.191 1157.52 283.064 1157.52 284.044C1157.52 285.015 1157.34 285.883 1156.97 286.648C1156.61 287.413 1156.07 288.015 1155.36 288.454C1154.66 288.893 1153.8 289.112 1152.77 289.112ZM1152.79 287.754C1153.53 287.754 1154.14 287.581 1154.62 287.236C1155.1 286.891 1155.45 286.438 1155.67 285.878C1155.89 285.318 1156.01 284.711 1156.01 284.058C1156.01 283.563 1155.94 283.092 1155.81 282.644C1155.69 282.196 1155.5 281.799 1155.24 281.454C1154.97 281.109 1154.64 280.838 1154.23 280.642C1153.82 280.446 1153.34 280.348 1152.79 280.348C1152.05 280.348 1151.44 280.521 1150.95 280.866C1150.48 281.211 1150.12 281.664 1149.89 282.224C1149.65 282.784 1149.54 283.395 1149.54 284.058C1149.54 284.711 1149.65 285.318 1149.87 285.878C1150.11 286.438 1150.46 286.891 1150.94 287.236C1151.42 287.581 1152.04 287.754 1152.79 287.754ZM1163.01 289.112C1162.37 289.112 1161.76 289.019 1161.19 288.832C1160.62 288.645 1160.14 288.342 1159.75 287.922C1159.36 287.502 1159.1 286.947 1158.97 286.256H1160.49C1160.61 286.648 1160.81 286.956 1161.08 287.18C1161.35 287.395 1161.66 287.544 1162.02 287.628C1162.38 287.712 1162.75 287.754 1163.11 287.754C1163.46 287.754 1163.78 287.707 1164.08 287.614C1164.38 287.521 1164.64 287.367 1164.83 287.152C1165.03 286.937 1165.13 286.657 1165.13 286.312C1165.13 286.051 1165.08 285.836 1164.97 285.668C1164.87 285.5 1164.73 285.365 1164.54 285.262C1164.36 285.15 1164.15 285.061 1163.89 284.996C1163.61 284.903 1163.29 284.823 1162.96 284.758C1162.63 284.693 1162.3 284.618 1161.98 284.534C1161.66 284.45 1161.36 284.343 1161.08 284.212C1160.85 284.119 1160.62 284.007 1160.39 283.876C1160.18 283.736 1159.99 283.573 1159.83 283.386C1159.68 283.19 1159.55 282.961 1159.44 282.7C1159.35 282.439 1159.3 282.14 1159.3 281.804C1159.3 281.356 1159.37 280.973 1159.51 280.656C1159.66 280.339 1159.85 280.073 1160.09 279.858C1160.33 279.643 1160.6 279.475 1160.91 279.354C1161.23 279.223 1161.56 279.13 1161.91 279.074C1162.25 279.018 1162.59 278.99 1162.91 278.99C1163.51 278.99 1164.06 279.083 1164.57 279.27C1165.07 279.457 1165.49 279.755 1165.81 280.166C1166.15 280.567 1166.33 281.099 1166.36 281.762H1164.92C1164.88 281.407 1164.76 281.127 1164.55 280.922C1164.36 280.707 1164.11 280.558 1163.81 280.474C1163.51 280.381 1163.19 280.334 1162.86 280.334C1162.62 280.334 1162.37 280.357 1162.13 280.404C1161.89 280.441 1161.66 280.516 1161.46 280.628C1161.26 280.731 1161.1 280.871 1160.98 281.048C1160.87 281.225 1160.81 281.445 1160.81 281.706C1160.81 281.93 1160.86 282.131 1160.95 282.308C1161.05 282.476 1161.18 282.621 1161.35 282.742C1161.52 282.854 1161.72 282.952 1161.93 283.036C1162.33 283.185 1162.76 283.302 1163.22 283.386C1163.69 283.461 1164.13 283.568 1164.54 283.708C1164.84 283.801 1165.12 283.918 1165.38 284.058C1165.64 284.189 1165.86 284.352 1166.05 284.548C1166.24 284.735 1166.38 284.959 1166.48 285.22C1166.59 285.472 1166.64 285.766 1166.64 286.102C1166.64 286.653 1166.54 287.124 1166.34 287.516C1166.15 287.899 1165.88 288.207 1165.55 288.44C1165.21 288.673 1164.82 288.846 1164.38 288.958C1163.95 289.061 1163.49 289.112 1163.01 289.112Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="benalmadena"
                        d="M995.479 268.21L990.556 265.225C990.311 265.077 990.039 264.983 989.755 264.949L982.111 264.038C981.898 264.013 981.683 264.022 981.474 264.065L975.315 265.322C974.761 265.435 974.28 265.778 973.993 266.265L969.799 273.369C969.748 273.456 969.69 273.539 969.626 273.617L966.337 277.648C966.148 277.88 966.004 278.15 965.969 278.447C965.735 280.442 967.099 282.255 967.099 283C967.099 283.699 965.898 289.409 965.244 292.731C965.092 293.503 965.416 294.288 966.063 294.737L970.644 297.911C970.729 297.97 970.809 298.036 970.884 298.107L971.725 298.909C972.122 299.286 972.346 299.809 972.346 300.356V309V315.243C972.346 315.415 972.324 315.584 972.28 315.75L971.864 317.335C971.433 318.981 973.252 320.664 974.949 320.54C975.293 320.514 975.651 320.5 976.019 320.5H984.938C986.512 320.5 989.66 318.5 991.759 318.5C993.438 318.5 996.307 319.833 997.531 320.5C999.805 321.667 1004.46 324.1 1004.88 324.5C1005.25 324.857 1008.16 326.038 1010.03 326.761C1010.43 326.918 1010.87 326.935 1011.29 326.822C1013.22 326.295 1016.5 325.5 1017.99 325.5C1019.44 325.5 1021.24 323.043 1022.27 321.293C1022.57 320.795 1023.04 320.423 1023.6 320.289L1035.1 317.549C1035.24 317.516 1035.37 317.469 1035.5 317.409L1048.12 311.394C1049.15 310.906 1049.39 309.777 1048.49 309.09C1046.96 307.93 1044.79 306.537 1044.23 306C1043.18 305 1039.51 302 1038.46 301C1037.41 300 1031.64 293.5 1031.11 293C1030.59 292.5 1026.91 288.5 1025.86 287.5C1025.08 286.749 1022.99 280.949 1022.31 279.274C1022.23 279.091 1022.13 278.924 1022 278.776L1017.13 273.207C1017.01 273.07 1016.9 272.916 1016.83 272.752L1015.37 269.692C1014.82 268.556 1013.23 267.923 1011.97 267.988C1008.56 268.167 1002.89 267.5 1002.25 267.5C1001.5 267.5 998.302 268.304 996.514 268.47C996.15 268.504 995.791 268.4 995.479 268.21Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g filter="url(#filter8_d_272_5082)">
                        <path
                            d="M1003.15 317V307.102H1006.91C1007.39 307.102 1007.82 307.144 1008.22 307.228C1008.62 307.303 1008.96 307.438 1009.25 307.634C1009.54 307.821 1009.76 308.077 1009.91 308.404C1010.07 308.721 1010.15 309.123 1010.15 309.608C1010.15 310.084 1010.04 310.513 1009.83 310.896C1009.61 311.269 1009.28 311.549 1008.85 311.736C1009.43 311.867 1009.88 312.133 1010.18 312.534C1010.48 312.935 1010.64 313.463 1010.64 314.116C1010.64 314.676 1010.54 315.143 1010.33 315.516C1010.12 315.889 1009.84 316.183 1009.48 316.398C1009.11 316.613 1008.69 316.767 1008.22 316.86C1007.74 316.953 1007.23 317 1006.69 317H1003.15ZM1004.63 315.642H1006.75C1007.03 315.642 1007.31 315.628 1007.59 315.6C1007.87 315.563 1008.12 315.493 1008.36 315.39C1008.6 315.287 1008.79 315.133 1008.93 314.928C1009.08 314.723 1009.15 314.447 1009.15 314.102C1009.15 313.813 1009.1 313.575 1008.99 313.388C1008.87 313.192 1008.72 313.038 1008.54 312.926C1008.35 312.814 1008.13 312.735 1007.88 312.688C1007.64 312.641 1007.39 312.618 1007.12 312.618H1004.63V315.642ZM1004.63 311.344H1006.51C1006.83 311.344 1007.11 311.316 1007.38 311.26C1007.65 311.204 1007.88 311.111 1008.08 310.98C1008.27 310.849 1008.42 310.686 1008.52 310.49C1008.64 310.285 1008.69 310.037 1008.69 309.748C1008.7 309.365 1008.62 309.085 1008.44 308.908C1008.27 308.721 1008.04 308.6 1007.75 308.544C1007.46 308.479 1007.15 308.446 1006.8 308.446H1004.63V311.344ZM1012.43 317V307.102H1019.25V308.46H1013.92V311.428H1018.63V312.772H1013.92V315.642H1019.25V317H1012.43ZM1021.03 317V307.102H1022.75L1027.72 314.83V307.102H1029.19V317H1027.51L1022.52 309.314V317H1021.03ZM1030.45 317L1034.19 307.102H1036.11L1039.83 317H1038.24L1037.51 315.012H1032.78L1032.05 317H1030.45ZM1033.27 313.682H1037.02L1035.14 308.516L1033.27 313.682ZM1041.09 317V307.102H1042.57V315.642H1047.86V317H1041.09ZM1049.22 317V307.102H1051.34L1054.21 312.324L1057.02 307.102H1059.08V317H1057.61V308.852L1054.49 314.536H1053.84L1050.71 308.852V317H1049.22ZM1060.34 317L1064.08 307.102H1066L1069.72 317H1068.12L1067.4 315.012H1062.66L1061.94 317H1060.34ZM1063.15 313.682H1066.91L1065.03 308.516L1063.15 313.682ZM1070.97 317V307.102H1074.56C1075.59 307.102 1076.46 307.307 1077.16 307.718C1077.87 308.119 1078.4 308.693 1078.76 309.44C1079.12 310.177 1079.3 311.05 1079.3 312.058C1079.3 313.066 1079.13 313.939 1078.77 314.676C1078.42 315.413 1077.89 315.987 1077.18 316.398C1076.48 316.799 1075.61 317 1074.57 317H1070.97ZM1072.46 315.642H1074.5C1075.27 315.642 1075.89 315.493 1076.38 315.194C1076.86 314.886 1077.22 314.466 1077.46 313.934C1077.69 313.393 1077.81 312.767 1077.81 312.058C1077.81 311.367 1077.69 310.751 1077.46 310.21C1077.23 309.669 1076.88 309.244 1076.39 308.936C1075.92 308.619 1075.3 308.46 1074.54 308.46H1072.46V315.642ZM1081.09 317V307.102H1087.91V308.46H1082.58V311.428H1087.29V312.772H1082.58V315.642H1087.91V317H1081.09ZM1089.69 317V307.102H1091.41L1096.38 314.83V307.102H1097.85V317H1096.17L1091.18 309.314V317H1089.69ZM1099.11 317L1102.85 307.102H1104.77L1108.49 317H1106.9L1106.17 315.012H1101.44L1100.71 317H1099.11ZM1101.93 313.682H1105.68L1103.8 308.516L1101.93 313.682Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="fuengirola"
                        d="M938.768 338C937.872 338.855 936.212 341.17 935.421 342.137C935.219 342.384 934.941 342.547 934.635 342.638C932.264 343.347 928.29 344.626 928.29 345C928.29 345.4 924.797 348.5 923.051 350C921.654 351 918.86 353.1 918.86 353.5C918.86 353.844 911.105 357.79 907.604 359.417C906.821 359.78 905.912 359.553 905.358 358.892L901.105 353.818C900.47 353.06 900.484 351.952 901.138 351.21L908.27 343.127C908.345 343.042 908.427 342.965 908.513 342.893C910.706 341.061 912.049 338.392 912.049 338V334.076C912.049 333.699 912.156 333.331 912.356 333.012L915.029 328.761C915.137 328.588 915.272 328.435 915.422 328.296C917.025 326.801 919.633 323.144 920.432 322C921.406 320.605 921.021 319.642 922.649 318.71C922.907 318.562 923.205 318.498 923.503 318.507C925.264 318.56 927.766 318.867 927.766 318.5C927.766 318 929.338 314 929.862 312.5C930.281 311.3 932.795 310.5 934.053 309.5C935.101 308.667 940.025 304.4 940.863 304C941.671 303.614 944.492 304.127 945.945 303.119C946.053 303.045 946.144 302.949 946.226 302.846L950.849 297.11C951.166 296.718 951.618 296.459 952.116 296.386L958.007 295.521C958.103 295.507 958.2 295.5 958.298 295.5H961.321C961.648 295.5 961.97 295.42 962.258 295.267L963.988 294.35C965.221 293.696 967.35 294.233 968.445 295.098C970.059 296.375 972.134 297.689 972.297 298C972.821 299 974.043 298.167 973.868 300C973.868 302.5 974.165 315.217 973.868 315.5C973.344 316 973.344 320 972.297 320.5C971.249 321 960.247 326 959.199 326C958.4 326 953.086 327.517 950.173 328.38C949.906 328.459 949.66 328.594 949.448 328.775C946.029 331.696 939.58 337.225 938.768 338Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g filter="url(#filter9_d_272_5082)">
                        <path
                            d="M928.162 341V331.102H934.952V332.46H929.646V335.778H934.224V337.15H929.646V341H928.162ZM940.518 341.112C939.585 341.112 938.82 340.925 938.222 340.552C937.634 340.169 937.2 339.647 936.92 338.984C936.64 338.321 936.5 337.551 936.5 336.674V331.102H937.984V336.688C937.984 337.239 938.064 337.747 938.222 338.214C938.381 338.681 938.647 339.054 939.02 339.334C939.394 339.614 939.898 339.754 940.532 339.754C941.176 339.754 941.68 339.614 942.044 339.334C942.408 339.054 942.665 338.681 942.814 338.214C942.964 337.747 943.038 337.239 943.038 336.688V331.102H944.536V336.674C944.536 337.542 944.396 338.312 944.116 338.984C943.836 339.647 943.402 340.169 942.814 340.552C942.226 340.925 941.461 341.112 940.518 341.112ZM946.797 341V331.102H953.615V332.46H948.281V335.428H952.999V336.772H948.281V339.642H953.615V341H946.797ZM955.396 341V331.102H957.118L962.088 338.83V331.102H963.558V341H961.878L956.88 333.314V341H955.396ZM969.971 341.112C968.944 341.112 968.085 340.897 967.395 340.468C966.713 340.039 966.2 339.446 965.855 338.69C965.509 337.925 965.337 337.052 965.337 336.072C965.337 335.335 965.43 334.658 965.617 334.042C965.813 333.417 966.102 332.875 966.485 332.418C966.867 331.961 967.343 331.611 967.913 331.368C968.491 331.116 969.159 330.99 969.915 330.99C970.652 330.99 971.301 331.107 971.861 331.34C972.421 331.564 972.883 331.891 973.247 332.32C973.62 332.749 973.872 333.267 974.003 333.874H972.435C972.351 333.547 972.192 333.272 971.959 333.048C971.735 332.824 971.45 332.651 971.105 332.53C970.769 332.409 970.386 332.348 969.957 332.348C969.397 332.348 968.921 332.446 968.529 332.642C968.137 332.838 967.815 333.109 967.563 333.454C967.32 333.79 967.143 334.182 967.031 334.63C966.919 335.078 966.863 335.554 966.863 336.058C966.863 336.73 966.97 337.346 967.185 337.906C967.399 338.466 967.735 338.914 968.193 339.25C968.65 339.586 969.247 339.754 969.985 339.754C970.554 339.754 971.044 339.656 971.455 339.46C971.865 339.255 972.187 338.965 972.421 338.592C972.654 338.209 972.775 337.747 972.785 337.206H969.719V335.904H974.241V336.632C974.241 337.537 974.073 338.326 973.737 338.998C973.401 339.67 972.915 340.193 972.281 340.566C971.646 340.93 970.876 341.112 969.971 341.112ZM976.014 341V331.102H977.498V341H976.014ZM979.828 341V331.102H983.636C984.168 331.102 984.653 331.158 985.092 331.27C985.531 331.373 985.913 331.545 986.24 331.788C986.567 332.021 986.819 332.339 986.996 332.74C987.173 333.141 987.262 333.636 987.262 334.224C987.262 334.756 987.169 335.213 986.982 335.596C986.795 335.979 986.539 336.296 986.212 336.548C985.885 336.8 985.517 336.991 985.106 337.122L987.22 341H985.582L983.622 337.36H981.312V341H979.828ZM981.312 336.03H983.328C983.664 336.03 983.977 336.007 984.266 335.96C984.565 335.904 984.826 335.811 985.05 335.68C985.274 335.54 985.447 335.353 985.568 335.12C985.699 334.877 985.764 334.569 985.764 334.196C985.773 333.767 985.689 333.426 985.512 333.174C985.344 332.913 985.092 332.731 984.756 332.628C984.42 332.516 984.014 332.46 983.538 332.46H981.312V336.03ZM993.366 341.112C992.348 341.112 991.485 340.897 990.776 340.468C990.076 340.029 989.544 339.427 989.18 338.662C988.816 337.897 988.634 337.029 988.634 336.058C988.634 335.078 988.816 334.205 989.18 333.44C989.544 332.675 990.08 332.077 990.79 331.648C991.499 331.209 992.362 330.99 993.38 330.99C994.406 330.99 995.27 331.205 995.97 331.634C996.67 332.063 997.202 332.661 997.566 333.426C997.93 334.191 998.112 335.064 998.112 336.044C998.112 337.015 997.93 337.883 997.566 338.648C997.202 339.413 996.665 340.015 995.956 340.454C995.256 340.893 994.392 341.112 993.366 341.112ZM993.38 339.754C994.126 339.754 994.738 339.581 995.214 339.236C995.69 338.891 996.04 338.438 996.264 337.878C996.488 337.318 996.6 336.711 996.6 336.058C996.6 335.563 996.534 335.092 996.404 334.644C996.282 334.196 996.091 333.799 995.83 333.454C995.568 333.109 995.232 332.838 994.822 332.642C994.411 332.446 993.93 332.348 993.38 332.348C992.642 332.348 992.031 332.521 991.546 332.866C991.07 333.211 990.715 333.664 990.482 334.224C990.248 334.784 990.132 335.395 990.132 336.058C990.132 336.711 990.244 337.318 990.468 337.878C990.701 338.438 991.056 338.891 991.532 339.236C992.017 339.581 992.633 339.754 993.38 339.754ZM999.885 341V331.102H1001.37V339.642H1006.66V341H999.885ZM1007.23 341L1010.97 331.102H1012.88L1016.61 341H1015.01L1014.28 339.012H1009.55L1008.82 341H1007.23ZM1010.04 337.682H1013.79L1011.92 332.516L1010.04 337.682Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="manilva"
                        d="M226.26 342.101L217.435 345.817C217.149 345.937 216.895 346.123 216.693 346.358L214.11 349.372C214.037 349.457 213.971 349.548 213.913 349.645L212.868 351.387C212.632 351.78 212.562 352.249 212.673 352.693C212.865 353.461 213.555 354 214.347 354H226H236.553C236.847 354 237.138 354.065 237.405 354.19L244.568 357.561C245.153 357.837 245.569 358.377 245.684 359.013L248.348 373.665C248.445 374.198 248.755 374.67 249.206 374.971L253.839 378.059C254.264 378.342 254.564 378.777 254.679 379.274L255.642 383.45C255.852 384.357 256.66 385 257.591 385H266.124C266.283 385 266.441 384.981 266.596 384.943L274.024 383.138C274.426 383.04 274.788 382.82 275.059 382.508L294.821 359.843L314.222 334.658C314.918 333.755 314.719 332.453 313.785 331.799L310.681 329.627C310.561 329.542 310.45 329.445 310.351 329.337L300.176 318.193C300.059 318.065 299.959 317.922 299.879 317.768L296.732 311.727C296.501 311.283 296.113 310.943 295.643 310.772L292.694 309.696C292.392 309.586 292.12 309.404 291.903 309.167L289.218 306.229C288.567 305.517 287.5 305.371 286.682 305.883L281.337 309.224C281.019 309.423 280.652 309.528 280.277 309.528H276.683C276.127 309.528 275.677 309.078 275.677 308.522C275.677 307.966 275.226 307.516 274.67 307.516H271.647C270.938 307.516 270.282 307.891 269.923 308.502L268.549 310.84C268.472 310.971 268.38 311.093 268.275 311.204L262.642 317.138C262.369 317.425 262.018 317.625 261.632 317.712L251.785 319.936C251.596 319.978 251.414 320.048 251.245 320.143L243.918 324.265C243.643 324.419 243.409 324.637 243.234 324.899L237.682 333.227C237.561 333.408 237.412 333.568 237.241 333.7L226.706 341.841C226.569 341.946 226.419 342.034 226.26 342.101Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g filter="url(#filter10_d_272_5082)">
                        <path
                            d="M240.162 349V339.102H242.276L245.146 344.324L247.96 339.102H250.018V349H248.548V340.852L245.426 346.536H244.782L241.646 340.852V349H240.162ZM251.28 349L255.018 339.102H256.936L260.66 349H259.064L258.336 347.012H253.604L252.876 349H251.28ZM254.094 345.682H257.846L255.97 340.516L254.094 345.682ZM261.914 349V339.102H263.636L268.606 346.83V339.102H270.076V349H268.396L263.398 341.314V349H261.914ZM272.4 349V339.102H273.884V349H272.4ZM276.215 349V339.102H277.699V347.642H282.991V349H276.215ZM283.559 349L287.297 339.102H289.215L292.939 349H291.343L290.615 347.012H285.883L285.155 349H283.559ZM286.373 345.682H290.125L288.249 340.516L286.373 345.682Z"
                            fill="white" />
                    </g>
                    <path class="mapArea" id="sotogrande"
                        d="M249.458 374.965L254.198 378.009C254.683 378.321 255.011 378.828 255.095 379.399L255.807 384.199C255.924 384.989 255.56 385.772 254.882 386.193L248.886 389.905C248.785 389.968 248.678 390.022 248.567 390.066L237.881 394.277C237.512 394.422 237.195 394.674 236.969 395L233.276 400.336C233.201 400.445 233.115 400.546 233.019 400.638L216.035 417L206.253 428.308C205.873 428.748 205.321 429 204.741 429H202.129C201.42 429 200.763 429.376 200.404 429.988L194.236 440.5L192.885 443.428C192.469 444.331 191.454 444.791 190.501 444.508L186.105 443.205C185.658 443.073 185.178 443.1 184.75 443.284L180.993 444.892C180.826 444.964 180.67 445.058 180.529 445.171L171.592 452.346C171.464 452.448 171.349 452.566 171.25 452.696L161.538 465.5L153.753 475.5L143.565 487.768C143.437 487.922 143.333 488.094 143.257 488.279L138.246 500.345C138.204 500.448 138.152 500.548 138.093 500.642L126.403 519.248C126.298 519.415 126.169 519.566 126.02 519.695L121.618 523.511C121.255 523.826 120.789 524 120.308 524H117.47C116.792 524 116.161 523.657 115.792 523.089L111.193 516L103.927 503.5L95.9728 485.302C95.7493 484.791 95.3226 484.396 94.7955 484.213L82.8884 480.084C82.7279 480.028 82.5752 479.952 82.434 479.858L76.0411 475.594C75.9468 475.532 75.8474 475.477 75.7439 475.431L70.1718 472.953C69.538 472.672 69.0955 472.082 69.0025 471.394L67.6248 461.219C67.6051 461.074 67.5693 460.93 67.5182 460.792L65.3806 455.027C65.1435 454.387 65.2486 453.671 65.6596 453.126L68.5532 449.293C68.9305 448.794 69.052 448.146 68.8814 447.544L67.5951 443L65.2256 435.239C65.0804 434.763 65.1175 434.251 65.3296 433.801L67.466 429.274C67.5516 429.092 67.6094 428.899 67.6375 428.7L69.0968 418.391C69.1334 418.133 69.2201 417.884 69.3521 417.659L75.5742 407.054C75.7857 406.694 76.1048 406.409 76.4867 406.239L88.7946 400.767C89.184 400.593 89.6186 400.549 90.0349 400.64L99.7469 402.767C100.411 402.912 101.104 402.71 101.586 402.23L116.152 387.73C116.305 387.578 116.482 387.451 116.675 387.355L133.962 378.791C134.343 378.602 134.775 378.54 135.195 378.613L150.855 381.356C151.381 381.448 151.922 381.326 152.357 381.017L160.912 374.944C161.315 374.658 161.598 374.233 161.706 373.751L165.504 356.829C165.623 356.299 165.952 355.841 166.416 355.558L174.591 350.584C175.188 350.221 175.552 349.574 175.552 348.876V347.539C175.552 345.983 177.25 345.023 178.583 345.825L179.022 346.089C179.46 346.353 179.982 346.439 180.481 346.33L190.345 344.17C190.844 344.061 191.366 344.147 191.804 344.411L194.587 346.086C195.028 346.352 195.555 346.437 196.057 346.324L197.118 346.086C197.37 346.029 197.631 346.022 197.886 346.064L198.573 346.179C199.644 346.357 200.377 347.359 200.224 348.434L200.13 349.091C200.047 349.668 200.221 350.252 200.605 350.691L202.902 353.317C203.282 353.751 203.831 354 204.408 354H217.592H236.859C237.159 354 237.456 354.068 237.727 354.198L244.71 357.562C245.282 357.837 245.689 358.368 245.807 358.993L248.574 373.654C248.676 374.194 248.996 374.668 249.458 374.965Z"
                        fill="#CACACA" stroke="white" stroke-width="2" />
                    <g clip-path="url(#clip1_272_5082)">
                        <path
                            d="M120.115 490.971L120.9 490.186C121.204 489.882 121.127 489.507 120.731 489.352L115.661 487.337C114.862 487.018 114.706 486.269 115.307 485.668L116.24 484.734C116.721 484.254 117.641 484.056 118.27 484.317L124.033 486.615C124.203 486.672 124.45 486.622 124.577 486.495L126.741 484.331C127.42 483.652 128.735 483.341 129.647 483.631C129.965 483.737 130.22 483.992 130.326 484.31C130.623 485.229 130.319 486.537 129.64 487.216L127.476 489.38C127.349 489.507 127.3 489.755 127.356 489.924L127.78 490.971L120.115 490.971Z"
                            fill="#313131" />
                        <path opacity="0.4"
                            d="M129.236 497.73L128.303 498.664C127.702 499.265 126.952 499.109 126.634 498.31L124.619 493.24C124.449 492.844 124.088 492.766 123.784 493.07L121.727 495.128C121.564 495.291 121.423 495.616 121.43 495.849L121.423 499.137C121.423 499.477 121.161 499.894 120.85 500.05L119.57 500.693C119.011 500.969 118.347 500.686 118.149 500.106L117.88 497.009C117.845 496.535 117.427 496.118 116.954 496.083L113.856 495.814C113.27 495.623 112.994 494.951 113.284 494.407L113.927 493.127C114.09 492.809 114.5 492.554 114.839 492.554L118.127 492.547C118.354 492.547 118.679 492.406 118.842 492.243L120.114 490.97L127.779 490.97L129.66 495.694C129.915 496.33 129.717 497.249 129.236 497.73Z"
                            fill="#313131" />
                    </g>
                    <g filter="url(#filter11_d_272_5082)">
                        <path
                            d="M93.788 434.112C93.144 434.112 92.5373 434.019 91.968 433.832C91.3987 433.645 90.918 433.342 90.526 432.922C90.134 432.502 89.8727 431.947 89.742 431.256H91.268C91.3893 431.648 91.5853 431.956 91.856 432.18C92.1267 432.395 92.4393 432.544 92.794 432.628C93.158 432.712 93.522 432.754 93.886 432.754C94.2313 432.754 94.5533 432.707 94.852 432.614C95.16 432.521 95.412 432.367 95.608 432.152C95.804 431.937 95.902 431.657 95.902 431.312C95.902 431.051 95.8507 430.836 95.748 430.668C95.6453 430.5 95.5007 430.365 95.314 430.262C95.1367 430.15 94.922 430.061 94.67 429.996C94.3807 429.903 94.068 429.823 93.732 429.758C93.4053 429.693 93.0787 429.618 92.752 429.534C92.4347 429.45 92.136 429.343 91.856 429.212C91.6227 429.119 91.394 429.007 91.17 428.876C90.9553 428.736 90.7687 428.573 90.61 428.386C90.4513 428.19 90.3207 427.961 90.218 427.7C90.1247 427.439 90.078 427.14 90.078 426.804C90.078 426.356 90.148 425.973 90.288 425.656C90.4373 425.339 90.6287 425.073 90.862 424.858C91.1047 424.643 91.38 424.475 91.688 424.354C92.0053 424.223 92.3367 424.13 92.682 424.074C93.0273 424.018 93.3633 423.99 93.69 423.99C94.2873 423.99 94.838 424.083 95.342 424.27C95.846 424.457 96.2613 424.755 96.588 425.166C96.924 425.567 97.106 426.099 97.134 426.762H95.692C95.6547 426.407 95.5333 426.127 95.328 425.922C95.132 425.707 94.8847 425.558 94.586 425.474C94.2873 425.381 93.97 425.334 93.634 425.334C93.3913 425.334 93.1487 425.357 92.906 425.404C92.6633 425.441 92.4393 425.516 92.234 425.628C92.038 425.731 91.8793 425.871 91.758 426.048C91.646 426.225 91.59 426.445 91.59 426.706C91.59 426.93 91.6367 427.131 91.73 427.308C91.8233 427.476 91.954 427.621 92.122 427.742C92.2993 427.854 92.4953 427.952 92.71 428.036C93.102 428.185 93.5313 428.302 93.998 428.386C94.4647 428.461 94.9033 428.568 95.314 428.708C95.6127 428.801 95.8927 428.918 96.154 429.058C96.4153 429.189 96.6393 429.352 96.826 429.548C97.0127 429.735 97.1573 429.959 97.26 430.22C97.3627 430.472 97.414 430.766 97.414 431.102C97.414 431.653 97.316 432.124 97.12 432.516C96.924 432.899 96.658 433.207 96.322 433.44C95.986 433.673 95.5987 433.846 95.16 433.958C94.7213 434.061 94.264 434.112 93.788 434.112ZM103.618 434.112C102.6 434.112 101.737 433.897 101.028 433.468C100.328 433.029 99.7955 432.427 99.4315 431.662C99.0675 430.897 98.8855 430.029 98.8855 429.058C98.8855 428.078 99.0675 427.205 99.4315 426.44C99.7955 425.675 100.332 425.077 101.042 424.648C101.751 424.209 102.614 423.99 103.632 423.99C104.658 423.99 105.522 424.205 106.222 424.634C106.922 425.063 107.454 425.661 107.818 426.426C108.182 427.191 108.364 428.064 108.364 429.044C108.364 430.015 108.182 430.883 107.818 431.648C107.454 432.413 106.917 433.015 106.208 433.454C105.508 433.893 104.644 434.112 103.618 434.112ZM103.632 432.754C104.378 432.754 104.99 432.581 105.466 432.236C105.942 431.891 106.292 431.438 106.516 430.878C106.74 430.318 106.852 429.711 106.852 429.058C106.852 428.563 106.786 428.092 106.656 427.644C106.534 427.196 106.343 426.799 106.082 426.454C105.82 426.109 105.484 425.838 105.074 425.642C104.663 425.446 104.182 425.348 103.632 425.348C102.894 425.348 102.283 425.521 101.798 425.866C101.322 426.211 100.967 426.664 100.734 427.224C100.5 427.784 100.384 428.395 100.384 429.058C100.384 429.711 100.496 430.318 100.72 430.878C100.953 431.438 101.308 431.891 101.784 432.236C102.269 432.581 102.885 432.754 103.632 432.754ZM112.279 434V425.46H109.143V424.102H116.885V425.46H113.763V434H112.279ZM122.416 434.112C121.399 434.112 120.536 433.897 119.826 433.468C119.126 433.029 118.594 432.427 118.23 431.662C117.866 430.897 117.684 430.029 117.684 429.058C117.684 428.078 117.866 427.205 118.23 426.44C118.594 425.675 119.131 425.077 119.84 424.648C120.55 424.209 121.413 423.99 122.43 423.99C123.457 423.99 124.32 424.205 125.02 424.634C125.72 425.063 126.252 425.661 126.616 426.426C126.98 427.191 127.162 428.064 127.162 429.044C127.162 430.015 126.98 430.883 126.616 431.648C126.252 432.413 125.716 433.015 125.006 433.454C124.306 433.893 123.443 434.112 122.416 434.112ZM122.43 432.754C123.177 432.754 123.788 432.581 124.264 432.236C124.74 431.891 125.09 431.438 125.314 430.878C125.538 430.318 125.65 429.711 125.65 429.058C125.65 428.563 125.585 428.092 125.454 427.644C125.333 427.196 125.142 426.799 124.88 426.454C124.619 426.109 124.283 425.838 123.872 425.642C123.462 425.446 122.981 425.348 122.43 425.348C121.693 425.348 121.082 425.521 120.596 425.866C120.12 426.211 119.766 426.664 119.532 427.224C119.299 427.784 119.182 428.395 119.182 429.058C119.182 429.711 119.294 430.318 119.518 430.878C119.752 431.438 120.106 431.891 120.582 432.236C121.068 432.581 121.684 432.754 122.43 432.754ZM133.119 434.112C132.092 434.112 131.234 433.897 130.543 433.468C129.862 433.039 129.348 432.446 129.003 431.69C128.658 430.925 128.485 430.052 128.485 429.072C128.485 428.335 128.578 427.658 128.765 427.042C128.961 426.417 129.25 425.875 129.633 425.418C130.016 424.961 130.492 424.611 131.061 424.368C131.64 424.116 132.307 423.99 133.063 423.99C133.8 423.99 134.449 424.107 135.009 424.34C135.569 424.564 136.031 424.891 136.395 425.32C136.768 425.749 137.02 426.267 137.151 426.874H135.583C135.499 426.547 135.34 426.272 135.107 426.048C134.883 425.824 134.598 425.651 134.253 425.53C133.917 425.409 133.534 425.348 133.105 425.348C132.545 425.348 132.069 425.446 131.677 425.642C131.285 425.838 130.963 426.109 130.711 426.454C130.468 426.79 130.291 427.182 130.179 427.63C130.067 428.078 130.011 428.554 130.011 429.058C130.011 429.73 130.118 430.346 130.333 430.906C130.548 431.466 130.884 431.914 131.341 432.25C131.798 432.586 132.396 432.754 133.133 432.754C133.702 432.754 134.192 432.656 134.603 432.46C135.014 432.255 135.336 431.965 135.569 431.592C135.802 431.209 135.924 430.747 135.933 430.206H132.867V428.904H137.389V429.632C137.389 430.537 137.221 431.326 136.885 431.998C136.549 432.67 136.064 433.193 135.429 433.566C134.794 433.93 134.024 434.112 133.119 434.112ZM139.162 434V424.102H142.97C143.502 424.102 143.987 424.158 144.426 424.27C144.865 424.373 145.247 424.545 145.574 424.788C145.901 425.021 146.153 425.339 146.33 425.74C146.507 426.141 146.596 426.636 146.596 427.224C146.596 427.756 146.503 428.213 146.316 428.596C146.129 428.979 145.873 429.296 145.546 429.548C145.219 429.8 144.851 429.991 144.44 430.122L146.554 434H144.916L142.956 430.36H140.646V434H139.162ZM140.646 429.03H142.662C142.998 429.03 143.311 429.007 143.6 428.96C143.899 428.904 144.16 428.811 144.384 428.68C144.608 428.54 144.781 428.353 144.902 428.12C145.033 427.877 145.098 427.569 145.098 427.196C145.107 426.767 145.023 426.426 144.846 426.174C144.678 425.913 144.426 425.731 144.09 425.628C143.754 425.516 143.348 425.46 142.872 425.46H140.646V429.03ZM147.45 434L151.188 424.102H153.106L156.83 434H155.234L154.506 432.012H149.774L149.046 434H147.45ZM150.264 430.682H154.016L152.14 425.516L150.264 430.682ZM158.084 434V424.102H159.806L164.776 431.83V424.102H166.246V434H164.566L159.568 426.314V434H158.084ZM168.57 434V424.102H172.154C173.19 424.102 174.058 424.307 174.758 424.718C175.468 425.119 176 425.693 176.354 426.44C176.718 427.177 176.9 428.05 176.9 429.058C176.9 430.066 176.723 430.939 176.368 431.676C176.014 432.413 175.482 432.987 174.772 433.398C174.072 433.799 173.204 434 172.168 434H168.57ZM170.054 432.642H172.098C172.864 432.642 173.489 432.493 173.974 432.194C174.46 431.886 174.819 431.466 175.052 430.934C175.286 430.393 175.402 429.767 175.402 429.058C175.402 428.367 175.286 427.751 175.052 427.21C174.828 426.669 174.474 426.244 173.988 425.936C173.512 425.619 172.896 425.46 172.14 425.46H170.054V432.642ZM178.687 434V424.102H185.505V425.46H180.171V428.428H184.889V429.772H180.171V432.642H185.505V434H178.687Z"
                            fill="white" />
                    </g>
                    <g filter="url(#filter12_d_272_5082)">
                        <path
                            d="M150.25 510.112C149.223 510.112 148.365 509.897 147.674 509.468C146.993 509.039 146.479 508.446 146.134 507.69C145.789 506.925 145.616 506.052 145.616 505.072C145.616 504.335 145.709 503.658 145.896 503.042C146.092 502.417 146.381 501.875 146.764 501.418C147.147 500.961 147.623 500.611 148.192 500.368C148.771 500.116 149.438 499.99 150.194 499.99C150.931 499.99 151.58 500.107 152.14 500.34C152.7 500.564 153.162 500.891 153.526 501.32C153.899 501.749 154.151 502.267 154.282 502.874H152.714C152.63 502.547 152.471 502.272 152.238 502.048C152.014 501.824 151.729 501.651 151.384 501.53C151.048 501.409 150.665 501.348 150.236 501.348C149.676 501.348 149.2 501.446 148.808 501.642C148.416 501.838 148.094 502.109 147.842 502.454C147.599 502.79 147.422 503.182 147.31 503.63C147.198 504.078 147.142 504.554 147.142 505.058C147.142 505.73 147.249 506.346 147.464 506.906C147.679 507.466 148.015 507.914 148.472 508.25C148.929 508.586 149.527 508.754 150.264 508.754C150.833 508.754 151.323 508.656 151.734 508.46C152.145 508.255 152.467 507.965 152.7 507.592C152.933 507.209 153.055 506.747 153.064 506.206H149.998V504.904H154.52V505.632C154.52 506.537 154.352 507.326 154.016 507.998C153.68 508.67 153.195 509.193 152.56 509.566C151.925 509.93 151.155 510.112 150.25 510.112ZM156.293 510V500.102H157.777V510H156.293ZM160.093 510V500.102H163.859C164.335 500.102 164.769 500.144 165.161 500.228C165.563 500.303 165.908 500.438 166.197 500.634C166.487 500.821 166.706 501.077 166.855 501.404C167.014 501.721 167.093 502.123 167.093 502.608C167.093 503.084 166.986 503.513 166.771 503.896C166.557 504.269 166.23 504.549 165.791 504.736C166.379 504.867 166.823 505.133 167.121 505.534C167.429 505.935 167.583 506.463 167.583 507.116C167.583 507.676 167.481 508.143 167.275 508.516C167.07 508.889 166.785 509.183 166.421 509.398C166.057 509.613 165.637 509.767 165.161 509.86C164.685 509.953 164.177 510 163.635 510H160.093ZM161.577 508.642H163.691C163.971 508.642 164.251 508.628 164.531 508.6C164.811 508.563 165.068 508.493 165.301 508.39C165.544 508.287 165.735 508.133 165.875 507.928C166.025 507.723 166.099 507.447 166.099 507.102C166.099 506.813 166.043 506.575 165.931 506.388C165.819 506.192 165.67 506.038 165.483 505.926C165.297 505.814 165.077 505.735 164.825 505.688C164.583 505.641 164.331 505.618 164.069 505.618H161.577V508.642ZM161.577 504.344H163.453C163.771 504.344 164.06 504.316 164.321 504.26C164.592 504.204 164.825 504.111 165.021 503.98C165.217 503.849 165.367 503.686 165.469 503.49C165.581 503.285 165.637 503.037 165.637 502.748C165.647 502.365 165.563 502.085 165.385 501.908C165.217 501.721 164.989 501.6 164.699 501.544C164.41 501.479 164.093 501.446 163.747 501.446H161.577V504.344ZM169.377 510V500.102H173.185C173.717 500.102 174.202 500.158 174.641 500.27C175.08 500.373 175.462 500.545 175.789 500.788C176.116 501.021 176.368 501.339 176.545 501.74C176.722 502.141 176.811 502.636 176.811 503.224C176.811 503.756 176.718 504.213 176.531 504.596C176.344 504.979 176.088 505.296 175.761 505.548C175.434 505.8 175.066 505.991 174.655 506.122L176.769 510H175.131L173.171 506.36H170.861V510H169.377ZM170.861 505.03H172.877C173.213 505.03 173.526 505.007 173.815 504.96C174.114 504.904 174.375 504.811 174.599 504.68C174.823 504.54 174.996 504.353 175.117 504.12C175.248 503.877 175.313 503.569 175.313 503.196C175.322 502.767 175.238 502.426 175.061 502.174C174.893 501.913 174.641 501.731 174.305 501.628C173.969 501.516 173.563 501.46 173.087 501.46H170.861V505.03ZM177.664 510L181.402 500.102H183.32L187.044 510H185.448L184.72 508.012H179.988L179.26 510H177.664ZM180.478 506.682H184.23L182.354 501.516L180.478 506.682ZM188.299 510V500.102H189.783V508.642H195.075V510H188.299ZM198.015 510V501.46H194.879V500.102H202.621V501.46H199.499V510H198.015ZM202.151 510L205.889 500.102H207.807L211.531 510H209.935L209.207 508.012H204.475L203.747 510H202.151ZM204.965 506.682H208.717L206.841 501.516L204.965 506.682ZM212.785 510V500.102H216.593C217.125 500.102 217.61 500.158 218.049 500.27C218.488 500.373 218.87 500.545 219.197 500.788C219.524 501.021 219.776 501.339 219.953 501.74C220.13 502.141 220.219 502.636 220.219 503.224C220.219 503.756 220.126 504.213 219.939 504.596C219.752 504.979 219.496 505.296 219.169 505.548C218.842 505.8 218.474 505.991 218.063 506.122L220.177 510H218.539L216.579 506.36H214.269V510H212.785ZM214.269 505.03H216.285C216.621 505.03 216.934 505.007 217.223 504.96C217.522 504.904 217.783 504.811 218.007 504.68C218.231 504.54 218.404 504.353 218.525 504.12C218.656 503.877 218.721 503.569 218.721 503.196C218.73 502.767 218.646 502.426 218.469 502.174C218.301 501.913 218.049 501.731 217.713 501.628C217.377 501.516 216.971 501.46 216.495 501.46H214.269V505.03ZM224.914 510L228.652 500.102H230.57L234.294 510H232.698L231.97 508.012H227.238L226.51 510H224.914ZM227.728 506.682H231.48L229.604 501.516L227.728 506.682ZM235.549 510V500.102H237.033V510H235.549ZM239.363 510V500.102H243.171C243.703 500.102 244.189 500.158 244.627 500.27C245.066 500.373 245.449 500.545 245.775 500.788C246.102 501.021 246.354 501.339 246.531 501.74C246.709 502.141 246.797 502.636 246.797 503.224C246.797 503.756 246.704 504.213 246.517 504.596C246.331 504.979 246.074 505.296 245.747 505.548C245.421 505.8 245.052 505.991 244.641 506.122L246.755 510H245.117L243.157 506.36H240.847V510H239.363ZM240.847 505.03H242.863C243.199 505.03 243.512 505.007 243.801 504.96C244.1 504.904 244.361 504.811 244.585 504.68C244.809 504.54 244.982 504.353 245.103 504.12C245.234 503.877 245.299 503.569 245.299 503.196C245.309 502.767 245.225 502.426 245.047 502.174C244.879 501.913 244.627 501.731 244.291 501.628C243.955 501.516 243.549 501.46 243.073 501.46H240.847V505.03ZM248.715 510V500.102H252.285C253.022 500.102 253.657 500.219 254.189 500.452C254.73 500.685 255.145 501.049 255.435 501.544C255.724 502.029 255.869 502.659 255.869 503.434C255.869 504.181 255.701 504.806 255.365 505.31C255.038 505.814 254.59 506.197 254.021 506.458C253.451 506.71 252.803 506.836 252.075 506.836H250.199V510H248.715ZM250.199 505.492H252.019C252.728 505.492 253.297 505.329 253.727 505.002C254.156 504.666 254.371 504.129 254.371 503.392C254.371 502.748 254.193 502.267 253.839 501.95C253.484 501.623 252.947 501.46 252.229 501.46H250.199V505.492ZM261.828 510.112C260.811 510.112 259.948 509.897 259.238 509.468C258.538 509.029 258.006 508.427 257.642 507.662C257.278 506.897 257.096 506.029 257.096 505.058C257.096 504.078 257.278 503.205 257.642 502.44C258.006 501.675 258.543 501.077 259.252 500.648C259.962 500.209 260.825 499.99 261.842 499.99C262.869 499.99 263.732 500.205 264.432 500.634C265.132 501.063 265.664 501.661 266.028 502.426C266.392 503.191 266.574 504.064 266.574 505.044C266.574 506.015 266.392 506.883 266.028 507.648C265.664 508.413 265.128 509.015 264.418 509.454C263.718 509.893 262.855 510.112 261.828 510.112ZM261.842 508.754C262.589 508.754 263.2 508.581 263.676 508.236C264.152 507.891 264.502 507.438 264.726 506.878C264.95 506.318 265.062 505.711 265.062 505.058C265.062 504.563 264.997 504.092 264.866 503.644C264.745 503.196 264.554 502.799 264.292 502.454C264.031 502.109 263.695 501.838 263.284 501.642C262.874 501.446 262.393 501.348 261.842 501.348C261.105 501.348 260.494 501.521 260.008 501.866C259.532 502.211 259.178 502.664 258.944 503.224C258.711 503.784 258.594 504.395 258.594 505.058C258.594 505.711 258.706 506.318 258.93 506.878C259.164 507.438 259.518 507.891 259.994 508.236C260.48 508.581 261.096 508.754 261.842 508.754ZM268.348 510V500.102H272.156C272.688 500.102 273.173 500.158 273.612 500.27C274.05 500.373 274.433 500.545 274.76 500.788C275.086 501.021 275.338 501.339 275.516 501.74C275.693 502.141 275.782 502.636 275.782 503.224C275.782 503.756 275.688 504.213 275.502 504.596C275.315 504.979 275.058 505.296 274.732 505.548C274.405 505.8 274.036 505.991 273.626 506.122L275.74 510H274.102L272.142 506.36H269.832V510H268.348ZM269.832 505.03H271.848C272.184 505.03 272.496 505.007 272.786 504.96C273.084 504.904 273.346 504.811 273.57 504.68C273.794 504.54 273.966 504.353 274.088 504.12C274.218 503.877 274.284 503.569 274.284 503.196C274.293 502.767 274.209 502.426 274.032 502.174C273.864 501.913 273.612 501.731 273.276 501.628C272.94 501.516 272.534 501.46 272.058 501.46H269.832V505.03ZM279.841 510V501.46H276.705V500.102H284.447V501.46H281.325V510H279.841Z"
                            fill="white" />
                    </g>
                    <path
                        d="M549.32 548V519.72H555.36L563.56 534.64L571.6 519.72H577.48V548H573.28V524.72L564.36 540.96H562.52L553.56 524.72V548H549.32ZM584.125 548V519.72H603.605V523.6H588.365V532.08H601.845V535.92H588.365V544.12H603.605V548H584.125ZM608.695 548V519.72H618.935C621.895 519.72 624.375 520.307 626.375 521.48C628.402 522.627 629.922 524.267 630.935 526.4C631.975 528.507 632.495 531 632.495 533.88C632.495 536.76 631.988 539.253 630.975 541.36C629.962 543.467 628.442 545.107 626.415 546.28C624.415 547.427 621.935 548 618.975 548H608.695ZM612.935 544.12H618.775C620.962 544.12 622.748 543.693 624.135 542.84C625.522 541.96 626.548 540.76 627.215 539.24C627.882 537.693 628.215 535.907 628.215 533.88C628.215 531.907 627.882 530.147 627.215 528.6C626.575 527.053 625.562 525.84 624.175 524.96C622.815 524.053 621.055 523.6 618.895 523.6H612.935V544.12ZM637.601 548V519.72H641.841V548H637.601ZM654.62 548V523.6H645.66V519.72H667.78V523.6H658.86V548H654.62ZM671.625 548V519.72H691.105V523.6H675.865V532.08H689.345V535.92H675.865V544.12H691.105V548H671.625ZM696.195 548V519.72H707.075C708.595 519.72 709.982 519.88 711.235 520.2C712.488 520.493 713.582 520.987 714.515 521.68C715.448 522.347 716.168 523.253 716.675 524.4C717.182 525.547 717.435 526.96 717.435 528.64C717.435 530.16 717.168 531.467 716.635 532.56C716.102 533.653 715.368 534.56 714.435 535.28C713.502 536 712.448 536.547 711.275 536.92L717.315 548H712.635L707.035 537.6H700.435V548H696.195ZM700.435 533.8H706.195C707.155 533.8 708.048 533.733 708.875 533.6C709.728 533.44 710.475 533.173 711.115 532.8C711.755 532.4 712.248 531.867 712.595 531.2C712.968 530.507 713.155 529.627 713.155 528.56C713.182 527.333 712.942 526.36 712.435 525.64C711.955 524.893 711.235 524.373 710.275 524.08C709.315 523.76 708.155 523.6 706.795 523.6H700.435V533.8ZM722.914 548V519.72H733.794C735.314 519.72 736.7 519.88 737.954 520.2C739.207 520.493 740.3 520.987 741.234 521.68C742.167 522.347 742.887 523.253 743.394 524.4C743.9 525.547 744.154 526.96 744.154 528.64C744.154 530.16 743.887 531.467 743.354 532.56C742.82 533.653 742.087 534.56 741.154 535.28C740.22 536 739.167 536.547 737.994 536.92L744.034 548H739.354L733.754 537.6H727.154V548H722.914ZM727.154 533.8H732.914C733.874 533.8 734.767 533.733 735.594 533.6C736.447 533.44 737.194 533.173 737.834 532.8C738.474 532.4 738.967 531.867 739.314 531.2C739.687 530.507 739.874 529.627 739.874 528.56C739.9 527.333 739.66 526.36 739.154 525.64C738.674 524.893 737.954 524.373 736.994 524.08C736.034 523.76 734.874 523.6 733.514 523.6H727.154V533.8ZM746.593 548L757.273 519.72H762.753L773.393 548H768.833L766.753 542.32H753.233L751.153 548H746.593ZM754.633 538.52H765.353L759.993 523.76L754.633 538.52ZM776.976 548V519.72H781.896L796.096 541.8V519.72H800.296V548H795.496L781.216 526.04V548H776.976ZM806.937 548V519.72H826.417V523.6H811.177V532.08H824.657V535.92H811.177V544.12H826.417V548H806.937ZM828.468 548L839.148 519.72H844.628L855.268 548H850.708L848.628 542.32H835.108L833.028 548H828.468ZM836.508 538.52H847.228L841.868 523.76L836.508 538.52ZM858.851 548V519.72H863.771L877.971 541.8V519.72H882.171V548H877.371L863.091 526.04V548H858.851ZM910.149 548.32C908.309 548.32 906.575 548.053 904.949 547.52C903.322 546.987 901.949 546.12 900.829 544.92C899.709 543.72 898.962 542.133 898.589 540.16H902.949C903.295 541.28 903.855 542.16 904.629 542.8C905.402 543.413 906.295 543.84 907.309 544.08C908.349 544.32 909.389 544.44 910.429 544.44C911.415 544.44 912.335 544.307 913.189 544.04C914.069 543.773 914.789 543.333 915.349 542.72C915.909 542.107 916.189 541.307 916.189 540.32C916.189 539.573 916.042 538.96 915.749 538.48C915.455 538 915.042 537.613 914.509 537.32C914.002 537 913.389 536.747 912.669 536.56C911.842 536.293 910.949 536.067 909.989 535.88C909.055 535.693 908.122 535.48 907.189 535.24C906.282 535 905.429 534.693 904.629 534.32C903.962 534.053 903.309 533.733 902.669 533.36C902.055 532.96 901.522 532.493 901.069 531.96C900.615 531.4 900.242 530.747 899.949 530C899.682 529.253 899.549 528.4 899.549 527.44C899.549 526.16 899.749 525.067 900.149 524.16C900.575 523.253 901.122 522.493 901.789 521.88C902.482 521.267 903.269 520.787 904.149 520.44C905.055 520.067 906.002 519.8 906.989 519.64C907.975 519.48 908.935 519.4 909.869 519.4C911.575 519.4 913.149 519.667 914.589 520.2C916.029 520.733 917.215 521.587 918.149 522.76C919.109 523.907 919.629 525.427 919.709 527.32H915.589C915.482 526.307 915.135 525.507 914.549 524.92C913.989 524.307 913.282 523.88 912.429 523.64C911.575 523.373 910.669 523.24 909.709 523.24C909.015 523.24 908.322 523.307 907.629 523.44C906.935 523.547 906.295 523.76 905.709 524.08C905.149 524.373 904.695 524.773 904.349 525.28C904.029 525.787 903.869 526.413 903.869 527.16C903.869 527.8 904.002 528.373 904.269 528.88C904.535 529.36 904.909 529.773 905.389 530.12C905.895 530.44 906.455 530.72 907.069 530.96C908.189 531.387 909.415 531.72 910.749 531.96C912.082 532.173 913.335 532.48 914.509 532.88C915.362 533.147 916.162 533.48 916.909 533.88C917.655 534.253 918.295 534.72 918.829 535.28C919.362 535.813 919.775 536.453 920.069 537.2C920.362 537.92 920.509 538.76 920.509 539.72C920.509 541.293 920.229 542.64 919.669 543.76C919.109 544.853 918.349 545.733 917.389 546.4C916.429 547.067 915.322 547.56 914.069 547.88C912.815 548.173 911.509 548.32 910.149 548.32ZM926 548V519.72H945.48V523.6H930.24V532.08H943.72V535.92H930.24V544.12H945.48V548H926ZM947.53 548L958.21 519.72H963.69L974.33 548H969.77L967.69 542.32H954.17L952.09 548H947.53ZM955.57 538.52H966.29L960.93 523.76L955.57 538.52Z"
                        fill="#E5E5E5" />
                    <g filter="url(#filter13_d_272_5082)">
                        <path
                            d="M1135.16 258V248.102H1137.28L1140.15 253.324L1142.96 248.102H1145.02V258H1143.55V249.852L1140.43 255.536H1139.78L1136.65 249.852V258H1135.16ZM1146.28 258L1150.02 248.102H1151.94L1155.66 258H1154.06L1153.34 256.012H1148.6L1147.88 258H1146.28ZM1149.09 254.682H1152.85L1150.97 249.516L1149.09 254.682ZM1156.91 258V248.102H1158.4V256.642H1163.69V258H1156.91ZM1164.26 258L1168 248.102H1169.91L1173.64 258H1172.04L1171.31 256.012H1166.58L1165.85 258H1164.26ZM1167.07 254.682H1170.82L1168.95 249.516L1167.07 254.682ZM1178.73 258.112C1177.71 258.112 1176.85 257.897 1176.16 257.468C1175.48 257.039 1174.96 256.446 1174.62 255.69C1174.27 254.925 1174.1 254.052 1174.1 253.072C1174.1 252.335 1174.19 251.658 1174.38 251.042C1174.58 250.417 1174.87 249.875 1175.25 249.418C1175.63 248.961 1176.11 248.611 1176.68 248.368C1177.26 248.116 1177.92 247.99 1178.68 247.99C1179.42 247.99 1180.06 248.107 1180.62 248.34C1181.18 248.564 1181.65 248.891 1182.01 249.32C1182.38 249.749 1182.64 250.267 1182.77 250.874H1181.2C1181.11 250.547 1180.96 250.272 1180.72 250.048C1180.5 249.824 1180.21 249.651 1179.87 249.53C1179.53 249.409 1179.15 249.348 1178.72 249.348C1178.16 249.348 1177.68 249.446 1177.29 249.642C1176.9 249.838 1176.58 250.109 1176.33 250.454C1176.08 250.79 1175.91 251.182 1175.79 251.63C1175.68 252.078 1175.63 252.554 1175.63 253.058C1175.63 253.73 1175.73 254.346 1175.95 254.906C1176.16 255.466 1176.5 255.914 1176.96 256.25C1177.41 256.586 1178.01 256.754 1178.75 256.754C1179.32 256.754 1179.81 256.656 1180.22 256.46C1180.63 256.255 1180.95 255.965 1181.18 255.592C1181.42 255.209 1181.54 254.747 1181.55 254.206H1178.48V252.904H1183V253.632C1183 254.537 1182.84 255.326 1182.5 255.998C1182.16 256.67 1181.68 257.193 1181.04 257.566C1180.41 257.93 1179.64 258.112 1178.73 258.112ZM1183.45 258L1187.19 248.102H1189.11L1192.83 258H1191.24L1190.51 256.012H1185.78L1185.05 258H1183.45ZM1186.27 254.682H1190.02L1188.14 249.516L1186.27 254.682ZM1196.87 258L1200.6 248.102H1202.52L1206.25 258H1204.65L1203.92 256.012H1199.19L1198.46 258H1196.87ZM1199.68 254.682H1203.43L1201.56 249.516L1199.68 254.682ZM1207.5 258V248.102H1208.98V258H1207.5ZM1211.31 258V248.102H1215.12C1215.65 248.102 1216.14 248.158 1216.58 248.27C1217.02 248.373 1217.4 248.545 1217.73 248.788C1218.05 249.021 1218.31 249.339 1218.48 249.74C1218.66 250.141 1218.75 250.636 1218.75 251.224C1218.75 251.756 1218.66 252.213 1218.47 252.596C1218.28 252.979 1218.03 253.296 1217.7 253.548C1217.37 253.8 1217 253.991 1216.59 254.122L1218.71 258H1217.07L1215.11 254.36H1212.8V258H1211.31ZM1212.8 253.03H1214.81C1215.15 253.03 1215.46 253.007 1215.75 252.96C1216.05 252.904 1216.31 252.811 1216.54 252.68C1216.76 252.54 1216.93 252.353 1217.05 252.12C1217.19 251.877 1217.25 251.569 1217.25 251.196C1217.26 250.767 1217.18 250.426 1217 250.174C1216.83 249.913 1216.58 249.731 1216.24 249.628C1215.91 249.516 1215.5 249.46 1215.02 249.46H1212.8V253.03ZM1220.67 258V248.102H1224.24C1224.97 248.102 1225.61 248.219 1226.14 248.452C1226.68 248.685 1227.1 249.049 1227.39 249.544C1227.68 250.029 1227.82 250.659 1227.82 251.434C1227.82 252.181 1227.65 252.806 1227.32 253.31C1226.99 253.814 1226.54 254.197 1225.97 254.458C1225.4 254.71 1224.75 254.836 1224.03 254.836H1222.15V258H1220.67ZM1222.15 253.492H1223.97C1224.68 253.492 1225.25 253.329 1225.68 253.002C1226.11 252.666 1226.32 252.129 1226.32 251.392C1226.32 250.748 1226.14 250.267 1225.79 249.95C1225.44 249.623 1224.9 249.46 1224.18 249.46H1222.15V253.492ZM1233.78 258.112C1232.76 258.112 1231.9 257.897 1231.19 257.468C1230.49 257.029 1229.96 256.427 1229.59 255.662C1229.23 254.897 1229.05 254.029 1229.05 253.058C1229.05 252.078 1229.23 251.205 1229.59 250.44C1229.96 249.675 1230.49 249.077 1231.2 248.648C1231.91 248.209 1232.78 247.99 1233.79 247.99C1234.82 247.99 1235.68 248.205 1236.38 248.634C1237.08 249.063 1237.62 249.661 1237.98 250.426C1238.34 251.191 1238.53 252.064 1238.53 253.044C1238.53 254.015 1238.34 254.883 1237.98 255.648C1237.62 256.413 1237.08 257.015 1236.37 257.454C1235.67 257.893 1234.81 258.112 1233.78 258.112ZM1233.79 256.754C1234.54 256.754 1235.15 256.581 1235.63 256.236C1236.1 255.891 1236.45 255.438 1236.68 254.878C1236.9 254.318 1237.01 253.711 1237.01 253.058C1237.01 252.563 1236.95 252.092 1236.82 251.644C1236.7 251.196 1236.5 250.799 1236.24 250.454C1235.98 250.109 1235.65 249.838 1235.24 249.642C1234.82 249.446 1234.34 249.348 1233.79 249.348C1233.06 249.348 1232.44 249.521 1231.96 249.866C1231.48 250.211 1231.13 250.664 1230.9 251.224C1230.66 251.784 1230.55 252.395 1230.55 253.058C1230.55 253.711 1230.66 254.318 1230.88 254.878C1231.11 255.438 1231.47 255.891 1231.95 256.236C1232.43 256.581 1233.05 256.754 1233.79 256.754ZM1240.3 258V248.102H1244.11C1244.64 248.102 1245.12 248.158 1245.56 248.27C1246 248.373 1246.38 248.545 1246.71 248.788C1247.04 249.021 1247.29 249.339 1247.47 249.74C1247.64 250.141 1247.73 250.636 1247.73 251.224C1247.73 251.756 1247.64 252.213 1247.45 252.596C1247.27 252.979 1247.01 253.296 1246.68 253.548C1246.36 253.8 1245.99 253.991 1245.58 254.122L1247.69 258H1246.05L1244.09 254.36H1241.78V258H1240.3ZM1241.78 253.03H1243.8C1244.13 253.03 1244.45 253.007 1244.74 252.96C1245.04 252.904 1245.3 252.811 1245.52 252.68C1245.74 252.54 1245.92 252.353 1246.04 252.12C1246.17 251.877 1246.23 251.569 1246.23 251.196C1246.24 250.767 1246.16 250.426 1245.98 250.174C1245.81 249.913 1245.56 249.731 1245.23 249.628C1244.89 249.516 1244.48 249.46 1244.01 249.46H1241.78V253.03ZM1251.79 258V249.46H1248.66V248.102H1256.4V249.46H1253.28V258H1251.79Z"
                            fill="white" />
                    </g>
                    <defs>
                        <filter id="filter0_d_272_5082" x="376.162" y="242.99" width="92.7651" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter1_d_272_5082" x="241.616" y="239.99" width="83.1965" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter2_d_272_5082" x="485.148" y="200.99" width="97.854" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter3_d_272_5082" x="601.162" y="255.102" width="93.8315" height="29.8979"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter4_d_272_5082" x="715.616" y="236.99" width="56.0928" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter5_d_272_5082" x="845.162" y="289.99" width="60.3789" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter6_d_272_5082" x="1170.16" y="148.99" width="77.6714" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter7_d_272_5082" x="1046.17" y="270.99" width="130.471" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter8_d_272_5082" x="993.148" y="299.102" width="125.346" height="29.8979"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter9_d_272_5082" x="918.162" y="322.99" width="108.447" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter10_d_272_5082" x="230.162" y="331.102" width="72.7769" height="29.8979"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter11_d_272_5082" x="79.7419" y="415.99" width="115.763" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter12_d_272_5082" x="135.616" y="491.99" width="158.831" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <filter id="filter13_d_272_5082" x="1125.16" y="239.99" width="141.236" height="30.1216"
                            filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feColorMatrix in="SourceAlpha" type="matrix"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="2" />
                            <feGaussianBlur stdDeviation="5" />
                            <feComposite in2="hardAlpha" operator="out" />
                            <feColorMatrix type="matrix"
                                values="0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0 0.192157 0 0 0 0.5 0" />
                            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_272_5082" />
                            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_272_5082"
                                result="shape" />
                        </filter>
                        <linearGradient id="paint0_linear_272_5082" x1="720" y1="219.516" x2="720" y2="601"
                            gradientUnits="userSpaceOnUse">
                            <stop stop-color="#D1D1D1" />
                            <stop offset="1" stop-color="#F6F6F6" />
                        </linearGradient>
                        <clipPath id="clip0_272_5082">
                            <rect width="24" height="24" fill="white" transform="translate(1118 227.029) rotate(45)" />
                        </clipPath>
                        <clipPath id="clip1_272_5082">
                            <rect width="24" height="24" fill="white" transform="translate(123 474) rotate(45)" />
                        </clipPath>
                    </defs>
                </svg>
                <div class="mapAreaInfo">
                    <div class="areaInfoBlock">
                        <p>Off plan</p>
                        <span class="areaInfoNum">5.123</span>
                    </div>
                    <div class="areaInfoBlock">
                        <p>Secondary</p>
                        <span class="areaInfoNum">3.456</span>
                    </div>
                    <div class="areaInfoBlock">
                        <p>Avarage price</p>
                        <span class="areaInfoNum">€ 2.850.630</span>
                    </div>
                    <div class="areaInfoBlock">
                        <p>
                            New projects<span class="subInfo">in the last 3 days</span>
                        </p>
                        <span class="areaInfoNum">23</span>
                    </div>
                </div>
                <div class="mapAreaDetailedInfo hidden">
                    <div class="mapAreaImageContainer">
                        <p class="mapAreaName">Estepona</p>
                        <div class="mapAreaDetails">
                            <div class="mapAreaDetailsLeft">
                                <p class="mapAreaDetailsNum">5.123</p>
                                <p class="mapAreaDetailsType">Off plan</p>
                            </div>
                            <div class="mapAreaDetailsRight">
                                <p class="mapAreaDetailsNum">3.456</p>
                                <p class="mapAreaDetailsType">Secondary</p>
                            </div>
                        </div>
                    </div>
                    <div class="mapAreaDetailsBottom opened">
                        <p class="mapAreaDetailsText">
                            Estepona, a charming town on Spain's Costa del Sol, is famous
                            for its golden beaches, vibrant marina, and quaint old town
                            filled with beautiful whitewashed houses, cobblestone streets,
                            and colorful flowers. It blends traditional Andalusian culture
                            with modern luxury, offering a variety of leisure activities
                            like water sports, golf, and nature parks. With its mild
                            climate and close proximity to Marbella and Málaga, Estepona
                            is perfect for a peaceful seaside lifestyle or a relaxing
                            holiday.
                        </p>
                        <button class="readMoreButton">Read more</button>
                        <button class="hideTextButton hidden">Hide</button>
                        <!-- <button class="viewAll">View all properties in this area</button> -->
                    </div>
                </div>
                <div class="mapSliderContainer hidden">
                    <div class="mapSliderActions">
                        <button class="mapSlidePrevButton"></button>
                        <button class="mapSlideNextButton"></button>
                    </div>
                    <div class="mapSlidesList">




                    </div>
                </div>
            </div>
        </section>
    </div>

    <section class="legalBlock">
        <div class="legalTop">
            <p class="legalHeading">Legal</p>
            <p class="legalInfoText">
                Our legal services provide expert guidance in real estate
                transactions, tax optimization, company administration, and labor
                law. We ensure comprehensive support for all legal aspects, helping
                you navigate complex regulations with ease.
            </p>
        </div>
        <div class="legalBgcBlock">
            <p class="legalBgcText">Legal services</p>
        </div>
        <div class="legalServicesContainer">
            <div class="legalServiceCard">
                <span class="legalServiceIcon scale-icon"></span>
                <p class="legalServiceTitle">
                    Legal advice on real estate transactions
                </p>
                <p class="legalServiceDescription">
                    We provide expert legal advice in real estate transactions,
                    including legal analysis and transaction structuring.
                </p>
            </div>
            <div class="legalServiceCard">
                <span class="legalServiceIcon document-icon"></span>
                <p class="legalServiceTitle">Tax Counseling</p>
                <p class="legalServiceDescription">
                    We provide tax advice in the context of acquiring and owning real
                    estate, helping to optimize clients' tax liability.
                </p>
            </div>
            <div class="legalServiceCard">
                <span class="legalServiceIcon hundred-icon"></span>
                <p class="legalServiceTitle">Financing and Guarantees</p>
                <p class="legalServiceDescription">
                    We provide support in financing for real estate acquisitions and
                    establishing appropriate guarantees.
                </p>
            </div>
            <div class="legalServiceCard">
                <span class="legalServiceIcon exclamation-icon"></span>
                <p class="legalServiceTitle">Risk Assessment</p>
                <p class="legalServiceDescription">
                    We analyze the risks of real estate transactions and provide
                    recommendations to mitigate them.
                </p>
            </div>
            <div class="legalServiceCard">
                <span class="legalServiceIcon handshake-icon"></span>
                <p class="legalServiceTitle">Commercial Negotiations</p>
                <p class="legalServiceDescription">
                    We participate in commercial negotiations with counterparties and
                    other parties to transactions.
                </p>
            </div>
            <div class="legalServiceCard">
                <span class="legalServiceIcon gear-icon"></span>
                <p class="legalServiceTitle">Transaction support</p>
                <p class="legalServiceDescription">
                    We provide full legal support of the transaction process,
                    including preparation of documents, conclusion of contracts and
                    registration of transactions.
                </p>
            </div>
        </div>
        <!--         <a
          class="exploreButtonlink"
          href="#consulting"
          onclick="window.scrollTo(0, 0);"
        >
          <button class="exploreButton legalButton">Explore more</button>
        </a> -->
    </section>
</main>
<link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<script>
    const path = window.location.pathname.split('/');
    let language = '';

    const allowedLanguages = ['ru', 'es'];

    if (path[1] && allowedLanguages.includes(path[1])) {
        language = path[1];
    }

    const areasData = [
        {
            "value": "Estepona",
            "label": "Estepona",
            "subAreas": [
                {
                    "value": "Benavista",
                    "oldLabel": "Benavista",
                    "newLabel": "Benavista"
                },
                {
                    "value": "Costalita",
                    "oldLabel": "Costalita",
                    "newLabel": "Costalita"
                },
                {
                    "value": "Valle Romano",
                    "oldLabel": "Valle Romano",
                    "newLabel": "Valle Romano"
                },
                {
                    "value": "El Padrón",
                    "oldLabel": "El Padrón",
                    "newLabel": "El Padrón"
                },
                {
                    "value": "Hacienda del Sol",
                    "oldLabel": "El Presidente",
                    "newLabel": "Hacienda del Sol"
                },
                {
                    "value": "Selwo",
                    "oldLabel": "Selwo",
                    "newLabel": "Selwo"
                },
                {
                    "value": "Atalaya",
                    "oldLabel": "Atalaya",
                    "newLabel": "Atalaya"
                },
                {
                    "value": "Benamara",
                    "oldLabel": "Benamara",
                    "newLabel": "Benamara"
                },
                {
                    "value": "El Presidente",
                    "oldLabel": "El Presidente",
                    "newLabel": "El Presidente"
                },
                {
                    "value": "Bel Air",
                    "oldLabel": "Bel Air",
                    "newLabel": "Bel Air"
                },
                {
                    "value": "Cancelada",
                    "oldLabel": "Cancelada",
                    "newLabel": "Cancelada"
                },
                {
                    "value": "New Golden Mile",
                    "oldLabel": "New Golden Mile",
                    "newLabel": "New Golden Mile"
                },
                // new_add
                {
                    "value": "Diana Park",
                    "oldLabel": "Diana Park",
                    "newLabel": "Diana Park"
                },
                {
                    "value": "El Padron",
                    "oldLabel": "El Padron",
                    "newLabel": "El Padron"
                },
            ]
        },
        {
            "value": "Malaga",
            "label": "Malaga",
            "subAreas": [
                {
                    "value": "Alhaurín de la Torre",
                    "oldLabel": "Alhaurín de la Torre",
                    "newLabel": "Alhaurín de la Torre"
                },
                {
                    "value": "Lauro Golf",
                    "oldLabel": "Alhaurín de la Torre",
                    "newLabel": "Lauro Golf"
                },
                {
                    "value": "Málaga Este",
                    "oldLabel": "Málaga Este",
                    "newLabel": "Málaga Este"
                },
                {
                    "value": "Málaga Centro",
                    "oldLabel": "Málaga Centro",
                    "newLabel": "Málaga Centro"
                },
                {
                    "value": "Miraflores",
                    "oldLabel": "Málaga Este",
                    "newLabel": "Miraflores"
                }
            ]
        },
        {
            "value": "Marbella:",
            "label": "Marbella",
            "subAreas": [
                {
                    "value": "Río Real",
                    "oldLabel": "Río Real",
                    "newLabel": "Río Real"
                },
                {
                    "value": "Las Chapas",
                    "oldLabel": "Hacienda Las Chapas",
                    "newLabel": "Las Chapas"
                },
                {
                    "value": "Santa Clara",
                    "oldLabel": "Hacienda Las Chapas",
                    "newLabel": "Santa Clara"
                },
                {
                    "value": "Hacienda Las Chapas",
                    "oldLabel": "Hacienda Las Chapas",
                    "newLabel": "Hacienda Las Chapas"
                },
                {
                    "value": "Los Monteros",
                    "oldLabel": "Hacienda Las Chapas",
                    "newLabel": "Los Monteros"
                },
                {
                    "value": "Carib Playa",
                    "oldLabel": "Carib Playa",
                    "newLabel": "Carib Playa"
                },
                {
                    "value": "Costabella",
                    "oldLabel": "Costabella",
                    "newLabel": "Costabella"
                },
                {
                    "value": "Torre Real",
                    "oldLabel": "Torre Real",
                    "newLabel": "Torre Real"
                },
                {
                    "value": "Altos de los Monteros",
                    "oldLabel": "Altos de los Monteros",
                    "newLabel": "Altos de los Monteros"
                },
                {
                    "value": "Sierra Blanca",
                    "oldLabel": "Sierra Blanca",
                    "newLabel": "Sierra Blanca"
                },
                {
                    "value": "Nagüeles",
                    "oldLabel": "Nagüeles",
                    "newLabel": "Nagüeles"
                },
                {
                    "value": "Nueva Andalucía",
                    "oldLabel": "Nueva Andalucía",
                    "newLabel": "Nueva Andalucía"
                },
                {
                    "value": "Elviria",
                    "oldLabel": "Hacienda Las Chapas",
                    "newLabel": "Elviria"
                },
                {
                    "value": "Aloha",
                    "oldLabel": "Aloha",
                    "newLabel": "Aloha"
                },
                {
                    "value": "Puerto de Cabopino",
                    "oldLabel": "Puerto de Cabopino",
                    "newLabel": "Puerto de Cabopino"
                },
                {
                    "value": "The Golden Mile",
                    "oldLabel": "The Golden Mile",
                    "newLabel": "The Golden Mile"
                },
                {
                    "value": "Puerto Banús",
                    "oldLabel": "Puerto Banús",
                    "newLabel": "Puerto Banús"
                },
                {
                    "value": "Artola",
                    "oldLabel": "Artola",
                    "newLabel": "Artola"
                },
                {
                    "value": "Los Almendros",
                    "oldLabel": "Nueva Andalucía",
                    "newLabel": "Los Almendros"
                },
                {
                    "value": "Bahía de Marbella",
                    "oldLabel": "Bahía de Marbella",
                    "newLabel": "Bahía de Marbella"
                },
                {
                    "value": "Marbesa",
                    "oldLabel": "Hacienda Las Chapas",
                    "newLabel": "Marbesa"
                },
                {
                    "value": "Cabopino",
                    "oldLabel": "Cabopino",
                    "newLabel": "Cabopino"
                },
                {
                    "value": "Reserva de Marbella",
                    "oldLabel": "Hacienda Las Chapas",
                    "newLabel": "Reserva de Marbella"
                },
                {
                    "value": "Guadalmina Alta",
                    "oldLabel": "Guadalmina Alta",
                    "newLabel": "Guadalmina Alta"
                },
                {
                    "value": "Las Brisas",
                    "oldLabel": "Hacienda Las Chapas",
                    "newLabel": "Las Brisas"
                },
                {
                    "value": "San Pedro de Alcántara",
                    "oldLabel": "San Pedro de Alcántara",
                    "newLabel": "San Pedro de Alcántara"
                },
                {
                    "value": "Guadalmina Baja",
                    "oldLabel": "Guadalmina Baja",
                    "newLabel": "Guadalmina Baja"
                },
                {
                    "value": "Cortijo Blanco",
                    "oldLabel": "San Pedro de Alcántara",
                    "newLabel": "Cortijo Blanco"
                },
                //new_add
                {
                    "value": "El Rosario",
                    "oldLabel": "El Rosario",
                    "newLabel": "El Rosario"
                },
                {
                    "value": "Bahia de Marbella",
                    "oldLabel": "Bahia de Marbella",
                    "newLabel": "Bahia de Marbella"
                },
                {
                    "value": "San Diego",
                    "oldLabel": "Marbella",
                    "newLabel": "San Diego"
                },
                {
                    "value": "Valle del Sol",
                    "oldLabel": "San Pedro de Alcántara",
                    "newLabel": "Valle del Sol"
                },
                {
                    "value": "Valle del Sol",
                    "oldLabel": "San Pedro de Alcántara",
                    "newLabel": "Valle del Sol"
                },
            ]
        },
        {
            "value": "Fuengirola",
            "label": "Fuengirola",
            "subAreas": [
                {
                    "value": "Carvajal",
                    "oldLabel": "Carvajal",
                    "newLabel": "Carvajal"
                },
                {
                    "value": "Los Boliches",
                    "oldLabel": "Los Boliches",
                    "newLabel": "Los Boliches"
                },
                {
                    "value": "Los Pacos",
                    "oldLabel": "Los Pacos",
                    "newLabel": "Los Pacos"
                },
                {
                    "value": "Torreblanca",
                    "oldLabel": "Torreblanca",
                    "newLabel": "Torreblanca"
                },
                {
                    "value": "Las Lagunas",
                    "oldLabel": "Las Lagunas",
                    "newLabel": "Las Lagunas"
                }
            ]
        },
        {
            "value": "Manilva",
            "label": "Manilva",
            "subAreas": [
                {
                    "value": "Punta Chullera",
                    "oldLabel": "Punta Chullera",
                    "newLabel": "Punta Chullera"
                },
                {
                    "value": "La Duquesa",
                    "oldLabel": "La Duquesa",
                    "newLabel": "La Duquesa"
                },
                {
                    "value": "San Luis de Sabinillas",
                    "oldLabel": "San Luis de Sabinillas",
                    "newLabel": "San Luis de Sabinillas"
                }
            ]
        },
        {
            "value": "Casares",
            "label": "Casares",
            "subAreas": [
                {
                    "value": "Casares Playa",
                    "oldLabel": "Casares Playa",
                    "newLabel": "Casares Playa"
                },
                {
                    "value": "Casares Pueblo",
                    "oldLabel": "Casares Pueblo",
                    "newLabel": "Casares Pueblo"
                },
                {
                    "value": "Doña Julia",
                    "oldLabel": "Doña Julia",
                    "newLabel": "Doña Julia"
                }
            ]
        },
        {
            "value": "Mijas",
            "label": "Mijas",
            "subAreas": [
                {
                    "value": "Campo Mijas",
                    "oldLabel": "Campo Mijas",
                    "newLabel": "Campo Mijas"
                },
                {
                    "value": "La Cala de Mijas",
                    "oldLabel": "La Cala de Mijas",
                    "newLabel": "La Cala de Mijas"
                },
                {
                    "value": "Valtocado",
                    "oldLabel": "Valtocado",
                    "newLabel": "Valtocado"
                },
                {
                    "value": "Riviera del Sol",
                    "oldLabel": "Riviera del Sol",
                    "newLabel": "Riviera del Sol"
                },
                {
                    "value": "Sierrezuela",
                    "oldLabel": "Sierrezuela",
                    "newLabel": "Sierrezuela"
                },
                {
                    "value": "Calanova Golf",
                    "oldLabel": "Calanova Golf",
                    "newLabel": "Calanova Golf"
                },
                {
                    "value": "Mijas Costa",
                    "oldLabel": "Mijas Costa",
                    "newLabel": "Mijas Costa"
                },
                {
                    "value": "La Cala Golf",
                    "oldLabel": "La Cala Golf",
                    "newLabel": "La Cala Golf"
                },
                {
                    "value": "La Cala Hills",
                    "oldLabel": "La Cala Hills",
                    "newLabel": "La Cala Hills"
                },
                {
                    "value": "Calypso",
                    "oldLabel": "Calypso",
                    "newLabel": "Calypso"
                },
                {
                    "value": "Mijas Golf",
                    "oldLabel": "Mijas Golf",
                    "newLabel": "Mijas Golf"
                },
                {
                    "value": "Cerros del Aguila",
                    "oldLabel": "Cerros del Aguila",
                    "newLabel": "Cerros del Aguila"
                },
                {
                    "value": "Calahonda",
                    "oldLabel": "Calahonda",
                    "newLabel": "Calahonda"
                },
                {
                    "value": "El Chaparral",
                    "oldLabel": "El Chaparral",
                    "newLabel": "El Chaparral"
                },
                {
                    "value": "El Faro",
                    "oldLabel": "El Faro",
                    "newLabel": "El Faro"
                },
                {
                    "value": "Torremar",
                    "oldLabel": "Torremar",
                    "newLabel": "Torremar"
                },
                //new_add
                {
                    "value": "La Cala",
                    "oldLabel": "La Cala",
                    "newLabel": "La Cala"
                }

            ]
        },
        {
            "value": "Benahavis",
            "label": "Benahavis",
            "subAreas": [
                {
                    "value": "La Heredia",
                    "oldLabel": "La Heredia",
                    "newLabel": "La Heredia"
                },
                {
                    "value": "Los Arqueros",
                    "oldLabel": "Los Arqueros",
                    "newLabel": "Los Arqueros"
                },
                {
                    "value": "La Zagaleta",
                    "oldLabel": "La Zagaleta",
                    "newLabel": "La Zagaleta"
                },
                {
                    "value": "El Madroñal",
                    "oldLabel": "El Madroñal",
                    "newLabel": "El Madroñal"
                },
                {
                    "value": "Los Flamingos",
                    "oldLabel": "Los Flamingos",
                    "newLabel": "Los Flamingos"
                },
                {
                    "value": "Monte Halcones",
                    "oldLabel": "Monte Halcones",
                    "newLabel": "Monte Halcones"
                },
                {
                    "value": "El Paraiso",
                    "oldLabel": "El Paraiso",
                    "newLabel": "El Paraiso"
                },
                {
                    "value": "La Quinta",
                    "oldLabel": "La Quinta",
                    "newLabel": "La Quinta"
                },
                {
                    "value": "La Campana",
                    "oldLabel": "La Campana",
                    "newLabel": "La Campana"
                }
            ]
        },
        {
            "value": "Alhaurín el Grande",
            "label": "Alhaurín el Grande",
            "subAreas": [
                {
                    "value": "Alhaurin Golf",
                    "oldLabel": "Alhaurin Golf",
                    "newLabel": "Alhaurin Golf"
                }
            ]
        },
        {
            "value": "Benalmádena",
            "label": "Benalmádena",
            "subAreas": [
                {
                    "value": "Benalmadena Pueblo",
                    "oldLabel": "Benalmadena Pueblo",
                    "newLabel": "Benalmadena Pueblo"
                },
                {
                    "value": "La Capellania",
                    "oldLabel": "La Capellania",
                    "newLabel": "La Capellania"
                },
                {
                    "value": "Arroyo de la Miel",
                    "oldLabel": "Arroyo de la Miel",
                    "newLabel": "Arroyo de la Miel"
                },
                {
                    "value": "Torremuelle",
                    "oldLabel": "Torremuelle",
                    "newLabel": "Torremuelle"
                },
                {
                    "value": "Benalmadena Costa",
                    "oldLabel": "Benalmadena Costa",
                    "newLabel": "Benalmadena Costa"
                },
                {
                    "value": "Torrequebrada",
                    "oldLabel": "Torrequebrada",
                    "newLabel": "Torrequebrada"
                }
            ]
        },
        {
            "value": "Torremolinos",
            "label": "Torremolinos",
            "subAreas": [
                {
                    "value": "La Carihuela",
                    "oldLabel": "La Carihuela",
                    "newLabel": "La Carihuela"
                },
                {
                    "value": "El Pinillo",
                    "oldLabel": "El Pinillo",
                    "newLabel": "El Pinillo"
                },
                {
                    "value": "Torremolinos Centro",
                    "oldLabel": "Torremolinos Centro",
                    "newLabel": "Torremolinos Centro"
                },
                {
                    "value": "Playamar",
                    "oldLabel": "Playamar",
                    "newLabel": "Playamar"
                },
                //new_add
                {
                    "value": "Bajondillo",
                    "oldLabel": "Bajondillo",
                    "newLabel": "Bajondillo"
                },
                {
                    "value": "EI Pinillo",
                    "oldLabel": "EI Pinillo",
                    "newLabel": "EI Pinillo"
                },
                {
                    "value": "El Calvario",
                    "oldLabel": "El Calvario",
                    "newLabel": "El Calvario"
                },
                {
                    "value": "La Colina",
                    "oldLabel": "La Colina",
                    "newLabel": "La Colina"
                },
                {
                    "value": "La Leala",
                    "oldLabel": "La Leala",
                    "newLabel": "La Leala"
                },
                {
                    "value": "Playa de los Álamos",
                    "oldLabel": "Playa de los Álamos",
                    "newLabel": "Playa de los Álamos"
                },
                {
                    "value": "La Carihuela",
                    "oldLabel": "La Carihuela",
                    "newLabel": "La Carihuela"
                },                
                {
                    "value": "Los Alamos",
                    "oldLabel": "Los Alamos",
                    "newLabel": "Los Alamos"
                },                
                {
                    "value": "Los Alamos",
                    "oldLabel": "Los Alamos",
                    "newLabel": "Los Alamos"
                },
            ]
        },

        {
            "value": "Cadiz",
            "label": "Cadiz",
            "subAreas": [
                {
                    "value": "La Línea",
                    "oldLabel": "La Línea",
                    "newLabel": "La Línea"
                },
                {
                    "value": "La Alcaidesa",
                    "oldLabel": "La Alcaidesa",
                    "newLabel": "La Alcaidesa"
                },
                {
                    "value": "Los Barrios",
                    "oldLabel": "Los Barrios",
                    "newLabel": "Los Barrios"
                },
                {
                    "value": "Pueblo Nuevo",
                    "oldLabel": "Pueblo Nuevo",
                    "newLabel": "Pueblo Nuevo"
                },
                {
                    "value": "San Martin de Tesorillo",
                    "oldLabel": "San Martin de Tesorillo",
                    "newLabel": "San Martin de Tesorillo"
                },
                {
                    "value": "San Roque",
                    "oldLabel": "San Roque",
                    "newLabel": "San Roque"
                },
                {
                    "value": "San Roque Club",
                    "oldLabel": "San Roque",
                    "newLabel": "San Roque Club"
                },
                {
                    "value": "Sotogrande",
                    "oldLabel": "San Roque",
                    "newLabel": "Sotogrande"
                },
                {
                    "value": "Sotogrande Alto",
                    "oldLabel": "San Roque",
                    "newLabel": "Sotogrande Alto"
                },
                {
                    "value": "Sotogrande Costa",
                    "oldLabel": "San Roque",
                    "newLabel": "Sotogrande Costa"
                },
                {
                    "value": "Sotogrande Marina",
                    "oldLabel": "San Roque",
                    "newLabel": "Sotogrande Marina"
                },
                {
                    "value": "Sotogrande Playa",
                    "oldLabel": "San Roque",
                    "newLabel": "Sotogrande Playa"
                },
                {
                    "value": "Sotogrande Puerto",
                    "oldLabel": "San Roque",
                    "newLabel": "Sotogrande Puerto"
                },
                {
                    "value": "Torreguadiaro",
                    "oldLabel": "San Roque",
                    "newLabel": "Torreguadiaro"
                },
                {
                    "value": "Zahara",
                    "oldLabel": "Zahara",
                    "newLabel": "Zahara"
                }
            ]
        },
        {
            "value": "Other",
            "label": "Other",
            "subAreas": [
                {
                    "value": "Istan",
                    "oldLabel": "Istan",
                    "newLabel": "Istan"
                },
                {
                    "value": "Cártama",
                    "oldLabel": "Cártama",
                    "newLabel": "Cártama"
                },
                {
                    "value": "Benaoján",
                    "oldLabel": "Benaoján",
                    "newLabel": "Benaoján"
                },
                {
                    "value": "Antequera",
                    "oldLabel": "Antequera",
                    "newLabel": "Antequera"
                },
                {
                    "value": "Ojén",
                    "oldLabel": "Ojén",
                    "newLabel": "Ojén"
                },
                {
                    "value": "Fuente de Piedra",
                    "oldLabel": "Fuente de Piedra",
                    "newLabel": "Fuente de Piedra"
                },
                {
                    "value": "Júzcar",
                    "oldLabel": "Júzcar",
                    "newLabel": "Júzcar"
                },
                {
                    "value": "Genalguacil",
                    "oldLabel": "Genalguacil",
                    "newLabel": "Genalguacil"
                },
                {
                    "value": "Puerto de la Torre",
                    "oldLabel": "Puerto de la Torre",
                    "newLabel": "Puerto de la Torre"
                },
                {
                    "value": "Arriateg",
                    "oldLabel": "Arriateg",
                    "newLabel": "Arriateg"
                },
                {
                    "value": "El Burgo",
                    "oldLabel": "El Burgo",
                    "newLabel": "El Burgo"
                },
                {
                    "value": "Gaucín",
                    "oldLabel": "Gaucín",
                    "newLabel": "Gaucín"
                },
                {
                    "value": "La Mairena",
                    "oldLabel": "La Mairena",
                    "newLabel": "La Mairena"
                },
                {
                    "value": "Archidona",
                    "oldLabel": "Archidona",
                    "newLabel": "Archidona"
                },
                {
                    "value": "Monda",
                    "oldLabel": "Monda",
                    "newLabel": "Monda"
                },
                {
                    "value": "El Chorro",
                    "oldLabel": "El Chorro",
                    "newLabel": "El Chorro"
                },
                {
                    "value": "Carratraca",
                    "oldLabel": "Carratraca",
                    "newLabel": "Carratraca"
                },
                {
                    "value": "Ronda",
                    "oldLabel": "Ronda",
                    "newLabel": "Ronda"
                },
                {
                    "value": "Villanueva De La Concepcion",
                    "oldLabel": "Villanueva De La Concepcion",
                    "newLabel": "Villanueva De La Concepcion"
                },
                {
                    "value": "Mollina",
                    "oldLabel": "Mollina",
                    "newLabel": "Mollina"
                },
                {
                    "value": "Almogia",
                    "oldLabel": "Almogia",
                    "newLabel": "Almogia"
                },
                {
                    "value": "Villanueva del Rosario",
                    "oldLabel": "Villanueva del Rosario",
                    "newLabel": "Villanueva del Rosario"
                },
                {
                    "value": "Cuevas del Becerro",
                    "oldLabel": "Cuevas del Becerro",
                    "newLabel": "Cuevas del Becerro"
                },
                {
                    "value": "Zalea",
                    "oldLabel": "Zalea",
                    "newLabel": "Zalea"
                },
                {
                    "value": "Alhaurín el Grande",
                    "oldLabel": "Alhaurín el Grande",
                    "newLabel": "Alhaurín el Grande"
                },
                {
                    "value": "Ardales",
                    "oldLabel": "Ardales",
                    "newLabel": "Ardales"
                },
                {
                    "value": "Tolox",
                    "oldLabel": "Tolox",
                    "newLabel": "Tolox"
                },
                {
                    "value": "Cortes de la Frontera",
                    "oldLabel": "Cortes de la Frontera",
                    "newLabel": "Cortes de la Frontera"
                },
                {
                    "value": "Campillos",
                    "oldLabel": "Campillos",
                    "newLabel": "Campillos"
                },
                {
                    "value": "Algatocin",
                    "oldLabel": "Algatocin",
                    "newLabel": "Algatocin"
                },
                {
                    "value": "Benarrabá",
                    "oldLabel": "Benarrabá",
                    "newLabel": "Benarrabá"
                },
                {
                    "value": "Valle de Abdalajis",
                    "oldLabel": "Valle de Abdalajis",
                    "newLabel": "Valle de Abdalajis"
                },
                {
                    "value": "Montejaque",
                    "oldLabel": "Montejaque",
                    "newLabel": "Montejaque"
                },
                {
                    "value": "Alpandeire",
                    "oldLabel": "Alpandeire",
                    "newLabel": "Alpandeire"
                },
                {
                    "value": "Guaro",
                    "oldLabel": "Guaro",
                    "newLabel": "Guaro"
                },
                {
                    "value": "Alora",
                    "oldLabel": "Alora",
                    "newLabel": "Alora"
                },
                {
                    "value": "Coín",
                    "oldLabel": "Coín",
                    "newLabel": "Coín"
                },
                {
                    "value": "Pizarra",
                    "oldLabel": "Pizarra",
                    "newLabel": "Pizarra"
                },
                {
                    "value": "Benalauría",
                    "oldLabel": "Benalauría",
                    "newLabel": "Benalauría"
                },
                {
                    "value": "Yunquera",
                    "oldLabel": "Yunquera",
                    "newLabel": "Yunquera"
                },
                {
                    "value": "Casabermeja",
                    "oldLabel": "Casabermeja",
                    "newLabel": "Casabermeja"
                },
                {
                    "value": "Estacion de Cartama",
                    "oldLabel": "Estacion de Cartama",
                    "newLabel": "Estacion de Cartama"
                },
                {
                    "value": "Jubrique",
                    "oldLabel": "Jubrique",
                    "newLabel": "Jubrique"
                },
                {
                    "value": "Alozaina",
                    "oldLabel": "Alozaina",
                    "newLabel": "Alozaina"
                },
                {
                    "value": "Cañete la Real",
                    "oldLabel": "Cañete la Real",
                    "newLabel": "Cañete la Real"
                },
                {
                    "value": "Estación de Gaucin",
                    "oldLabel": "Estación de Gaucin",
                    "newLabel": "Estación de Gaucin"
                },
                {
                    "value": "Villafranco del Guadalhorce",
                    "oldLabel": "Villafranco del Guadalhorce",
                    "newLabel": "Villafranco del Guadalhorce"
                },
                {
                    "value": "Casarabonela",
                    "oldLabel": "Casarabonela",
                    "newLabel": "Casarabonela"
                },
                {
                    "value": "Jimera de Líbar",
                    "oldLabel": "Jimera de Líbar",
                    "newLabel": "Jimera de Líbar"
                },
                {
                    "value": "Puerto de la Torre",
                    "oldLabel": "Puerto de la Torre",
                    "newLabel": "Puerto de la Torre"
                },
                {
                    "value": "Alameda",
                    "oldLabel": "Alameda",
                    "newLabel": "Alameda"
                },
                {
                    "value": "Algeciras",
                    "oldLabel": "Algeciras",
                    "newLabel": "Algeciras"
                },
                {
                    "value": "Alhaurin de la Torre",
                    "oldLabel": "Alhaurin de la Torre",
                    "newLabel": "Alhaurin de la Torre"
                },
                {
                    "value": "Alhaurin el Grande",
                    "oldLabel": "Alhaurin el Grande",
                    "newLabel": "Alhaurin el Grande"
                },
                {
                    "value": "Arriate",
                    "oldLabel": "Arriate",
                    "newLabel": "Arriate"
                },
                {
                    "value": "Benadalid",
                    "oldLabel": "Benadalid",
                    "newLabel": "Benadalid"
                },
                {
                    "value": "Benalauria",
                    "oldLabel": "Benalauria",
                    "newLabel": "Benalauria"
                },
                {
                    "value": "Benaojan",
                    "oldLabel": "Benaojan",
                    "newLabel": "Benaojan"
                },
                {
                    "value": "Benarrabá",
                    "oldLabel": "Benarrabá",
                    "newLabel": "Benarrabá"
                },
                {
                    "value": "Cartajima",
                    "oldLabel": "Cartajima",
                    "newLabel": "Cartajima"
                },
                {
                    "value": "Cártama",
                    "oldLabel": "Cártama",
                    "newLabel": "Cártama"
                },
                {
                    "value": "Coin",
                    "oldLabel": "Coin",
                    "newLabel": "Coin"
                },
                {
                    "value": "Cuevas Bajas",
                    "oldLabel": "Cuevas Bajas",
                    "newLabel": "Cuevas Bajas"
                },
                {
                    "value": "Cuevas de San Marcos",
                    "oldLabel": "Cuevas de San Marcos",
                    "newLabel": "Cuevas de San Marcos"
                },
                {
                    "value": "Estacién Archidona",
                    "oldLabel": "Estacién Archidona",
                    "newLabel": "Estacién Archidona"
                },
                {
                    "value": "Gaucin",
                    "oldLabel": "Gaucin",
                    "newLabel": "Gaucin"
                },
                {
                    "value": "Farajan",
                    "oldLabel": "Farajan",
                    "newLabel": "Farajan"
                },
                {
                    "value": "Gibralgalia",
                    "oldLabel": "Gibralgalia",
                    "newLabel": "Gibralgalia"
                },
                {
                    "value": "Gobantes",
                    "oldLabel": "Gobantes",
                    "newLabel": "Gobantes"
                },
                {
                    "value": "Guadiaro",
                    "oldLabel": "Guadiaro",
                    "newLabel": "Guadiaro"
                },
                {
                    "value": "Jimera de Libar",
                    "oldLabel": "Jimera de Libar",
                    "newLabel": "Jimera de Libar"
                },
                {
                    "value": "La Atalaya",
                    "oldLabel": "La Atalaya",
                    "newLabel": "La Atalaya"
                },
                {
                    "value": "Teba",
                    "oldLabel": "Teba",
                    "newLabel": "Teba"
                },
                {
                    "value": "Torrenueva",
                    "oldLabel": "Torrenueva",
                    "newLabel": "Torrenueva"
                },
                {
                    "value": "Villanueva de Algaidas",
                    "oldLabel": "Villanueva de Algaidas",
                    "newLabel": "Villanueva de Algaidas"
                },
                {
                    "value": "Villanueva del Trabuco",
                    "oldLabel": "Villanueva del Trabuco",
                    "newLabel": "Villanueva del Trabuco"
                },
                {
                    "value": "Cañete la Real",
                    "oldLabel": "Cañete la Real",
                    "newLabel": "Cañete la Real"
                },
                {
                    "value": "La Parrilla",
                    "oldLabel": "La Parrilla",
                    "newLabel": "La Parrilla"
                },
                {
                    "value": "San Enrique de Guadiaro",
                    "oldLabel": "San Enrique de Guadiaro",
                    "newLabel": "San Enrique de Guadiaro"
                }
            ]
          
        }];



    function FeedbackForm() {
        const formHTML = `
        <form action="" class="feedbackBlock">
            <div class="feedbackForm">
                <p class="formHeader">Get help from our expert</p>
                <p class="formDescription">
                    Our expert will help you with property purchase, management, or
                    consulting in Costa Del Sol.
                </p>
                <input
                    type="text"
                    name="name"
                    class="nameInput"
                    placeholder="Your name"
                />
                <input
                    type="tel"
                    name="phone"
                    class="phoneInput"
                    placeholder="Phone number"
                />
                <button type="submit" class="submitButton">Get a consultation</button>
                <p class="hint">
                    When you click “Get a Consultation,” you agree to our Terms of Service
                    and Privacy Policy.
                </p>
            </div>
        </form>
    `;

        const formElement = document.createElement("div");
        formElement.innerHTML = formHTML;

        // Modal element
        const modalElement = document.createElement("div");
        modalElement.className = "notificationModal";
        modalElement.innerText = "Your message was received!";
        modalElement.style.display = "none"; // Hide initially
        document.body.appendChild(modalElement);

        // Handle form submission
        formElement.querySelector("form").addEventListener("submit", (event) => {
            event.preventDefault(); // Prevent page reload

            // Show the modal
            modalElement.style.display = "block";

            // Hide modal after 3 seconds
            setTimeout(() => {
                modalElement.style.display = "none";
            }, 3000);
        });

        return formElement;
    }

    const style = document.createElement("style");
    style.innerHTML = `
    .notificationModal {
        position: fixed;
        top: 60px;
        right: 20px;
        padding: 10px 20px;
        background-color: #d3d3d3;
        color: #222222;
        font-weight: 600;
        border-radius: 12px;
        font-size: 16px;
        z-index: 1000;
        display: none;
    }
`;
    document.head.appendChild(style);

    const Header = () => {
        const location = window.location;

        const filterMobileBurgerMenu = document.getElementById(
            "filterMobileBurgerMenu"
        );

        const headerId = document.getElementById("header");
        headerId.classList.add("headerMainId")

        const header = createElement("header");
        header.className = "header";
        header.style.background = "transparent"

        header.className = "header";
        header.classList.add("header", "mainPage")

        const applyHashStyles = () => {
            if (location.hash === "/") {
                header.style.borderBottom = "none";
            } else {
                header.style.borderBottom = "";
            }
        };

        applyHashStyles();

        window.addEventListener("hashchange", () => {
            applyHashStyles();
        });

        const logoDiv = createElement("a");
        logoDiv.className = "logo";
        logoDiv.href = `${language && "/" + language}/`;
        header.appendChild(logoDiv);

        const nav = createElement("nav");
        nav.className = "nav";
        header.appendChild(nav);

        const navList = createElement("ul");
        navList.className = "navList";
        nav.appendChild(navList);

        const navBtm = createElement("nav");
        navBtm.className = "showNavBottom";
        header.appendChild(navBtm);

        const navListBtm = createElement("ul");
        navListBtm.className = "navListBtm";
        navBtm.appendChild(navListBtm);

        const socialDiv = createElement("div");
        socialDiv.className = "social";
        header.appendChild(socialDiv);

        const fixedMenue = document.createElement("div");
        const fixedBtn = document.createElement("button");
        fixedBtn.className = "button menuButtonWhite";
        fixedBtn.id = "fixedMenue";
        fixedMenue.className = "fixedMenue";
        fixedMenue.innerHTML = `
  
  <a class="button mapButtonWhite" href="${language && "/" + language}/map"></a>
  <button class="button aiButtonWhite" id="simple-ai-btn-home">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none">
      <path d="M9.813 15.904L9 18.75l-.813-2.846a4.5 4.5 0 00-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 003.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 003.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 00-3.09 3.09z" stroke="white" stroke-width="1.5"/>
      <path d="M18.259 8.715L18 9.75l-.259-1.035a3.375 3.375 0 00-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 002.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 002.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 00-2.456 2.456z" stroke="white" stroke-width="1.5"/>
      <path d="M16.894 20.567L16.5 22l-.394-1.433a2.25 2.25 0 00-1.423-1.423L13.25 19l1.433-.394a2.25 2.25 0 001.423-1.423L16.5 15.75l.394 1.433a2.25 2.25 0 001.423 1.423L19.75 19l-1.433.394a2.25 2.25 0 00-1.423 1.423z" stroke="white" stroke-width="1.5"/>
    </svg>
  </button>
  <button class="button callUsButtonWhite" onclick="window.location.href='tel:+34695113333';"></button>
<button class="button filterButtonWhite" id="headerOpenFilterBtn"></button>
`;
        fixedMenue.prepend(fixedBtn);
        header.appendChild(fixedMenue);

        const adaptiveFiltersContainer = document.createElement("div");
        adaptiveFiltersContainer.className = "adapriveFilters__bg";
        adaptiveFiltersContainer.id = "headerAdaptiveFilters";
        adaptiveFiltersContainer.innerHTML = `
        <div class="adapriveFilters properties">
            <div class="adapriveFilters__header">
                <h2 class="adapriveFilters__header-title">Filter</h2>
                <button class="adapriveFilters__header-btnCloseHeader" id="btnCloseHeader">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="20"
                        height="20"
                        viewBox="0 0 20 20"
                        fill="none"
                    >
                        <path
                            d="M14.1667 5.83355L5.83337 14.1668M14.1667 14.1668L5.83337 5.8335"
                            stroke="#313131"
                            stroke-width="1.5"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                        />
                    </svg>
                </button>
            </div>
            <div class="adapriveFilters__main">
                <div>
                    <div class="adapriveFilters__main-buttons">
                        <div class="adapriveFilters__main-btn active" id="offPlanAdaptiveBtnHeader">
                            Off plan
                        </div>
                        <div class="adapriveFilters__main-btn" id="secondaryAdaptiveBtnHeader">
                            Secondary
                        </div>
                    </div>
                    <div class="adapriveFilters__main-dropdowns">
                        <div>
                            <div
                                id="headerLocationFilterMobile"
                                class="filterPropertiesWrapper__dropDown"
                            >
                                <span
                                    class="filterPropertiesWrapper__dropDown_label"
                                    >Locations</span
                                >
                                <div
                                    class="filterPropertiesWrapper__dropDown_header mobile"
                                >
                                    Locations
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="24"
                                        height="24"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                    >
                                        <path
                                            d="M7 10L12 14L17 10"
                                            stroke="#717171"
                                            stroke-width="1.5"
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                        />
                                    </svg>
                                </div>
                                <div
                                    class="filterPropertiesWrapper__dropDown_body big"
                                >
                                    <div
                                        class="filterPropertiesWrapper__dropDown_list"
                                    >
                                        <div
                                            class="filterPropertiesWrapper__dropDownLocationsWrapper"
                                        ></div>
                                    </div>
                                </div>
                            </div>
                            <div
                                class="propertiesSelectedFilter__list"
                                id="selectValueHeaderFilterLocation"
                            ></div>
                        </div>
                        <div>
                            <div
                                id="headerBedroomsFilterMobile"
                                class="filterPropertiesWrapper__dropDown"
                            >
                                <span
                                    class="filterPropertiesWrapper__dropDown_label"
                                    >Bedrooms</span
                                >
                                <div
                                    class="filterPropertiesWrapper__dropDown_header mobile"
                                >
                                    Bedrooms
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="24"
                                        height="24"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                    >
                                        <path
                                            d="M7 10L12 14L17 10"
                                            stroke="#717171"
                                            stroke-width="1.5"
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                        />
                                    </svg>
                                </div>
                                <div
                                    class="filterPropertiesWrapper__dropDown_body big"
                                >
                                    <div
                                        class="filterPropertiesWrapper__dropDown_list"
                                    ></div>
                                </div>
                                <div
                                    class="propertiesSelectedFilter__list"
                                    id="selectValueHeaderBedrooms"
                                ></div>
                            </div>
                        </div>
                        <div>
                            <div
                                id="headerPriceFilterMobile"
                                class="filterPropertiesWrapper__dropDown"
                            >
                                <span
                                    class="filterPropertiesWrapper__dropDown_label"
                                    >Price</span
                                >
                                <div
                                    class="filterPropertiesWrapper__dropDown_header mobile"
                                >
                                    Price
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="24"
                                        height="24"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                    >
                                        <path
                                            d="M7 10L12 14L17 10"
                                            stroke="#717171"
                                            stroke-width="1.5"
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                        />
                                    </svg>
                                </div>
                                <div
                                    class="filterPropertiesWrapper__dropDown_body big"
                                >
                                    <div
                                        class="filterPropertiesWrapper__dropDown_list"
                                    ></div>
                                </div>
                            </div>
                            <div
                                class="propertiesSelectedFilter__list"
                                id="selectValueHeaderPrice"
                            ></div>
                        </div>
                        <div>
                            <div
                                id="headerSizeFilterMobile"
                                class="filterPropertiesWrapper__dropDown"
                            >
                                <span
                                    class="filterPropertiesWrapper__dropDown_label"
                                    >Size</span
                                >
                                <div
                                    class="filterPropertiesWrapper__dropDown_header mobile"
                                >
                                    Size
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="24"
                                        height="24"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                    >
                                        <path
                                            d="M7 10L12 14L17 10"
                                            stroke="#717171"
                                            stroke-width="1.5"
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                        />
                                    </svg>
                                </div>
                                <div
                                    class="filterPropertiesWrapper__dropDown_body big"
                                >
                                    <div
                                        class="filterPropertiesWrapper__dropDown_list"
                                    ></div>
                                </div>
                            </div>
                            <div
                                class="propertiesSelectedFilter__list"
                                id="selectValueHeaderSize"
                            ></div>
                        </div>
                        <div>
                            <div
                                id="headerHandoverFilterMobile"
                                class="filterPropertiesWrapper__dropDown"
                            >
                                <span
                                    class="filterPropertiesWrapper__dropDown_label"
                                    >Handover</span
                                >
                                <div
                                    class="filterPropertiesWrapper__dropDown_header mobile"
                                >
                                    Handover
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="24"
                                        height="24"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                    >
                                        <path
                                            d="M7 10L12 14L17 10"
                                            stroke="#717171"
                                            stroke-width="1.5"
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                        />
                                    </svg>
                                </div>
                                <div
                                    class="filterPropertiesWrapper__dropDown_body big"
                                >
                                    <div
                                        class="filterPropertiesWrapper__dropDown_list"
                                    ></div>
                                </div>
                            </div>
                            <div
                                class="propertiesSelectedFilter__list"
                                id="selectValueHeaderHandover"
                            ></div>
                        </div>
                    </div>
                </div>
                <div class="adapriveFilters__main-buttonsBottom">
                    <button class="adapriveFilters__main-btnClear" id="clearBtnHeaderFilterAdaptive">
                        Clear
                    </button>
                    <button class="adapriveFilters__main-btnConfirm" id="redirectFilterHeader">
                        Confirm
                    </button>
                </div>
            </div>
        </div>
    `;
        header.appendChild(adaptiveFiltersContainer);

        // Функция для управления адаптивным меню (открытие/закрытие)
        const adaptiveMenuHandler = () => {
            // Убедимся, что элементы добавлены в DOM
            const openFilterButton = header.querySelector("#headerOpenFilterBtn");
            const closeButton =
                adaptiveFiltersContainer.querySelector("#btnCloseHeader");

            if (!openFilterButton || !adaptiveFiltersContainer || !closeButton) {
                console.warn(
                    "Some elements are missing, please check the HTML structure."
                );
                return;
            }

            // Prevent duplicate event listeners
            if (openFilterButton.hasAttribute('data-adaptive-handler-attached')) {
                return;
            }
            openFilterButton.setAttribute('data-adaptive-handler-attached', 'true');

            // Открытие меню
            const openAdaptiveMenu = () => {
                if (window.innerWidth < 767) {
                    adaptiveFiltersContainer.classList.add("active");
                    document.body.style.overflow = "hidden";
                }
            };

            // Закрытие меню
            const closeAdaptiveMenu = () => {
                adaptiveFiltersContainer.classList.remove("active");
                document.body.style.overflow = "";
            };

            // Добавление обработчиков событий
            openFilterButton.addEventListener("click", openAdaptiveMenu);
            closeButton.addEventListener("click", closeAdaptiveMenu);

            // Закрытие при клике вне области меню
            adaptiveFiltersContainer.addEventListener("click", (e) => {
                if (e.target === adaptiveFiltersContainer) {
                    closeAdaptiveMenu();
                }
            });

            // Возвращаем функцию закрытия для использования в других частях кода
            return { closeAdaptiveMenu };
        };
        
        // Initialize the adaptive menu handler
        const { closeAdaptiveMenu } = adaptiveMenuHandler();

        const headerMapImport = document.getElementById("headerMapImport");

        function updateHeaderMap() {
            const isMobile = window.innerWidth < 767;
            if (isMobile && headerMapImport) {
                headerMapImport.style.height = "0";
                headerMapImport.style.overflow = "hidden";
            }
            if (!isMobile && headerMapImport) {
                headerMapImport.style.height = "113px";
                headerMapImport.style.overflow = "visible";
            }
        }

        function updateFixedMenueVisibility() {
            const isMobile = window.innerWidth < 767;
            if (isMobile && window.scrollY > 100) {
                fixedMenue.style.opacity = 1;
                fixedMenue.style.visibility = "visible";
            } else {
                fixedMenue.style.opacity = 0;
                fixedMenue.style.visibility = "hidden";
            }
        }

        function closeAllDropdowns() {
            document
                .querySelectorAll(".filterPropertiesWrapper__dropDown_body.active")
                .forEach((body) => body.classList.remove("active"));
            document
                .querySelectorAll(".filterPropertiesWrapper__dropDown_header.active")
                .forEach((header) => header.classList.remove("active"));

            // Сбрасываем стрелку SVG на всех дропдаунах
            document
                .querySelectorAll(".filterPropertiesWrapper__dropDown_header svg path")
                .forEach((svgIcon) => {
                    svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                });
        }

        const headerSetupFilterButtons = () => {
            const offPlanButton = document.getElementById("offPlanAdaptiveBtnHeader");
            const secondaryButton = document.getElementById("secondaryAdaptiveBtnHeader");

            if (!offPlanButton || !secondaryButton) {
                console.warn("Filter buttons are missing, please check the HTML structure.");
                return;
            }

            const updateVisibleFilter = (selectedValue) => {
                const currentUrl = window.location.pathname;
                const urlParams = new URLSearchParams(window.location.search);
                urlParams.set("visible", selectedValue);

                window.history.replaceState({}, "", `${currentUrl}?${urlParams.toString()}`);

                // Update button styles
                if (selectedValue === "Off plan") {
                    offPlanButton.classList.add("active");
                    secondaryButton.classList.remove("active");
                } else if (selectedValue === "Secondary") {
                    secondaryButton.classList.add("active");
                    offPlanButton.classList.remove("active");
                }
            };

            // Добавляем обработчики событий
            offPlanButton.addEventListener("click", () => updateVisibleFilter("Off plan"));
            secondaryButton.addEventListener("click", () => updateVisibleFilter("Secondary"));

            // Устанавливаем начальное состояние кнопок
            const urlParams = new URLSearchParams(window.location.search);
            const initialValue = urlParams.get("visible");

            offPlanButton.classList.remove("active");
            secondaryButton.classList.remove("active");

            // Устанавливаем "Off plan" по умолчанию, если параметр "visible" не указан
            if (initialValue === "Off plan" || !initialValue) {
                offPlanButton.classList.add("active");
            } else if (initialValue === "Secondary") {
                secondaryButton.classList.add("active");
            }
        };
        setTimeout(headerSetupFilterButtons, 0);

        function headerDropDownBeddroomsMobile() {
            const dropdownContainer = document.getElementById(
                "headerBedroomsFilterMobile"
            );

            if (dropdownContainer) {
                const dropdownHeader = dropdownContainer.querySelector(
                    ".filterPropertiesWrapper__dropDown_header"
                );
                const dropdownBody = dropdownContainer.querySelector(
                    ".filterPropertiesWrapper__dropDown_body"
                );
                const dropdownList = dropdownBody.querySelector(
                    ".filterPropertiesWrapper__dropDown_list"
                );
                let bedroomsQuery = [];

                for (let i = 1; i <= 8; i++) {
                    const item = document.createElement("div");
                    item.className = "filterPropertiesWrapper__dropDown_item";
                    item.innerText = `${i} Bedroom`;

                    const checkBox = document.createElement("div");
                    checkBox.className = "filterPropertiesWrapper__customCheckBox";

                    checkBox.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="10px" height="10px">
                    <path d="M 26.980469 5.9902344 A 1.0001 1.0001 0 0 0 26.292969 6.2929688 L 11 21.585938 L 4.7070312 15.292969 A 1.0001 1.0001 0 1 0 3.2929688 16.707031 L 10.292969 23.707031 A 1.0001 1.0001 0 0 0 11.707031 23.707031 L 27.707031 7.7070312 A 1.0001 1.0001 0 0 0 26.980469 5.9902344 z" fill="white"/>
                </svg>
            `;

                    item.appendChild(checkBox);
                    dropdownList.appendChild(item);

                    item.addEventListener("click", function (e) {
                        e.stopPropagation();

                        if (bedroomsQuery.includes(i)) {
                            bedroomsQuery = bedroomsQuery.filter(
                                (bedroom) => bedroom !== i
                            );
                            checkBox.classList.remove("active");
                        } else {
                            bedroomsQuery.push(i);
                            checkBox.classList.add("active");
                        }

                        updateQueryParameter(
                            "bedrooms",
                            bedroomsQuery.length > 0
                                ? bedroomsQuery.join(",")
                                : null
                        );
                    });
                }

                function toggleMenu() {
                    dropdownBody.classList.toggle("active");
                    dropdownHeader.classList.toggle("active");

                    const svgIcon = dropdownHeader.querySelector("svg path");
                    if (dropdownBody.classList.contains("active")) {
                        svgIcon.setAttribute("d", "M7 14L12 10L17 14");
                    } else {
                        svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                    }
                }

                dropdownHeader.addEventListener("click", function (e) {
                    e.stopPropagation();

                    if (dropdownBody.classList.contains("active")) {
                        closeMenu();
                    } else {
                        toggleMenu();
                    }
                });

                function closeMenu() {
                    dropdownBody.classList.remove("active");
                    dropdownHeader.classList.remove("active");

                    const svgIcon = dropdownHeader.querySelector("svg path");
                    svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                }

                document.addEventListener("click", function (event) {
                    const isClickInside = dropdownContainer.contains(event.target);

                    if (!isClickInside) {
                        dropdownBody.classList.remove("active");

                        const svgIcon = dropdownHeader.querySelector("svg path");
                        svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                    }
                });

                function syncCheckboxesWithQuery() {
                    const params = new URLSearchParams(window.location.search);
                    const bedroomsParam = params.get("bedrooms");

                    if (bedroomsParam) {
                        bedroomsQuery = bedroomsParam.split(",").map(Number);
                    } else {
                        bedroomsQuery = [];
                    }

                    dropdownList
                        .querySelectorAll(".filterPropertiesWrapper__dropDown_item")
                        .forEach((item, index) => {
                            const checkBox = item.querySelector(
                                ".filterPropertiesWrapper__customCheckBox"
                            );
                            if (bedroomsQuery.includes(index + 1)) {
                                checkBox.classList.add("active");
                            } else {
                                checkBox.classList.remove("active");
                            }
                        });
                }

                syncCheckboxesWithQuery();

                window.addEventListener("popstate", syncCheckboxesWithQuery);
            }

            function updateQueryParameter(key, value) {
                const queryString = window.location.search.substring(1);
                const params = new URLSearchParams(queryString);

                if (value) {
                    params.set(key, value);
                } else {
                    params.delete(key);
                }

                const newQueryString = `?${params.toString()}`;
                history.replaceState(null, "", `${window.location.pathname}${newQueryString}`);
            }
        }
        setTimeout(headerDropDownBeddroomsMobile, 0);

        function headerDropDownPriceMobile() {
            const dropdownContainer = document.querySelector("#headerPriceFilterMobile");
            const dropdownHeader = dropdownContainer.querySelector(
                ".filterPropertiesWrapper__dropDown_header"
            );
            const dropdownBody = dropdownContainer.querySelector(
                ".filterPropertiesWrapper__dropDown_body"
            );
            const dropdownList = dropdownBody.querySelector(
                ".filterPropertiesWrapper__dropDown_list"
            );

            let priceMin = null;
            let priceMax = null;

            const priceValues = [
                '€ 150.000',
                '€ 200.000',
                '€ 250.000',
                '€ 300.000',
                '€ 350.000',
                '€ 400.000',
                '€ 450.000',
                '€ 500.000',
                '€ 550.000',
                '€ 600.000',
                '€ 650.000',
                '€ 700.000',
                '€ 750.000',
                '€ 800.000',
                '€ 850.000',
                '€ 900.000',
                '€ 950.000',
                '€ 1.000.000',
                '€ 1.250.000',
                '€ 1.500.000',
                '€ 1.750.000',
                '€ 2.000.000',
                '€ 2.500.000',
                '€ 3.000.000',
                '€ 3.500.000',
                '€ 4.000.000',
                '€ 5.000.000',
                '€ 10.000.000',
                '€ 15.000.000',
                '€ 20.000.000',
            ];

            function renderPriceOptions() {
                priceValues.forEach((price) => {
                    const priceItem = document.createElement("div");
                    priceItem.className = "filterPropertiesWrapper__dropDown_item";
                    priceItem.textContent = price;

                    const checkBox = document.createElement("div");
                    checkBox.className = "filterPropertiesWrapper__customCheckBox";
                    checkBox.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="10px" height="10px">
                <path d="M 26.980469 5.9902344 A 1.0001 1.0001 0 0 0 26.292969 6.2929688 L 11 21.585938 L 4.7070312 15.292969 A 1.0001 1.0001 0 1 0 3.2929688 16.707031 L 10.292969 23.707031 A 1.0001 1.0001 0 0 0 11.707031 23.707031 L 27.707031 7.7070312 A 1.0001 1.0001 0 0 0 26.980469 5.9902344 z" fill="white"/>
            </svg>
        `;
                    priceItem.appendChild(checkBox);
                    dropdownList.appendChild(priceItem);

                    priceItem.addEventListener("click", function (e) {
                        e.stopPropagation();
                        handlePriceSelection(priceItem.textContent.trim());
                    });
                });
            }

            renderPriceOptions();

            function handlePriceSelection(priceText) {
                const priceValue = parsePriceToNumber(priceText);

                if (priceMin === null) {
                    priceMin = priceValue;
                    priceMax = null;
                } else if (priceValue > priceMin && priceMax === null) {
                    priceMax = priceValue;
                } else if (priceValue === priceMin) {
                    priceMin = null;
                    priceMax = null;
                } else if (priceValue === priceMax) {
                    priceMax = null;
                } else if (priceValue < priceMin) {
                    priceMin = priceValue;
                    priceMax = null;
                } else if (priceValue > priceMax) {
                    priceMax = priceValue;
                }

                updatePricesStyles();

                updateQueryParameter("minPrice", priceMin !== null ? priceMin.toString() : null);
                updateQueryParameter("maxPrice", priceMax !== null ? priceMax.toString() : null);
            }

            function updatePricesStyles() {
                const priceElements = dropdownList.querySelectorAll(
                    ".filterPropertiesWrapper__dropDown_item"
                );

                priceElements.forEach((item) => {
                    const priceValue = parsePriceToNumber(item.textContent.trim());
                    const checkBox = item.querySelector(
                        ".filterPropertiesWrapper__customCheckBox"
                    );

                    checkBox.classList.remove("active");
                    item.style.opacity = "1"; // Устанавливаем начальное значение opacity для всех элементов

                    if (priceMin !== null && priceValue === priceMin) {
                        checkBox.classList.add("active");
                    } else if (priceMax !== null && priceValue === priceMax) {
                        checkBox.classList.add("active");
                    } else if (
                        (priceMin !== null && priceValue < priceMin) ||
                        (priceMax !== null && priceValue > priceMax)
                    ) {
                        // Если значение меньше минимального или больше максимального, делаем его прозрачным
                        item.style.opacity = "0.5";
                    }
                });
            }

            function parsePriceToNumber(priceText) {
                return parseInt(priceText.replace(/[€,.+]/g, ""), 10);
            }

            function updateQueryParameter(key, value) {
                const queryString = window.location.search.substring(1);
                const params = new URLSearchParams(queryString);

                if (value) {
                    params.set(key, value);
                } else {
                    params.delete(key);
                }

                const newQueryString = `?${params.toString()}`;
                history.replaceState(null, "", `${window.location.pathname}${newQueryString}`);
            }

            function syncPricesWithQuery() {
                const urlParams = new URLSearchParams(window.location.search);

                priceMin = urlParams.get("minPrice")
                    ? parseInt(urlParams.get("minPrice"), 10)
                    : null;
                priceMax = urlParams.get("maxPrice")
                    ? parseInt(urlParams.get("maxPrice"), 10)
                    : null;

                updatePricesStyles();
            }

            syncPricesWithQuery();

            window.addEventListener("popstate", syncPricesWithQuery);

            if (dropdownHeader && dropdownBody) {
                function toggleMenu() {
                    dropdownBody.classList.toggle("active");
                    dropdownHeader.classList.toggle("active");

                    const svgIcon = dropdownHeader.querySelector("svg path");
                    if (dropdownBody.classList.contains("active")) {
                        svgIcon.setAttribute("d", "M7 14L12 10L17 14");
                    } else {
                        svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                    }
                }

                function closeMenu() {
                    dropdownBody.classList.remove("active");
                    dropdownHeader.classList.remove("active");

                    const svgIcon = dropdownHeader.querySelector("svg path");
                    svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                }

                dropdownHeader.addEventListener("click", function (e) {
                    e.stopPropagation();

                    if (dropdownBody.classList.contains("active")) {
                        closeMenu();
                    } else {
                        toggleMenu();
                    }
                });

                document.addEventListener("click", function (event) {
                    if (
                        !dropdownContainer.contains(event.target) &&
                        !dropdownHeader.contains(event.target)
                    ) {
                        closeMenu();
                    }
                });
            } else {
                console.warn("Menu elements (dropdownHeader or dropdownBody) not found!");
            }
        }
        setTimeout(headerDropDownPriceMobile, 0);

        function headerDropDownSizeMobile() {
            const dropdownContainer = document.querySelector("#headerSizeFilterMobile");
            const dropdownHeader = dropdownContainer.querySelector(
                ".filterPropertiesWrapper__dropDown_header"
            );
            const dropdownBody = dropdownContainer.querySelector(
                ".filterPropertiesWrapper__dropDown_body"
            );
            const dropdownList = dropdownBody.querySelector(
                ".filterPropertiesWrapper__dropDown_list"
            );

            let sizeMin = null;
            let sizeMax = null;

            const sizeValues = [
                '20 sq.m',
                '30 sq.m',
                '40 sq.m',
                '50 sq.m',
                '60 sq.m',
                '70 sq.m',
                '80 sq.m',
                '90 sq.m',
                '100 sq.m',
                '120 sq.m',
                '140 sq.m',
                '160 sq.m',
                '180 sq.m',
                '200 sq.m',
                '220 sq.m',
                '250 sq.m',
                '270 sq.m',
                '300 sq.m',
                '350 sq.m',
                '400 sq.m',
                '450 sq.m',
                '500 sq.m',
                '550 sq.m',
                '600 sq.m',
                '700 sq.m',
                '800 sq.m',
                '900 sq.m',
                '1.000 sq.m',
                '1.500 sq.m',
                '2.000 sq.m',
                '3.000 sq.m',
            ];

            function renderSizeOptions() {
                sizeValues.forEach((size) => {
                    const sizeItem = document.createElement("div");
                    sizeItem.className = "filterPropertiesWrapper__dropDown_item";
                    sizeItem.textContent = size;

                    const checkBox = document.createElement("div");
                    checkBox.className = "filterPropertiesWrapper__customCheckBox";
                    checkBox.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="10px" height="10px">
                    <path d="M 26.980469 5.9902344 A 1.0001 1.0001 0 0 0 26.292969 6.2929688 L 11 21.585938 L 4.7070312 15.292969 A 1.0001 1.0001 0 1 0 3.2929688 16.707031 L 10.292969 23.707031 A 1.0001 1.0001 0 0 0 11.707031 23.707031 L 27.707031 7.7070312 A 1.0001 1.0001 0 0 0 26.980469 5.9902344 z" fill="white"/>
                </svg>
            `;
                    sizeItem.appendChild(checkBox);
                    dropdownList.appendChild(sizeItem);

                    sizeItem.addEventListener("click", function (e) {
                        e.stopPropagation();
                        handleSizeSelection(sizeItem.textContent.trim());
                    });
                });
            }

            renderSizeOptions();

            function handleSizeSelection(sizeText) {
                const sizeValue = parseSizeToNumber(sizeText);

                if (sizeMin === null) {
                    sizeMin = sizeValue;
                    sizeMax = null;
                } else if (sizeValue > sizeMin && sizeMax === null) {
                    sizeMax = sizeValue;
                } else if (sizeValue === sizeMin) {
                    sizeMin = null;
                    sizeMax = null;
                } else if (sizeValue === sizeMax) {
                    sizeMax = null;
                } else if (sizeValue < sizeMin) {
                    sizeMin = sizeValue;
                    sizeMax = null;
                } else if (sizeValue > sizeMax) {
                    sizeMax = sizeValue;
                }

                updateSizesStyles();

                updateQueryParameter("minSize", sizeMin !== null ? sizeMin.toString() : null);
                updateQueryParameter("maxSize", sizeMax !== null ? sizeMax.toString() : null);
            }

            function updateSizesStyles() {
                const sizeElements = dropdownList.querySelectorAll(
                    ".filterPropertiesWrapper__dropDown_item"
                );

                sizeElements.forEach((item) => {
                    const sizeValue = parseSizeToNumber(item.textContent.trim());
                    const checkBox = item.querySelector(
                        ".filterPropertiesWrapper__customCheckBox"
                    );

                    checkBox.classList.remove("active");
                    item.style.opacity = "1"; // Устанавливаем начальное значение opacity для всех элементов

                    if (sizeMin !== null && sizeValue === sizeMin) {
                        checkBox.classList.add("active");
                    } else if (sizeMax !== null && sizeValue === sizeMax) {
                        checkBox.classList.add("active");
                    } else if (
                        (sizeMin !== null && sizeValue < sizeMin) ||
                        (sizeMax !== null && sizeValue > sizeMax)
                    ) {
                        // Если значение меньше минимального или больше максимального, делаем его прозрачным
                        item.style.opacity = "0.5";
                    }
                });
            }

            function parseSizeToNumber(sizeText) {
                return parseInt(
                    sizeText.replace(/[m².,+]/g, "").replace(/\./g, ""),
                    10
                );
            }

            function updateQueryParameter(key, value) {
                const queryString = window.location.search.substring(1);
                const params = new URLSearchParams(queryString);

                if (value) {
                    params.set(key, value);
                } else {
                    params.delete(key);
                }

                const newQueryString = `?${params.toString()}`;
                history.replaceState(null, "", `${window.location.pathname}${newQueryString}`);
            }

            function syncSizesWithQuery() {
                const urlParams = new URLSearchParams(window.location.search);

                sizeMin = urlParams.get("minSize")
                    ? parseInt(urlParams.get("minSize"), 10)
                    : null;
                sizeMax = urlParams.get("maxSize")
                    ? parseInt(urlParams.get("maxSize"), 10)
                    : null;

                updateSizesStyles();
            }

            syncSizesWithQuery();

            window.addEventListener("popstate", syncSizesWithQuery);

            if (dropdownHeader && dropdownBody) {
                function toggleMenu() {
                    dropdownBody.classList.toggle("active");
                    dropdownHeader.classList.toggle("active");

                    const svgIcon = dropdownHeader.querySelector("svg path");
                    if (dropdownBody.classList.contains("active")) {
                        svgIcon.setAttribute("d", "M7 14L12 10L17 14");
                    } else {
                        svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                    }
                }

                function closeMenu() {
                    dropdownBody.classList.remove("active");
                    dropdownHeader.classList.remove("active");

                    const svgIcon = dropdownHeader.querySelector("svg path");
                    svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                }

                dropdownHeader.addEventListener("click", function (e) {
                    e.stopPropagation();

                    if (dropdownBody.classList.contains("active")) {
                        closeMenu();
                    } else {
                        toggleMenu();
                    }
                });

                document.addEventListener("click", function (event) {
                    if (
                        !dropdownContainer.contains(event.target) &&
                        !dropdownHeader.contains(event.target)
                    ) {
                        closeMenu();
                    }
                });
            } else {
                console.warn("Menu elements (dropdownHeader or dropdownBody) not found!");
            }
        }
        setTimeout(headerDropDownSizeMobile, 0);

        function headerDropDownHandoverMobile() {
            const dropdownContainer = document.querySelector("#headerHandoverFilterMobile");
            const dropdownHeader = dropdownContainer.querySelector(
                ".filterPropertiesWrapper__dropDown_header"
            );
            const dropdownBody = dropdownContainer.querySelector(
                ".filterPropertiesWrapper__dropDown_body"
            );
            const dropdownList = dropdownBody.querySelector(
                ".filterPropertiesWrapper__dropDown_list"
            );

            let handoverMin = null;
            let handoverMax = null;

            const handoverValues = [
                "Q1 2024", "Q2 2024", "Q3 2024", "Q4 2024",
                "Q1 2025", "Q2 2025", "Q3 2025", "Q4 2025",
                "Q1 2026", "Q2 2026", "Q3 2026", "Q4 2026"
            ];

            function renderHandoverOptions() {
                handoverValues.forEach((handover) => {
                    const handoverItem = document.createElement("div");
                    handoverItem.className = "filterPropertiesWrapper__dropDown_item";
                    handoverItem.textContent = handover;

                    const checkBox = document.createElement("div");
                    checkBox.className = "filterPropertiesWrapper__customCheckBox";
                    checkBox.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="10px" height="10px">
                    <path d="M 26.980469 5.9902344 A 1.0001 1.0001 0 0 0 26.292969 6.2929688 L 11 21.585938 L 4.7070312 15.292969 A 1.0001 1.0001 0 1 0 3.2929688 16.707031 L 10.292969 23.707031 A 1.0001 1.0001 0 0 0 11.707031 23.707031 L 27.707031 7.7070312 A 1.0001 1.0001 0 0 0 26.980469 5.9902344 z" fill="white"/>
                </svg>
            `;
                    handoverItem.appendChild(checkBox);
                    dropdownList.appendChild(handoverItem);

                    handoverItem.addEventListener("click", function (e) {
                        e.stopPropagation();
                        handleHandoverSelection(handoverItem.textContent.trim());
                    });
                });
            }

            renderHandoverOptions();

            function handleHandoverSelection(handoverText) {
                const dateValue = handoverText;

                if (handoverMin === null) {
                    handoverMin = dateValue;
                    handoverMax = null;
                } else if (compareDates(dateValue, handoverMin) > 0 && handoverMax === null) {
                    handoverMax = dateValue;
                } else if (dateValue === handoverMin) {
                    handoverMin = null;
                    handoverMax = null;
                } else if (dateValue === handoverMax) {
                    handoverMax = null;
                } else if (compareDates(dateValue, handoverMin) < 0) {
                    handoverMin = dateValue;
                    handoverMax = null;
                } else if (compareDates(dateValue, handoverMax) > 0) {
                    handoverMax = dateValue;
                }

                updateHandoversStyles();

                updateQueryParameter(
                    "handoverMin",
                    handoverMin ? convertToISODate(handoverMin) : null
                );
                updateQueryParameter(
                    "handoverMax",
                    handoverMax ? convertToISODate(handoverMax) : null
                );
            }

            function updateHandoversStyles() {
                const handoverElements = dropdownList.querySelectorAll(
                    ".filterPropertiesWrapper__dropDown_item"
                );

                handoverElements.forEach((item) => {
                    const dateValue = item.textContent.trim();
                    const checkBox = item.querySelector(
                        ".filterPropertiesWrapper__customCheckBox"
                    );

                    checkBox.classList.remove("active");
                    item.style.opacity = "1"; // Устанавливаем начальное значение opacity для всех элементов

                    if (handoverMin !== null && dateValue === handoverMin) {
                        checkBox.classList.add("active");
                    } else if (handoverMax !== null && dateValue === handoverMax) {
                        checkBox.classList.add("active");
                    } else if (
                        (handoverMin !== null && compareDates(dateValue, handoverMin) < 0) ||
                        (handoverMax !== null && compareDates(dateValue, handoverMax) > 0)
                    ) {
                        // Если значение меньше минимального или больше максимального, делаем его прозрачным
                        item.style.opacity = "0.5";
                    }
                });
            }

            function convertToISODate(handoverText) {
                const [quarter, year] = handoverText.split(" ");
                const month = {
                    Q1: "01",
                    Q2: "04",
                    Q3: "07",
                    Q4: "10",
                }[quarter];
                return `${year}-${month}-01`;
            }

            function compareDates(dateText1, dateText2) {
                const [quarter1, year1] = dateText1.split(" ");
                const [quarter2, year2] = dateText2.split(" ");
                const month1 = { Q1: "01", Q2: "04", Q3: "07", Q4: "10" }[quarter1];
                const month2 = { Q1: "01", Q2: "04", Q3: "07", Q4: "10" }[quarter2];

                const date1 = new Date(`${year1}-${month1}-01`);
                const date2 = new Date(`${year2}-${month2}-01`);

                if (date1 < date2) return -1;
                if (date1 > date2) return 1;
                return 0;
            }

            function updateQueryParameter(key, value) {
                const queryString = window.location.search.substring(1);
                const params = new URLSearchParams(queryString);

                if (value) {
                    params.set(key, value);
                } else {
                    params.delete(key);
                }

                const newQueryString = `?${params.toString()}`;
                history.replaceState(null, "", `${window.location.pathname}${newQueryString}`);
            }

            function syncHandoversWithQuery() {
                const urlParams = new URLSearchParams(window.location.search);

                handoverMin = urlParams.get("handoverMin")
                    ? convertFromISODate(urlParams.get("handoverMin"))
                    : null;
                handoverMax = urlParams.get("handoverMax")
                    ? convertFromISODate(urlParams.get("handoverMax"))
                    : null;

                updateHandoversStyles();
            }

            function convertFromISODate(isoDate) {
                const [year, month] = isoDate.split("-");
                const quarter = {
                    "01": "Q1",
                    "04": "Q2",
                    "07": "Q3",
                    10: "Q4",
                }[month];
                return `${quarter} ${year}`;
            }

            syncHandoversWithQuery();

            window.addEventListener("popstate", syncHandoversWithQuery);

            if (dropdownHeader && dropdownBody) {
                function toggleMenu() {
                    dropdownBody.classList.toggle("active");
                    dropdownHeader.classList.toggle("active");

                    const svgIcon = dropdownHeader.querySelector("svg path");
                    if (dropdownBody.classList.contains("active")) {
                        svgIcon.setAttribute("d", "M7 14L12 10L17 14");
                    } else {
                        svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                    }
                }

                function closeMenu() {
                    dropdownBody.classList.remove("active");
                    dropdownHeader.classList.remove("active");

                    const svgIcon = dropdownHeader.querySelector("svg path");
                    svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                }

                dropdownHeader.addEventListener("click", function (e) {
                    e.stopPropagation();

                    if (dropdownBody.classList.contains("active")) {
                        closeMenu();
                    } else {
                        toggleMenu();
                    }
                });

                document.addEventListener("click", function (event) {
                    if (
                        !dropdownContainer.contains(event.target) &&
                        !dropdownHeader.contains(event.target)
                    ) {
                        closeMenu();
                    }
                });
            } else {
                console.warn("Menu elements (dropdownHeader or dropdownBody) not found!");
            }
        }
        setTimeout(headerDropDownHandoverMobile, 0);

        function headerDropDownLocationMobile() {
            const dropdownContainer = document.querySelector("#headerLocationFilterMobile");
            const dropdownHeader = dropdownContainer.querySelector(
                ".filterPropertiesWrapper__dropDown_header"
            );
            const dropdownBody = dropdownContainer.querySelector(
                ".filterPropertiesWrapper__dropDown_body"
            );
            const dropdownList = dropdownBody.querySelector(
                ".filterPropertiesWrapper__dropDown_list"
            );

            let selectedLocations = new Set();

            function renderLocationOptions() {
                areasData.forEach((area) => {
                    const areaItem = document.createElement("div");
                    areaItem.className = "filterPropertiesWrapper__dropDown_item";

                    // Создаем обертку для основного названия территории
                    const mainListSelectedWrapper = document.createElement("div");
                    mainListSelectedWrapper.className = "mainListSelectedWrapper";

                    // Создаем div для отображения выбранных субтерриторий
                    const mainListSelected = document.createElement("div");
                    mainListSelected.className = "mainListSelected";

                    // Вставляем текст названия территории
                    mainListSelectedWrapper.appendChild(mainListSelected);
                    mainListSelectedWrapper.append(area.label);

                    // Добавляем обертку с названием в основной элемент
                    areaItem.appendChild(mainListSelectedWrapper);

                    // Создаем иконку стрелки и добавляем её
                    const icon = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                    icon.setAttribute("width", "24");
                    icon.setAttribute("height", "24");
                    icon.setAttribute("viewBox", "0 0 24 24");
                    icon.setAttribute("fill", "none");
                    icon.innerHTML = `<path d="M7 10L12 14L17 10" stroke="#717171" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>`;
                    areaItem.appendChild(icon);

                    // Создание списка подтерриторий
                    const subAreaList = document.createElement("div");
                    subAreaList.className =
                        "filterPropertiesWrapper__dropDownLocationsWrapper_list";
                    subAreaList.style.display = "none"; // Скрываем подтерритории изначально

                    // Создаем кнопку "All"
                    const selectAllItem = document.createElement("div");
                    selectAllItem.className = "filterPropertiesWrapper__dropDown_item selectAll";
                    selectAllItem.innerHTML = `All<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="10px" height="10px"></svg>`;
                    const selectAllCheckBox = document.createElement("div");
                    selectAllCheckBox.className = "filterPropertiesWrapper__customCheckBox";
                    selectAllItem.appendChild(selectAllCheckBox);

                    selectAllItem.addEventListener("click", function (e) {
                        e.stopPropagation();
                        handleSelectAll(area.subAreas);
                    });

                    subAreaList.appendChild(selectAllItem);

                    // Добавляем подтерритории
                    area.subAreas.forEach((subArea) => {
                        const subAreaItem = document.createElement("div");
                        subAreaItem.className =
                            "filterPropertiesWrapper__dropDown_item location";
                        subAreaItem.textContent = subArea.newLabel;

                        const subAreaCheckBox = document.createElement("div");
                        subAreaCheckBox.className =
                            "filterPropertiesWrapper__customCheckBox";

                        subAreaItem.appendChild(subAreaCheckBox); // Добавляем чекбокс

                        subAreaItem.addEventListener("click", function (e) {
                            e.stopPropagation();
                            handleSubAreaSelection(subArea.newLabel, area.subAreas);
                        });

                        subAreaList.appendChild(subAreaItem);
                    });

                    // Добавляем обработчик нажатия для главной территории
                    areaItem.addEventListener("click", function (e) {
                        e.stopPropagation();
                        const isActive = subAreaList.style.display === "block";
                        subAreaList.style.display = isActive ? "none" : "block";
                        // Устанавливаем класс active у подтерриторий
                        subAreaList.classList.toggle("active", !isActive);
                        areaItem.classList.toggle("active", !isActive); // Устанавливаем класс active у главной территории
                    });

                    dropdownList.appendChild(areaItem);
                    dropdownList.appendChild(subAreaList);
                });

                // После рендеринга вызываем обновление стилей, чтобы правильно отобразить состояние чекбокса "All"
                updateLocationsStyles();
            }


            renderLocationOptions();

            function handleSelectAll(subAreas) {
                const allSelected = subAreas.every(subArea => selectedLocations.has(subArea.newLabel));
                if (allSelected) {
                    subAreas.forEach(subArea => selectedLocations.delete(subArea.newLabel));
                } else {
                    subAreas.forEach(subArea => selectedLocations.add(subArea.newLabel));
                }
                updateLocationsStyles();
                updateQueryParameter(
                    "subAreas",
                    selectedLocations.size > 0
                        ? Array.from(selectedLocations).join(",")
                        : null
                );
            }

            function handleSubAreaSelection(subAreaValue, subAreas) {
                if (selectedLocations.has(subAreaValue)) {
                    selectedLocations.delete(subAreaValue);
                } else {
                    selectedLocations.add(subAreaValue);
                }
                updateLocationsStyles(subAreas);
                updateQueryParameter(
                    "subAreas",
                    selectedLocations.size > 0
                        ? Array.from(selectedLocations).join(",")
                        : null
                );
            }

            function updateLocationsStyles() {
                // Обновляем состояния чекбоксов для подтерриторий
                dropdownList.querySelectorAll(".filterPropertiesWrapper__dropDown_item.location").forEach((item) => {
                    const subAreaValue = item.textContent.trim();
                    const checkBox = item.querySelector(".filterPropertiesWrapper__customCheckBox");

                    if (selectedLocations.has(subAreaValue)) {
                        checkBox.classList.add("active");
                        checkBox.innerHTML = `
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="10px" height="10px">
<path d="M 26.980469 5.9902344 A 1.0001 1.0001 0 0 0 26.292969 6.2929688 L 11 21.585938 L 4.7070312 15.292969 A 1.0001 1.0001 0 1 0 3.2929688 16.707031 L 10.292969 23.707031 A 1.0001 1.0001 0 0 0 11.707031 23.707031 L 27.707031 7.7070312 A 1.0001 1.0001 0 0 0 26.980469 5.9902344 z" fill="white"/>
</svg>`;
                    } else {
                        checkBox.classList.remove("active");
                        checkBox.innerHTML = ""; // Удаляем SVG, если не выбрано
                    }
                });

                // Обновляем счетчик выбранных подтерриторий и состояние mainListSelected
                dropdownList.querySelectorAll(".mainListSelectedWrapper").forEach((mainListWrapper) => {
                    const areaLabel = mainListWrapper.textContent.trim().replace(/[0-9]+/g, '').trim(); // Убираем число, если оно добавляется автоматически
                    const area = areasData.find(area => area.label === areaLabel);

                    if (area) {
                        const selectedSubAreasCount = area.subAreas.filter(subArea => selectedLocations.has(subArea.value)).length;
                        const mainListSelected = mainListWrapper.querySelector(".mainListSelected");

                        if (selectedSubAreasCount > 0) {
                            mainListSelected.classList.add("active");
                            mainListSelected.textContent = selectedSubAreasCount;
                        } else {
                            mainListSelected.classList.remove("active");
                            mainListSelected.textContent = ""; // Очищаем текст, если ничего не выбрано
                        }
                    }
                });

                // Обновляем состояние кнопки "All" для каждой области
                dropdownList.querySelectorAll(".filterPropertiesWrapper__dropDown_item.selectAll").forEach((selectAllItem) => {
                    const checkBox = selectAllItem.querySelector(".filterPropertiesWrapper__customCheckBox");

                    // Обнаружение родительской области более точно
                    const areaWrapper = selectAllItem.closest('.filterPropertiesWrapper__dropDownLocationsWrapper_list').previousElementSibling;
                    const areaLabel = areaWrapper ? areaWrapper.textContent.trim().replace(/[0-9]+/g, '').trim() : '';
                    const area = areasData.find(area => area.label === areaLabel);

                    if (area) {
                        const allSelected = area.subAreas.every(subArea => selectedLocations.has(subArea.value));

                        if (allSelected && area.subAreas.length > 0) {
                            checkBox.classList.add("active");
                            checkBox.innerHTML = `
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="10px" height="10px">
<path d="M 26.980469 5.9902344 A 1.0001 1.0001 0 0 0 26.292969 6.2929688 L 11 21.585938 L 4.7070312 15.292969 A 1.0001 1.0001 0 1 0 3.2929688 16.707031 L 10.292969 23.707031 A 1.0001 1.0001 0 0 0 11.707031 23.707031 L 27.707031 7.7070312 A 1.0001 1.0001 0 0 0 26.980469 5.9902344 z" fill="white"/>
</svg>`;
                        } else {
                            checkBox.classList.remove("active");
                            checkBox.innerHTML = "";
                        }
                    }
                });
            }

            function updateQueryParameter(key, value) {
                const queryString = window.location.search.substring(1);
                const params = new URLSearchParams(queryString);

                if (value) {
                    params.set(key, value);
                } else {
                    params.delete(key);
                }

                const newQueryString = `?${params.toString()}`;
                history.replaceState(null, "", `${window.location.pathname}${newQueryString}`);
            }

            function syncLocationsWithQuery() {
                const urlParams = new URLSearchParams(window.location.search);
                const subAreasParam = urlParams.get("subAreas");

                if (subAreasParam) {
                    selectedLocations = new Set(subAreasParam.split(","));
                } else {
                    selectedLocations.clear();
                }

                updateLocationsStyles();
            }

            syncLocationsWithQuery();

            window.addEventListener("popstate", syncLocationsWithQuery);

            dropdownHeader.addEventListener("click", function (e) {
                e.stopPropagation();

                if (dropdownBody.classList.contains("active")) {
                    closeMenu();
                } else {
                    closeAllDropdowns();
                    toggleMenu();
                }
            });

            document.addEventListener("click", function (event) {
                if (!dropdownContainer.contains(event.target)) {
                    closeMenu();
                }
            });

            function toggleMenu() {
                dropdownBody.classList.toggle("active");
                dropdownHeader.classList.toggle("active");

                const svgPath = dropdownHeader.querySelector("svg path");
                if (dropdownBody.classList.contains("active")) {
                    svgPath.setAttribute("d", "M7 14L12 10L17 14");
                } else {
                    svgPath.setAttribute("d", "M7 10L12 14L17 10");
                }
            }

            function closeMenu() {
                dropdownBody.classList.remove("active");
                dropdownHeader.classList.remove("active");

                const svgPath = dropdownHeader.querySelector("svg path");
                svgPath.setAttribute("d", "M7 10L12 14L17 10");
            }

            function closeAllDropdowns() {
                document
                    .querySelectorAll(".filterPropertiesWrapper__dropDown_body.active")
                    .forEach((body) => body.classList.remove("active"));
                document
                    .querySelectorAll(".filterPropertiesWrapper__dropDown_header.active")
                    .forEach((header) => header.classList.remove("active"));

                document
                    .querySelectorAll(".filterPropertiesWrapper__dropDown_header svg path")
                    .forEach((svgIcon) => {
                        svgIcon.setAttribute("d", "M7 10L12 14L17 10");
                    });
            }
        }
        setTimeout(headerDropDownLocationMobile, 0);

        function clearHeaderFilters() {
            const clearBtn = document.querySelector("#clearBtnHeaderFilterAdaptive");

            if (!clearBtn) {
                console.warn("Clear button not found!");
                return;
            }

            // Prevent duplicate event listeners
            if (clearBtn.hasAttribute('data-clear-handler-attached')) {
                return;
            }
            clearBtn.setAttribute('data-clear-handler-attached', 'true');

            clearBtn.addEventListener("click", function () {
                const currentUrl = window.location.pathname;
                const urlParams = new URLSearchParams(window.location.search);

                // Получаем значения page и visible
                const page = urlParams.get("page");
                const visible = urlParams.get("visible");

                // Создаем новый объект URLSearchParams и устанавливаем только параметры page и visible
                const newUrlParams = new URLSearchParams();
                if (page) {
                    newUrlParams.set("page", page);
                }
                if (visible) {
                    newUrlParams.set("visible", visible);
                }

                // Обновляем URL без использования хеша
                window.history.replaceState({}, "", `${currentUrl}?${newUrlParams.toString()}`);

                // Сбрасываем стили и значения фильтров
                document.querySelectorAll(".filtersMap__select-body p").forEach((item) => {
                    item.style.opacity = "1";
                });

                // Удаление всех активных чекбоксов
                document
                    .querySelectorAll(".filterPropertiesWrapper__customCheckBox.active")
                    .forEach((checkBox) => {
                        checkBox.classList.remove("active");
                    });

                const nameInput = document.querySelector("#offPlanFilterInputName");
                if (nameInput) {
                    nameInput.value = "";
                }

                // Сброс значений фильтров
                window.minPrice = null;
                window.maxPrice = null;
                window.minSize = null;
                window.maxSize = null;
                window.handoverMin = null;
                window.handoverMax = null;
                window.selectedBedrooms = null;
                window.name = null;
                window.sort = null;

                renderValueFilterFromQueryHeader();
            });
        }
        setTimeout(clearHeaderFilters, 0);

        function renderValueFilterFromQueryHeader() {
            // IDs для отображения фильтров
            const bedroomsContainer = document.getElementById("selectValueHeaderBedrooms");
            const priceContainer = document.getElementById("selectValueHeaderPrice");
            const sizeContainer = document.getElementById("selectValueHeaderSize");
            const handoverContainer = document.getElementById("selectValueHeaderHandover");
            const locationContainer = document.getElementById("selectValueHeaderFilterLocation");

            const queryString = window.location.search.substring(1);
            if (!queryString) {
                // Очищаем элементы, если queryString пустая
                clearFilterValues();
                return;
            }

            const queryParams = new URLSearchParams(queryString);

            // Очистка элементов перед обновлением
            clearFilterValues();

            // Bedrooms
            if (queryParams.has("bedrooms") && bedroomsContainer) {
                const bedrooms = queryParams.get("bedrooms").split(",");
                bedroomsContainer.innerHTML = ""; // Очищаем перед добавлением
                bedrooms.forEach((bedroom) => {
                    addFilterItem(bedroomsContainer, `Bedroom: ${bedroom}`);
                });
            }

            // Price
            if ((queryParams.has("minPrice") || queryParams.has("maxPrice")) && priceContainer) {
                const minPrice = queryParams.get("minPrice");
                const maxPrice = queryParams.get("maxPrice");
                let priceText = "€ ";

                if (minPrice) {
                    priceText += formatPrice(minPrice);
                }
                if (maxPrice) {
                    priceText += " - " + formatPrice(maxPrice);
                }

                if (minPrice || maxPrice) {
                    addFilterItem(priceContainer, priceText);
                }
            }

            // Size
            if ((queryParams.has("minSize") || queryParams.has("maxSize")) && sizeContainer) {
                const minSize = queryParams.get("minSize");
                const maxSize = queryParams.get("maxSize");
                let sizeText = "";

                if (minSize && maxSize) {
                    sizeText = `${minSize} - ${maxSize} sq.m`;
                } else if (minSize) {
                    sizeText = `From ${minSize} sq.m`;
                }

                if (sizeText) {
                    addFilterItem(sizeContainer, sizeText);
                }
            }

            // Handover
            if ((queryParams.has("handoverMin") || queryParams.has("handoverMax")) && handoverContainer) {
                const handoverMin = queryParams.get("handoverMin");
                const handoverMax = queryParams.get("handoverMax");
                let handoverText = "";

                if (handoverMin && handoverMax) {
                    handoverText = `${formatHandoverDate(handoverMin)} - ${formatHandoverDate(handoverMax)}`;
                } else if (handoverMin) {
                    handoverText = `From ${formatHandoverDate(handoverMin)}`;
                }

                if (handoverText) {
                    addFilterItem(handoverContainer, handoverText);
                }
            }

            // Location (subAreas)
            if (queryParams.has("subAreas") && locationContainer) {
                const subAreas = queryParams.get("subAreas").split(",");
                locationContainer.innerHTML = ""; // Очищаем перед добавлением
                subAreas.forEach((location) => {
                    addFilterItem(locationContainer, `${location}`);
                });
            }

            // Функция для добавления элемента фильтра
            function addFilterItem(container, text) {
                const filterItem = document.createElement("div");
                filterItem.className = "propertiesSelectedFilter__item";

                const filterTitle = document.createElement("span");
                filterTitle.className = "propertiesSelectedFilter__item_title";
                filterTitle.textContent = text;

                filterItem.appendChild(filterTitle);
                container.appendChild(filterItem);
            }

            // Функция очистки всех значений фильтров
            function clearFilterValues() {
                if (bedroomsContainer) bedroomsContainer.innerHTML = "";
                if (priceContainer) priceContainer.innerHTML = "";
                if (sizeContainer) sizeContainer.innerHTML = "";
                if (handoverContainer) handoverContainer.innerHTML = "";
                if (locationContainer) locationContainer.innerHTML = "";
            }

            // Функция форматирования цены
            function formatPrice(price) {
                const num = parseInt(price, 10);
                if (num >= 1000000) {
                    return num / 1000000 + "M";
                } else if (num >= 1000) {
                    return num / 1000 + "K";
                }
                return num.toString();
            }

            // Функция форматирования handover даты
            function formatHandoverDate(date) {
                const [year, month] = date.split("-");
                const quarter = Math.ceil(parseInt(month, 10) / 3);
                return `Q${quarter} ${year}`;
            }
        }
        window.addEventListener("DOMContentLoaded", () => {
            renderValueFilterFromQueryHeader();

            let previousSearch = window.location.search;

            // Добавляем таймер для проверки изменений строки запроса
            setInterval(() => {
                const currentSearch = window.location.search;
                if (currentSearch !== previousSearch) {
                    previousSearch = currentSearch;
                    renderValueFilterFromQueryHeader();
                }
            }, 500);
        });

        function handleBtnRedirectHeader() {
            const confirmBtn = document.getElementById("redirectFilterHeader");

            if (!confirmBtn) {
                console.warn("Confirm button not found!");
                return;
            }

            // Prevent duplicate event listeners
            if (confirmBtn.hasAttribute('data-confirm-handler-attached')) {
                return;
            }
            confirmBtn.setAttribute('data-confirm-handler-attached', 'true');

            confirmBtn.addEventListener("click", () => {
                const currentUrl = window.location.href;
                const [currentPath, queryString] = currentUrl.split("?");
                const urlParams = new URLSearchParams(queryString || "");

                // Устанавливаем значение по умолчанию для "visible", если оно не указано
                let visible = urlParams.get("visible") || "Off plan";
                visible = decodeURIComponent(visible);
                urlParams.set("visible", visible);

                // Устанавливаем значение страницы на "0"
                urlParams.set("page", "0");

                // Определяем новый путь в зависимости от значения "visible"
                let newPath = "";
                if (visible === "Off plan") {
                    newPath = "new-buildings";
                } else if (visible === "Secondary") {
                    newPath = "secondaries";
                } else {
                    // Устанавливаем "new-buildings" по умолчанию, если значение "visible" неизвестно
                    newPath = "new-buildings";
                }

                const newFullPath = `${language && "/" + language}/${newPath}?${urlParams.toString()}`;


                // Перенаправляем на новый URL
                const newUrl = `${window.location.origin}/${newFullPath}`;
                window.location.replace(newUrl);
            });
        }
        setTimeout(handleBtnRedirectHeader, 0);

        window.addEventListener("scroll", updateFixedMenueVisibility);
        window.addEventListener("resize", updateFixedMenueVisibility);
        window.addEventListener("resize", updateHeaderMap);
        // Инициализируем начальное состояние fixedMenue
        updateFixedMenueVisibility();
        updateHeaderMap();
        const logoContainer = createElement("div");
        logoDiv.appendChild(logoContainer);

        const logoImg = createElement("img");
        logoImg.setAttribute("src", "/wp-content/themes/propart-spain/icons/shared/logo.svg");
        logoImg.setAttribute("alt", "pro-part-logo");
        logoImg.className = "logoImg";
        logoContainer.appendChild(logoImg);

        const navItems = [
            { text: "Home", url: `${language && "/" + language}/` },
            { text: "New building", url: `${language && "/" + language}/new-buildings?visible=Off+plan` },
            {
                text: "Secondary",
                url: `${language && "/" + language}/secondaries?page=0&visible=Secondary`,
            },
            { text: "Rent", url: `${language && "/" + language}/rent?page=1&rent_type=long` },
            { text: "Map", url: `${language && "/" + language}/map?visible=Off+plan` },
            { text: "Areas", url: `${language && "/" + language}/areas` },
            { text: "Consulting", url: `${language && "/" + language}/consulting` },
            { text: "Blog", url: `${language && "/" + language}/blogs` },
        ];

        const navbar = document.getElementById('bottom-navbar');

        // Create and append navigation links
        navItems.forEach(item => {
            const link = document.createElement('a');
            link.href = item.url;
            link.textContent = item.text;
            navbar.appendChild(link);
        });

        const callUsButtonBottom = document.createElement('button');
        callUsButtonBottom.className = 'button callUsButtonWhite';
        callUsButtonBottom.onclick = () => {
            window.location.href = 'tel:+34695113333';
        };

        navbar.appendChild(callUsButtonBottom);

        // Handle scroll event
        let lastScrollY = window.scrollY;

        window.addEventListener('scroll', () => {
            if (window.scrollY > 0) {
                navbar.classList.add('show');
            } else {
                navbar.classList.remove('show');
            }
            lastScrollY = window.scrollY;
        });

        navItems.forEach(({ text, url }) => {
            navList.appendChild(createNavItem(text, url));
        });

        navItems.forEach(({ text, url }) => {
            navListBtm.appendChild(createNavItem(text, url));
        });

        const callUsButton = createElement("button");
        callUsButton.className = "button callUsButton";

        callUsButton.onclick = () => {
            window.location.href = "tel:+34695113333";
        };
        const callUsText = createElement("span");
        callUsText.className = "callUsText";
        callUsText.innerText = "Call Us";
        callUsButton.appendChild(callUsText);
        socialDiv.appendChild(callUsButton);

        const likeButton = createElement("button");
        likeButton.className = "button likeButton";
        likeButton.addEventListener("click", function () {
            window.location.href = `${language && "/" + language}/liked-projects`;
        })
        socialDiv.appendChild(likeButton);

        const shareButton = createElement("button");
        shareButton.className = "button shareButton";
        socialDiv.appendChild(shareButton);

        const menuButton = createElement("button");
        menuButton.className = "button menuButton";
        socialDiv.appendChild(menuButton);

        shareButton.innerText = "EN";

        const languageDropdown = createElement("ul");
        languageDropdown.className = "language-dropdown";
        languageDropdown.style.display = "none";
        socialDiv.appendChild(languageDropdown);

        const languages = [
            {
                code: "EN",
                name: "English",
                flagUrl: "<?php echo get_template_directory_uri(); ?>/icons/shared/lang-icon/united-kingdom.svg",
            },
            {
                code: "RU",
                name: "Russian",
                flagUrl: "<?php echo get_template_directory_uri(); ?>/icons/shared/lang-icon/russia.svg",
            },
        ];

        let activeLanguageItem = language.toUpperCase();
        const currentPath = window.location.pathname;
        function updateLanguage(lang) {
            let newPath;

            // Если язык — английский, убираем языковой префикс
            if (lang.code === 'EN') {
                // Убираем языковой префикс, если текущий путь начинается с допустимого языка
                newPath = currentPath.split('/').filter(segment => !allowedLanguages.includes(segment)).join('/');
                // Если после удаления префикса путь пустой, перенаправляем на "/"
                newPath = newPath ? newPath : '/';
            } else {
                // Если язык не английский, добавляем префикс языка
                newPath = `/${lang.code.toLowerCase()}${currentPath}`;

                // Проверяем, нет ли уже префикса в URL, чтобы не дублировать его
                allowedLanguages.forEach(language => {
                    if (newPath.startsWith(`/${language}`)) {
                        newPath = `/${lang.code.toLowerCase()}${currentPath.replace(`/${language}`, '')}`;
                    }
                });
            }

            return newPath.startsWith('/') ? newPath : `/${newPath}`;
        }
        languages.forEach((lang) => {
            const listItem = createElement("a");
            listItem.className = "language-item";

            const flagImage = createElement("img");
            flagImage.src = lang.flagUrl;
            flagImage.alt = `${lang.name} flag`;
            flagImage.className = "language-flag";
            listItem.href = updateLanguage({ code: lang.code })
            listItem.appendChild(flagImage);

            const langText = createElement("span");
            langText.innerText = `${lang.code}`;
            listItem.appendChild(langText);
            if (!activeLanguageItem) {
                flagImage.classList.add("item--active");
                activeLanguageItem = flagImage;
                shareButton.innerText = lang.code;
            }

            if (activeLanguageItem === lang.code) {
                flagImage.classList.add("item--active");
                activeLanguageItem = flagImage;
                shareButton.innerText = lang.code;
            }

            listItem.onclick = () => {
                shareButton.innerText = lang.code;
                languageDropdown.style.display = "none";

                if (activeLanguageItem) {
                    activeLanguageItem.classList.remove("item--active");
                }

                flagImage.classList.add("item--active");
                activeLanguageItem = flagImage;
            };

            languageDropdown.appendChild(listItem);
        });
        shareButton.onclick = (event) => {
            event.stopPropagation();
            languageDropdown.style.display =
                languageDropdown.style.display === "none" ? "grid" : "none";
        };

        document.addEventListener("click", (event) => {
            const isClickInside = socialDiv.contains(event.target);
            if (!isClickInside) {
                languageDropdown.style.display = "none";
            }
        });

        const currentHash = window.location.hash.slice(1);

        window.addEventListener("popstate", () => {
            if (navBtm.classList.contains("showNavBottom1")) {
                navBtm.classList.remove("showNavBottom1");
                navBtm.classList.add("showNavBottom");
            }

            if (!nav.classList.contains("showNav")) {
                document.body.style.overflow = "";
            }
        });

        const fixedMenueCloseBtn = document.createElement("button");
        fixedMenueCloseBtn.className = "closeNavBottom";
        nav.appendChild(fixedMenueCloseBtn);

        fixedBtn.addEventListener("click", () => {
            nav.classList.toggle("showNav");
            fixedMenue.classList.toggle("close");
            fixedMenueCloseBtn.classList.toggle("visible");
            if (nav.classList.contains("showNav")) {
                document.body.style.overflow = "hidden";
            } else {
                document.body.style.overflow = "";
            }

            if (currentHash === "secondary" && window.innerWidth <= 768) {
                navBtm.classList.toggle("showNavBottom1");
                navBtm.classList.toggle("showNavBottom");
            }
        });
        fixedMenueCloseBtn.addEventListener("click", () => {
            nav.classList.toggle("showNav");
            fixedMenue.classList.toggle("close");
            fixedMenueCloseBtn.classList.toggle("visible");
            if (nav.classList.contains("showNav")) {
                document.body.style.overflow = "hidden";
            } else {
                document.body.style.overflow = "";
            }

            if (currentHash === "secondary" && window.innerWidth <= 768) {
                navBtm.classList.toggle("showNavBottom1");
                navBtm.classList.toggle("showNavBottom");
            }
        });
        if (filterMobileBurgerMenu) {
            filterMobileBurgerMenu.addEventListener("click", () => {
                nav.classList.toggle("showNav");
                filterMobileBurgerMenu.classList.toggle("showBtn");
                if (nav.classList.contains("showNav")) {
                    document.body.style.overflow = "hidden";
                } else {
                    document.body.style.overflow = "";
                }

                if (currentHash === "secondary" && window.innerWidth <= 768) {
                    navBtm.classList.toggle("showNavBottom1");
                    navBtm.classList.toggle("showNavBottom");
                }
            });
        }
        menuButton.addEventListener("click", () => {
            nav.classList.toggle("showNav");
            shareButton.classList.toggle("showNavBtn");
            likeButton.classList.toggle("showNavBtnLike");
            menuButton.classList.toggle("showNavBtnClose");
            if (nav.classList.contains("showNav")) {
                document.body.style.overflow = "hidden";
            } else {
                document.body.style.overflow = "";
            }

            if (currentHash === "secondary" && window.innerWidth <= 768) {
                navBtm.classList.toggle("showNavBottom1");
                navBtm.classList.toggle("showNavBottom");
            }
        });

        window.addEventListener("popstate", () => {
            if (navBtm.classList.contains("showNavBottom1")) {
                navBtm.classList.remove("showNavBottom1");
                navBtm.classList.add("showNavBottom");
            }

            if (!nav.classList.contains("showNav")) {
                document.body.style.overflow = "";
            }
        });

        const handleScroll = () => {
            const scrollPosition = window.scrollY + window.innerHeight;
            const pageHeight = document.documentElement.scrollHeight;

            if (scrollPosition >= pageHeight) {
                header.style.transition = "opacity 0.5s";
                header.style.opacity = "0";
            } else {
                header.style.opacity = "1";
            }
        };

        window.addEventListener("scroll", handleScroll);

        const updateActiveNavItem = () => {
            const navLinks = document.querySelectorAll(".navLink");
            let currentRoute = window.location.pathname;
            currentRoute = currentRoute.endsWith('/') ? currentRoute.slice(0, -1) : currentRoute;

            navLinks.forEach((link) => {
                const href = link.getAttribute("href");
                let linkRoute = href.startsWith('/') ? href : `/${href}`;
                linkRoute = linkRoute.endsWith('/') ? linkRoute.slice(0, -1) : linkRoute;

                if (link.classList.contains("active")) {
                    nav.classList.remove("showNav");
                    menuButton.classList.remove("menuActive");
                }

                if (
                    (currentRoute === "/secondary" || currentRoute === "/secondary-projects") &&
                    window.innerWidth <= 1440
                ) {
                    link.classList.add("navLink-active");
                    link.classList.remove("active");
                } else {
                    link.classList.remove("navLink-active");
                }

                if (linkRoute === currentRoute) {
                    link.classList.add("active");
                    if (
                        (currentRoute === "/secondary" || currentRoute === "/secondary-projects") &&
                        window.innerWidth <= 1440
                    ) {
                        link.classList.add("active-bottom");
                    }
                } else {
                    link.classList.remove("active");
                }
            });

            if (
                (currentRoute === "/secondary" || currentRoute === "/secondary-projects") &&
                window.innerWidth <= 1440
            ) {
                navLinks.forEach((link) => {
                    nav.style.display = "flex";
                    if (header.classList.contains("header-bottom")) {
                        header.style.justifyContent = "center";
                    } else {
                        header.style.justifyContent = "";
                    }
                });
            } else {
                nav.style.display = "";
                header.style.justifyContent = "";
            }

            if (
                (currentRoute === "/secondary" || currentRoute === "/secondary-projects") &&
                window.innerWidth <= 1440
            ) {
                logoDiv.style.display = "none";
                socialDiv.style.display = "none";

                header.classList.add("header-bottom");
                header.classList.remove("header-hidden");
                nav.classList.add("nav-bottom");
            } else {
                logoDiv.style.display = "block";
                socialDiv.style.display = "flex";

                header.classList.remove("header-bottom");
                header.classList.remove("header-hidden");
                nav.classList.remove("nav-bottom");
            }

            if (
                (currentRoute === "/secondary" || currentRoute === "/secondary-projects") &&
                window.innerWidth <= 768
            ) {
                nav.classList.remove("nav-bottom");
                nav.style.display = "none";
                socialDiv.classList.add("socialBottom");

                likeButton.classList.remove("likeButton");
                likeButton.classList.add("settingsButton");

                callUsButton.classList.remove("callUsButton");
                callUsButton.classList.add("callUsButtonWhite");

                shareButton.classList.remove("shareButton");
                shareButton.classList.add("mapButton");

                menuButton.classList.remove("menuButton");
                menuButton.classList.add("menuButtonWhite");

                socialDiv.style.display = "flex";
            } else {
                likeButton.classList.add("likeButton");
                likeButton.classList.remove("settingsButton");

                shareButton.classList.add("shareButton");
                shareButton.classList.remove("mapButton");

                callUsButton.classList.add("callUsButton");
                callUsButton.classList.remove("callUsButtonWhite");

                menuButton.classList.add("menuButton");
                menuButton.classList.remove("menuButtonWhite");

                socialDiv.classList.remove("socialBottom");
            }
        };
        const originalPushState = history.pushState;
        history.pushState = function (...args) {
            originalPushState.apply(this, args);
            updateActiveNavItem();
        };

        const originalReplaceState = history.replaceState;
        history.replaceState = function (...args) {
            originalReplaceState.apply(this, args);
            updateActiveNavItem();
        };

        // Вызов updateActiveNavItem при изменении маршрута
        updateActiveNavItem();
        window.addEventListener("DOMContentLoaded", updateActiveNavItem);
        window.addEventListener("resize", updateActiveNavItem);

        const headerAbsolute = () => {
            if (location.hash === "/") {
                headerId.style.position = "absolute";
                headerId.style.width = "100%";
            } else {
                headerId.style.position = "unset";
                headerId.style.width = "100%";
            }
        };
        headerAbsolute();
        window.addEventListener("hashchange", headerAbsolute);

        return header;
    };
    const createNavItem = (text, url = "#") => {
        const navItem = createElement("li");
        navItem.className = "navItem";

        const navLink = createElement("a");
        navLink.className = "navLink";
        navLink.innerText = text;
        navLink.setAttribute("href", url);
        navItem.appendChild(navLink);

        const currentHash = window.location.hash.slice(1);

        if (url.slice(1) === currentHash) {
            navLink.classList.add("active");
        }

        return navItem;
    };
    const createFooterSocialLink = (type, href = "#") => {
        const link = createElement("a");
        link.href = href;
        link.target = "_blank";

        const linkSpan = createElement("span");
        linkSpan.className = "icon";
        linkSpan.classList.add(`${type}-icon`);

        link.appendChild(linkSpan);

        return link;
    };

    const createFooterLink = (text, href = "#") => {
        const item = createElement("li");
        const link = createElement("a");
        link.href = href;
        link.innerText = text;
        link.onclick = () => window.scrollTo(0, 0);

        item.appendChild(link);

        return item;
    };

    const createLinksGroup = (name) => {
        const linksGroup = createElement("div");
        linksGroup.className = "linksGroup";

        const linksGroupHeader = createElement("p");
        linksGroupHeader.className = "groupHeader";
        linksGroupHeader.innerText = name;
        linksGroup.appendChild(linksGroupHeader);

        const list = createElement("ul");
        linksGroup.appendChild(list);

        return linksGroup;
    };
    const Footer = () => {
        const footerDate = new Date().getFullYear();
        const footer = document.createElement("footer");
        footer.className = "footer";

        const footerTop = createElement("div");
        footerTop.className = "footerTop";
        footer.appendChild(footerTop);

        const contactsContainer = createElement("div");
        contactsContainer.className = "contactsContainer";
        footerTop.appendChild(contactsContainer);

        const logoContainer = createElement("div");
        logoContainer.className = "logoContainer";
        contactsContainer.appendChild(logoContainer);

        const logoImg = createElement("img");
        logoImg.setAttribute("src", "/icons/shared/logo.svg");
        logoImg.setAttribute("alt", "pro-part-logo");
        logoImg.className = "logo-image";
        logoContainer.appendChild(logoImg);

        const contactInfoContainer = createElement("div");
        contactInfoContainer.className = "contactInfoContainer";

        const addressElement = createElement("p");
        addressElement.className = "address";
        addressElement.innerText =
            "Pl. de la Iglesia, 3, office 1-D, 29670, San Pedro de Alcántara, Malaga";
        contactsContainer.appendChild(addressElement);

        const phoneElement = createElement("a");
        phoneElement.className = "phone";
        phoneElement.href = "tel:+34695113333";
        phoneElement.innerText = "+34 695 113 333";

        const phoneIconElement = createElement("span");
        phoneIconElement.className = "phoneIcon";
        phoneElement.prepend(phoneIconElement);

        contactInfoContainer.appendChild(addressElement);
        contactInfoContainer.appendChild(phoneElement);

        contactsContainer.appendChild(contactInfoContainer);

        const footerSocial = createElement("div");
        footerSocial.className = "footerSocial";

        const socialLinks = [{
            platform: "whatsapp",
            url: "https://api.whatsapp.com/send/?phone=34695113333&text&type=phone_number&app_absent=0"
        },
        {
            platform: "telegram",
            url: "https://t.me/ppspain"
        },
        {
            platform: "facebook",
            url: "https://facebook.com/your-page"
        },
        {
            platform: "https://www.facebook.com/people/propartes/61557005454968/?mibextid=LQQJ4d&rdid=gOL7loYQU6x4FIHO&share_url=https%3A%2F%2Fwww.facebook.com%2Fshare%2FyLdG6VUUZ11gwWkN%2F%3Fmibextid%3DLQQJ4d",
            url: "https://www.instagram.com/propart.es"
        },
        ];

        contactsContainer.appendChild(footerSocial);
        socialLinks.forEach(({
            platform,
            url
        }) => {
            footerSocial.appendChild(createFooterSocialLink(platform, url));
        });

        const linksContainer = createElement("div");
        linksContainer.className = "linksContainer";
        footerTop.appendChild(linksContainer);

        const areaLinks = createLinksGroup("Area");
        const areaLinksData = [{
            name: "Marbella",
            url: `${language && "/" + language}/marbella`
        },
        {
            name: "Estepona",
            url: `${language && "/" + language}/estepona`
        },
        {
            name: "Benahavis",
            url: `${language && "/" + language}/benahavis`
        },
        {
            name: "Sotogrande",
            url: `${language && "/" + language}/sotogrande`
        },
        {
            name: "Mijas",
            url: `${language && "/" + language}/mijas`
        },
        {
            name: "Ojen",
            url: `${language && "/" + language}/ojen`
        },
        ];

        areaLinksData.forEach(({
            name,
            url
        }) => {
            areaLinks.lastChild.appendChild(createFooterLink(name, url));
        });

        linksContainer.appendChild(areaLinks);

        const consultingLinks = createLinksGroup("Consulting");
        const consultingLinksData = [{
            name: "Visa",
            url: `${language && "/" + language}/visa-services`
        },
        {
            name: "Legal services",
            url: `${language && "/" + language}/legal-service`
        },
        {
            name: "Insurance",
            url: `${language && "/" + language}/insurance-service`
        },
        {
            name: "Mortgage",
            url: `${language && "/" + language}/mortgage`
        },
        {
            name: "Concierge",
            url: `${language && "/" + language}/concierge-service`
        },
        {
            name: "Construction",
            url: `${language && "/" + language}/construction-service`
        },
        ];

        consultingLinksData.forEach(({
            name,
            url
        }) => {
            consultingLinks.lastChild.appendChild(createFooterLink(name, url));
        });

        linksContainer.appendChild(consultingLinks);

        const servicesLinks = createLinksGroup("Services");
        const linksGroupInner = createElement("div");
        linksGroupInner.className = "linksGroupInner";
        servicesLinks.lastChild.appendChild(linksGroupInner);

        const linksGroupInnerRight = createElement("div");
        linksGroupInner.appendChild(linksGroupInnerRight);

        const servicesLinksDataRight = [{
            name: "Visa",
            url: `${language && "/" + language}/visa-services`
        },
        {
            name: "Legal services",
            url: `${language && "/" + language}/legal-service`
        },
        {
            name: "Insurance",
            url: `${language && "/" + language}/insurance-service`
        },
        {
            name: "Mortgage",
            url: `${language && "/" + language}/mortgage`
        },
        {
            name: "Concierge",
            url: `${language && "/" + language}/concierge-service`
        },
        {
            name: "Construction",
            url: `${language && "/" + language}/construction-service`
        },
        ];
        servicesLinksDataRight.forEach(({
            name,
            url
        }) => {
            linksGroupInnerRight.appendChild(createFooterLink(name, url));
        });

        const linksGroupInnerLeft = createElement("div");
        linksGroupInner.appendChild(linksGroupInnerLeft);

        const servicesLinksDataLeft = [{
            name: "Repairs & Furnishings",
            url: `${language && "/" + language}/construction-service`
        },
        {
            name: "Select construction",
            url: `${language && "/" + language}/construction-service`
        },
        {
            name: "Digital Nomand Visa",
            url: `${language && "/" + language}/construction-service`
        },
        {
            name: "Tourist license",
            url: `${language && "/" + language}/construction-service`
        },
        {
            name: "Student visa",
            url: `${language && "/" + language}/visa-services`
        },
        ];

        servicesLinksDataLeft.forEach(({
            name,
            url
        }) => {
            linksGroupInnerLeft.appendChild(createFooterLink(name, url));
        });

        linksContainer.appendChild(servicesLinks);

        const footerBottom = createElement("div");
        footerBottom.className = "footerBottom";
        footer.appendChild(footerBottom);

        const rightsDiv = createElement("div");
        rightsDiv.className = "rights";
        rightsDiv.innerText = `© ${footerDate}  All rights reserved`;
        footerBottom.appendChild(rightsDiv);

        const policyDiv = createElement("div");
        policyDiv.className = "policy";
        footerBottom.appendChild(policyDiv);

        const policyLink = createElement("a");
        policyLink.href = "https://drive.google.com/file/d/1yjBDRFeYT9-z5vwtQaq9DzZeNA9C1AYw/view?usp=sharing";
        policyLink.innerText = "Privacy policy";
        policyDiv.appendChild(policyLink);

        const termsLink = createElement("a");
        termsLink.href = "#";
        termsLink.innerText = "Terms of use";
        policyDiv.appendChild(termsLink);

        return footer;
    };
    function renderMainPage(maincontainer) {
        const mainPage = document.querySelector(".mainPage");

        const areaVideos = document.querySelectorAll(".areaVideo");

        const legalText = document.querySelector(".legalBgcText");
        if (window.innerWidth < 1400) {
            legalText.innerText = "Legal";
        } else {
            legalText.innerText = "Legal services";
        }

        areaVideos.forEach((video) => {
            video.closest(".areaCard").addEventListener("mouseenter", () => {
                video.play();
            });

            video.closest(".areaCard").addEventListener("mouseleave", () => {
                video.pause();
                video.currentTime = 0;
            });
        });

        const areaTrigger = document.querySelector(".areaTrigger");
        const areaOptionsContainer = document.querySelector(".areaOptionsContainer");
        const optionsList = document.querySelector(".optionsList");
        const arrow = document.querySelector(".iconArrow.area");

        // Toggle main dropdown
        areaTrigger.addEventListener("click", () => {
            const isOpen = areaOptionsContainer.classList.toggle("open");
            arrow.classList.toggle("open");
            areaOptionsContainer.style.display = isOpen ? "block" : "none";
        });

        // Helper function to toggle dropdown visibility
        function toggleDropdown(container, arrow, isOpen) {
            container.classList.toggle("open", isOpen);
            arrow.classList.toggle("open", isOpen);
            container.style.display = isOpen ? "block" : "none";
        }

        let checkboxStates = {};

        // function renderAreaOptions() {
        //     optionsList.innerHTML = ""; // Очищаем существующие опции

        //     areasData.forEach((area) => {
        //         const areaOption = document.createElement("li");
        //         areaOption.classList.add("areaOption");

        //         // Создаем кнопку для каждой области
        //         const areaLabel = document.createElement("button");
        //         areaLabel.classList.add("areaLabel");

        //         // Оборачиваем текст в div с дополнительными элементами
        //         const mainListSelectedWrapper = document.createElement("div");
        //         mainListSelectedWrapper.classList.add("mainListSelectedWrapper");

        //         const mainListSelected = document.createElement("div");
        //         mainListSelected.classList.add("mainListSelected");

        //         // Вставляем текст и добавляем его внутрь mainListSelectedWrapper
        //         mainListSelectedWrapper.appendChild(mainListSelected);
        //         mainListSelectedWrapper.append(area.label);

        //         // Добавляем mainListSelectedWrapper внутрь areaLabel
        //         areaLabel.appendChild(mainListSelectedWrapper);

        //         // Создаем и добавляем иконку
        //         const icon = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        //         icon.setAttribute("width", "18");
        //         icon.setAttribute("height", "18");
        //         icon.setAttribute("viewBox", "0 0 25 24");
        //         icon.setAttribute("fill", "none");
        //         icon.classList.add("areaIcon");

        //         const path = document.createElementNS("http://www.w3.org/2000/svg", "path");
        //         path.setAttribute("d", "M7.5 10L12.5 14L17.5 10");
        //         path.setAttribute("stroke", "#717171");
        //         path.setAttribute("stroke-width", "1.5");
        //         path.setAttribute("stroke-linecap", "round");
        //         path.setAttribute("stroke-linejoin", "round");

        //         icon.appendChild(path);
        //         areaLabel.appendChild(icon); // Добавляем иконку в кнопку

        //         areaOption.appendChild(areaLabel); // Добавляем кнопку в li

        //         // Остальной код без изменений
        //         const subAreaContainer = document.createElement("div");
        //         subAreaContainer.classList.add("subAreaOptionsContainer", "hidden");
        //         const subOptionsList = document.createElement("ul");
        //         subOptionsList.classList.add("subOptionsList");

        //         // Добавляем кнопку "All"
        //         const selectAllOption = document.createElement("li");
        //         const selectAllWrapper = document.createElement("div");
        //         selectAllWrapper.className = "custom-checkbox";

        //         const selectAllCheckbox = document.createElement("input");
        //         selectAllCheckbox.type = "checkbox";
        //         selectAllCheckbox.className = "checkbox-input";
        //         selectAllCheckbox.id = `selectAll-${area.value}`;

        //         const selectAllLabel = document.createElement("label");
        //         selectAllLabel.htmlFor = `selectAll-${area.value}`;
        //         selectAllLabel.textContent = "All";

        //         selectAllWrapper.appendChild(selectAllCheckbox);
        //         selectAllWrapper.appendChild(selectAllLabel);
        //         selectAllOption.appendChild(selectAllWrapper);
        //         subOptionsList.appendChild(selectAllOption);

        //         // Список всех чекбоксов субтерриторий
        //         const subAreaCheckboxes = [];

        //         area.subAreas.forEach((subArea) => {
        //             const subAreaOption = document.createElement("li");
        //             const checkboxWrapper = document.createElement("div");
        //             checkboxWrapper.className = "custom-checkbox";

        //             const checkbox = document.createElement("input");
        //             checkbox.type = "checkbox";
        //             checkbox.value = subArea.value;
        //             checkbox.id = subArea.value;
        //             checkbox.className = "checkbox-input";
        //             checkbox.checked = checkboxStates[subArea.value] || false;

        //             subAreaCheckboxes.push(checkbox); // Добавляем чекбокс в список

        //             const label = document.createElement("label");
        //             label.htmlFor = subArea.value;
        //             label.textContent = subArea.label;

        //             checkboxWrapper.appendChild(checkbox);
        //             checkboxWrapper.appendChild(label);
        //             subAreaOption.appendChild(checkboxWrapper);
        //             subOptionsList.appendChild(subAreaOption);

        //             // Функция для изменения состояния чекбокса
        //             const toggleCheckboxState = () => {
        //                 const isChecked = !checkbox.checked;
        //                 checkbox.checked = isChecked;
        //                 checkboxStates[subArea.value] = isChecked;

        //                 if (isChecked) {
        //                     if (!selectedSubAreas.includes(subArea.value)) {
        //                         selectedSubAreas.push(subArea.value);
        //                     }
        //                 } else {
        //                     selectedSubAreas = selectedSubAreas.filter(
        //                         (area) => area !== subArea.value
        //                     );
        //                 }

        //                 // Обновляем состояние кнопки "All"
        //                 updateSelectAllState();

        //                 // Выводим выбранные территории в консоль
        //             };

        //             // Клик по чекбоксу
        //             checkbox.addEventListener("change", (event) => {
        //                 event.stopPropagation();
        //                 toggleCheckboxState();
        //             });

        //             // Клик по элементу <li>
        //             subAreaOption.addEventListener("click", (event) => {
        //                 event.preventDefault();
        //                 toggleCheckboxState();
        //             });
        //         });

        //         // Функция для обновления состояния кнопки "All"
        //         const updateSelectAllState = () => {
        //             const allChecked = subAreaCheckboxes.every((checkbox) => checkbox.checked);
        //             selectAllCheckbox.checked = allChecked;
        //         };

        //         // Логика при нажатии на "All" (на весь элемент <li>)
        //         selectAllOption.addEventListener("click", (event) => {
        //             // Не даем событию поглотиться в чекбоксе
        //             if (event.target.tagName.toLowerCase() === 'input') {
        //                 return;
        //             }

        //             selectAllCheckbox.checked = !selectAllCheckbox.checked;
        //             const selectAllChecked = selectAllCheckbox.checked;

        //             subAreaCheckboxes.forEach((checkbox) => {
        //                 checkbox.checked = selectAllChecked;
        //                 checkboxStates[checkbox.value] = selectAllChecked;

        //                 if (selectAllChecked) {
        //                     if (!selectedSubAreas.includes(checkbox.value)) {
        //                         selectedSubAreas.push(checkbox.value);
        //                     }
        //                 } else {
        //                     selectedSubAreas = selectedSubAreas.filter(
        //                         (area) => area !== checkbox.value
        //                     );
        //                 }
        //             });

        //             // Выводим обновленные субтерритории при нажатии на "All"
        //         });

        //         subAreaContainer.appendChild(subOptionsList);
        //         areaOption.appendChild(subAreaContainer);
        //         optionsList.appendChild(areaOption);

        //         areaLabel.addEventListener("click", (event) => {
        //             event.stopPropagation();
        //             const isOpen = subAreaContainer.classList.contains("hidden");
        //             closeAllSubDropdowns();
        //             if (isOpen) {
        //                 subAreaContainer.classList.remove("hidden");
        //                 icon.classList.add("open");
        //             } else {
        //                 subAreaContainer.classList.add("hidden");
        //                 icon.classList.remove("open");
        //             }
        //         });

        //         // Инициализация состояния кнопки "All"
        //         updateSelectAllState();
        //     });
        // }

        function renderAreaOptions() {
            optionsList.innerHTML = ""; // Очищаем существующие опции

            areasData.forEach((area) => {
                const areaOption = document.createElement("li");
                areaOption.classList.add("areaOption");

                // Создаем кнопку для каждой области
                const areaLabel = document.createElement("button");
                areaLabel.classList.add("areaLabel");

                // Оборачиваем текст в div с дополнительными элементами
                const mainListSelectedWrapper = document.createElement("div");
                mainListSelectedWrapper.classList.add("mainListSelectedWrapper");

                const mainListSelected = document.createElement("div");
                mainListSelected.classList.add("mainListSelected");

                // Вставляем текст и добавляем его внутрь mainListSelectedWrapper
                mainListSelectedWrapper.appendChild(mainListSelected);
                mainListSelectedWrapper.append(area.label);

                // Добавляем mainListSelectedWrapper внутрь areaLabel
                areaLabel.appendChild(mainListSelectedWrapper);

                // Создаем и добавляем иконку
                const icon = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                icon.setAttribute("width", "18");
                icon.setAttribute("height", "18");
                icon.setAttribute("viewBox", "0 0 25 24");
                icon.setAttribute("fill", "none");
                icon.classList.add("areaIcon");

                const path = document.createElementNS("http://www.w3.org/2000/svg", "path");
                path.setAttribute("d", "M7.5 10L12.5 14L17.5 10");
                path.setAttribute("stroke", "#717171");
                path.setAttribute("stroke-width", "1.5");
                path.setAttribute("stroke-linecap", "round");
                path.setAttribute("stroke-linejoin", "round");

                icon.appendChild(path);
                areaLabel.appendChild(icon); // Добавляем иконку в кнопку

                areaOption.appendChild(areaLabel); // Добавляем кнопку в li

                // Остальной код без изменений
                const subAreaContainer = document.createElement("div");
                subAreaContainer.classList.add("subAreaOptionsContainer", "hidden");
                const subOptionsList = document.createElement("ul");
                subOptionsList.classList.add("subOptionsList");

                // Добавляем кнопку "All"
                const selectAllOption = document.createElement("li");
                const selectAllWrapper = document.createElement("div");
                selectAllWrapper.className = "custom-checkbox";

                const selectAllCheckbox = document.createElement("input");
                selectAllCheckbox.type = "checkbox";
                selectAllCheckbox.className = "checkbox-input";
                selectAllCheckbox.id = `selectAll-${area.value}`;

                const selectAllLabel = document.createElement("label");
                selectAllLabel.htmlFor = `selectAll-${area.value}`;
                selectAllLabel.textContent = "All";

                selectAllWrapper.appendChild(selectAllCheckbox);
                selectAllWrapper.appendChild(selectAllLabel);
                selectAllOption.appendChild(selectAllWrapper);
                subOptionsList.appendChild(selectAllOption);

                // Список всех чекбоксов субтерриторий
                const subAreaCheckboxes = [];

                area.subAreas.forEach((subArea) => {
                    const subAreaOption = document.createElement("li");
                    const checkboxWrapper = document.createElement("div");
                    checkboxWrapper.className = "custom-checkbox";

                    const checkbox = document.createElement("input");
                    checkbox.type = "checkbox";
                    checkbox.value = subArea.value;
                    checkbox.id = subArea.value;
                    checkbox.className = "checkbox-input";
                    checkbox.checked = checkboxStates[subArea.value] || false;

                    subAreaCheckboxes.push(checkbox); // Добавляем чекбокс в список

                    const label = document.createElement("label");
                    label.htmlFor = subArea.value;
                    label.textContent = subArea.newLabel;

                    checkboxWrapper.appendChild(checkbox);
                    checkboxWrapper.appendChild(label);
                    subAreaOption.appendChild(checkboxWrapper);
                    subOptionsList.appendChild(subAreaOption);

                    // Функция для изменения состояния чекбокса
                    const toggleCheckboxState = () => {
                        const isChecked = !checkbox.checked;
                        checkbox.checked = isChecked;
                        checkboxStates[subArea.value] = isChecked;

                        if (isChecked) {
                            if (!selectedSubAreas.includes(subArea.value)) {
                                selectedSubAreas.push(subArea.value);
                            }
                        } else {
                            selectedSubAreas = selectedSubAreas.filter(
                                (area) => area !== subArea.value
                            );
                        }

                        // Обновляем состояние кнопки "All"
                        updateSelectAllState();

                        // Обновляем класс и текст в mainListSelected
                        updateMainListSelected();
                    };

                    // Клик по чекбоксу
                    checkbox.addEventListener("change", (event) => {
                        event.stopPropagation();
                        toggleCheckboxState();
                    });

                    // Клик по элементу <li>
                    subAreaOption.addEventListener("click", (event) => {
                        event.preventDefault();
                        toggleCheckboxState();
                    });
                });

                // Функция для обновления состояния кнопки "All"
                const updateSelectAllState = () => {
                    const allChecked = subAreaCheckboxes.every((checkbox) => checkbox.checked);
                    selectAllCheckbox.checked = allChecked;
                };

                // Функция для обновления класса и текста в mainListSelected
                const updateMainListSelected = () => {
                    const selectedCount = subAreaCheckboxes.filter((checkbox) => checkbox.checked).length;
                    if (selectedCount > 0) {
                        mainListSelected.classList.add("active");
                        mainListSelected.textContent = selectedCount;
                    } else {
                        mainListSelected.classList.remove("active");
                        mainListSelected.textContent = ""; // Убираем текст, если ничего не выбрано
                    }
                };

                // Логика при нажатии на "All" (на весь элемент <li>)
                selectAllOption.addEventListener("click", (event) => {
                    if (event.target.tagName.toLowerCase() === 'input') {
                        return;
                    }

                    selectAllCheckbox.checked = !selectAllCheckbox.checked;
                    const selectAllChecked = selectAllCheckbox.checked;

                    subAreaCheckboxes.forEach((checkbox) => {
                        checkbox.checked = selectAllChecked;
                        checkboxStates[checkbox.value] = selectAllChecked;

                        if (selectAllChecked) {
                            if (!selectedSubAreas.includes(checkbox.value)) {
                                selectedSubAreas.push(checkbox.value);
                            }
                        } else {
                            selectedSubAreas = selectedSubAreas.filter(
                                (area) => area !== checkbox.value
                            );
                        }
                    });

                    updateMainListSelected();
                });

                subAreaContainer.appendChild(subOptionsList);
                areaOption.appendChild(subAreaContainer);
                optionsList.appendChild(areaOption);

                areaLabel.addEventListener("click", (event) => {
                    event.stopPropagation();
                    const isOpen = subAreaContainer.classList.contains("hidden");
                    closeAllSubDropdowns();
                    if (isOpen) {
                        subAreaContainer.classList.remove("hidden");
                        icon.classList.add("open");
                    } else {
                        subAreaContainer.classList.add("hidden");
                        icon.classList.remove("open");
                    }
                });

                // Инициализация состояния кнопки "All" и mainListSelected
                updateSelectAllState();
                updateMainListSelected();
            });
        }



        function closeAllSubDropdowns() {
            const allSubAreaContainers = document.querySelectorAll(
                ".subAreaOptionsContainer"
            );
            allSubAreaContainers.forEach((container) => {
                container.classList.add("hidden");
            });
        }

        document.addEventListener("click", (event) => {
            if (
                !areaOptionsContainer.contains(event.target) &&
                !areaTrigger.contains(event.target)
            ) {
                toggleDropdown(areaOptionsContainer, arrow, false);
                //closeAllSubDropdowns();
            }
        });

        renderAreaOptions();

        let selectedSubAreas = [];
        let selectedPropertyType = "Off Plan";

        const btnOffPlan = document.getElementById("mainOffPlanVisible");
        const btnSecondary = document.getElementById("mainSecondaryVisible");

        // Функция для обновления класса active в зависимости от выбранного типа
        function updateActiveButton() {
            if (selectedPropertyType === "Off Plan") {
                btnOffPlan.classList.add("active");
                btnSecondary.classList.remove("active");
            } else if (selectedPropertyType === "Secondary") {
                btnSecondary.classList.add("active");
                btnOffPlan.classList.remove("active");
            }
        }

        // Добавляем обработчики событий на кнопки
        btnOffPlan.addEventListener("click", () => {
            selectedPropertyType = "Off Plan";
            updateActiveButton();
        });

        btnSecondary.addEventListener("click", () => {
            selectedPropertyType = "Secondary";
            updateActiveButton();
        });

        // Инициализируем начальное состояние
        updateActiveButton();

        const propertyArrow = document.querySelector(".iconArrow.propertyType");
        const searchButton = document.querySelector(".searchButton");

        // Устанавливаем Off Plan как значение по умолчанию
        document.addEventListener("DOMContentLoaded", () => {
            if (defaultOption) {
                selectedPropertyType = defaultOption.textContent.trim();
            }
        });

        const editButton = document.getElementById("mainPageBtnLinkMap");

        searchButton.addEventListener("click", (event) => {
            event.preventDefault();
            let redirectUrl = `/${selectedPropertyType === "Off Plan"
                    ? "new-buildings"
                    : "secondaries"
                }?page=0&visible=${selectedPropertyType === "Off Plan" ? "Off+plan" : "Secondary"}`;

            if (selectedSubAreas.length > 0) {
                redirectUrl += `&subAreas=${encodeURIComponent(
                    selectedSubAreas.join(",")
                )}`;
            }

            window.location.href = redirectUrl;
        });

        editButton.addEventListener("click", (event) => {
            event.preventDefault();
            let redirectUrl = `/map?visible=${selectedPropertyType === "Off Plan" ? "Off+plan" : "Secondary"}`;

            if (selectedSubAreas.length > 0) {
                redirectUrl += `&subAreas=${encodeURIComponent(
                    selectedSubAreas.join(",")
                )}`;
            }

            window.location.href = redirectUrl;
        });

        document.addEventListener("click", (event) => {
            if (
                !areaOptionsContainer.contains(event.target) &&
                !areaTrigger.contains(event.target)
            ) {
                toggleDropdown(areaOptionsContainer, arrow, false);
            }
        });

        const mapAreaInfo = document.querySelector(".mapAreaInfo");
        const mapAreas = document.querySelectorAll(".mapArea");

        if (mapAreas && mapAreaInfo) {
            mapAreas.forEach((area) => {
                area.addEventListener("mouseenter", () => {
                    mapAreaInfo.classList.add("hovered");
                });
                area.addEventListener("mouseleave", () => {
                    mapAreaInfo.classList.remove("hovered");
                });
                area.addEventListener("click", () => {
                    mapAreaDetailedInfo.classList.remove("hidden");
                    mapSliderContainer.classList.remove("hidden");
                    mapBlock.style.marginBottom = "224px";
                });
            });
        }
        const mapAreasData = {
            "sotogrande": {
                name: "Sotogrande",
                text: "Sotogrande is an exclusive residential area known for its luxurious villas, world-class golf courses, and beautiful marina. It's a top choice for those seeking upscale living, privacy, and coastal beauty.",
                img: "/assets/mapPage/sotogrande.png"
            },
            "manilva": {
                name: "Manilva",
                text: "Manilva is a charming seaside village offering stunning beaches, a relaxed atmosphere, and a rich history. It combines traditional Andalusian culture with modern amenities, making it perfect for a tranquil getaway.",
                img: "/assets/mapPage/manila.png"
            },
            "сasares": {
                name: "Casares",
                text: "Casares is a picturesque hilltop town known for its whitewashed houses and breathtaking views of the Mediterranean. It offers a blend of rural charm, nature trails, and historic sites, ideal for those seeking a quiet retreat.",
                img: "/assets/mapPage/casares.png"
            },
            "estepona": {
                name: "Estepona",
                text: "Estepona, located on the Costa del Sol, is famous for its golden beaches, lively marina, and quaint old town. With Andalusian charm and luxury amenities, it’s perfect for a peaceful seaside lifestyle or holiday.",
                img: "/assets/mapPage/estepona.png"
            },
            "benahavís": {
                name: "Benahavís",
                text: "Benahavís is a charming mountain village celebrated for its exceptional cuisine and luxury residences. Nestled between Marbella and Estepona, it offers scenic views, golf courses, and a vibrant culinary scene.",
                img: "/assets/mapPage/benahavis.png"
            },
            "marbella": {
                name: "Marbella",
                text: "Marbella is a glamorous city known for its upscale lifestyle, beautiful beaches, and vibrant nightlife. With a mix of luxury resorts, golf courses, and historical charm, it's a top destination for leisure and luxury.",
                img: "/assets/mapPage/marbella.png"
            },
            "ojen": {
                name: "Ojén",
                text: "Ojén is a traditional Andalusian village located in the mountains just north of Marbella. It offers stunning views, hiking trails, and a slower pace of life, perfect for those seeking tranquility close to the coast.",
                img: "/assets/mapPage/ojen.png"
            },
            "mijas": {
                name: "Mijas",
                text: "Mijas is a diverse area offering both a charming whitewashed village in the hills and a bustling coastal area. It combines traditional Andalusian character with beautiful beaches, making it ideal for varied experiences.",
                img: "/assets/mapPage/mijas.png"
            },
            "fuengirola": {
                name: "Fuengirola",
                text: "Fuengirola is a popular coastal town known for its beautiful beaches, lively promenade, and family-friendly attractions. It has a mix of traditional and modern elements, with plenty of amenities and activities for visitors.",
                img: "/assets/mapPage/fuengirola.png"
            },
            "benalmadena": {
                name: "Benalmádena",
                text: "Benalmádena offers stunning beaches, a charming old town, and a lively marina. It’s known for its diverse attractions, including theme parks and golf courses, making it a great destination for both families and fun-seekers.",
                img: "/assets/mapPage/benalmadena.png"
            },
            "torremolinos": {
                name: "Torremolinos",
                text: "Torremolinos is a lively coastal town famous for its golden beaches, bustling nightlife, and welcoming atmosphere. With plenty of restaurants, bars, and entertainment options, it’s a great spot for a fun holiday.",
                img: "/assets/mapPage/torremonilos.png",
            },
            "malaga": {
                name: "Málaga",
                text: "Málaga is a vibrant city known for its rich history, culture, and seaside charm. It offers a mix of historical landmarks, modern art galleries, and beautiful beaches, making it an ideal spot for both culture and relaxation.",
                img: "/assets/mapPage/malaga.png"
            }
        }


        function createSlide(project) {
            const slide = document.createElement("a")
            slide.className = "mapSlide"
            slide.href = `${language && "/" + language}/secondary/?project=${project._id}`
            slide.innerHTML = `
                  <div class="mapSlideImageContainer">
                    <img src="${project.images[0].small}" alt="slide-image" loading="lazy">
                  </div>
                  <div class="mapSlideInfo">
                    <div>
                      <p class="mapSlideTitle">${project.generalInfo.name}</p>
                      <span class="mapSlideText">${project.generalInfo.province}</span>
                    </div>
                    <div class="mapSlideTextGroup">
                      <span class="mapSlideText">Secondary</span>
                      <span class="mapSlideText">${project.generalInfo.type}</span>
                      <span class="mapSlideText">${project.generalInfo.size} m²</span>
                    </div>
                    <p class="mapSlideText">Floors: ${project.generalInfo.floor[0]} Rooms: ${project.generalInfo.rooms}</p>
                    <p class="mapSlideAmount">€ ${project.generalInfo.price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".")}</p>
                  </div>
                `
            return slide
        }


        const mapSliderContainer = document.querySelector(".mapSliderContainer");
        const mapAreaDetailedInfo = document.querySelector(".mapAreaDetailedInfo");
        const readMoreButton = document.querySelector(".readMoreButton");
        const mapAreaDetailsText = document.querySelector(".mapAreaDetailsText");
        const hideTextButton = document.querySelector(".hideTextButton");
        const mapBlock = document.querySelector(".mapBlock");
        const mapAreaImageContainer = document.querySelector(".mapAreaImageContainer")
        const mapAreaName = document.querySelector(".mapAreaName")
        const mapSlidePrevButton = document.querySelector(".mapSlidePrevButton");
        const mapSlideNextButton = document.querySelector(".mapSlideNextButton");
        const mapSlidesList = document.querySelector(".mapSlidesList");
        const maxSlideListScroll = (mapSlidesList.children.length - 3) * 440;


        async function getProjectsToMap(area) {

            const localAreas = {
                "estepona": [
                    "Benavista",
                    "El Paraiso",
                    "Costalita",
                    "Valle Romano",
                    "El Padron",
                    "Hacienda del Sol",
                    "Selwo",
                    "Atalaya",
                    "Benamara",
                    "Guadalmina Alta",
                    "El Presidente"
                ],
                "malaga": [
                    "Torremar",
                    "Alhaurín de la Torre",
                    "Torremolinos Centro",
                    "Cártama",
                    "Málaga Este",
                    "Benaoján",
                    "Antequera",
                    "Ojén",
                    "Fuente de Piedra",
                    "Júzcar",
                    "Genalguacil",
                    "Puerto de la Torre",
                    "Arriateg",
                    "El Burgo",
                    "Gaucín",
                    "Torremolinos",
                    "Lauro Golf",
                    "La Mairena",
                    "Archidona",
                    "Monda",
                    "El Chorro",
                    "Carratraca",
                    "Ronda",
                    "Villanueva De La Concepcion",
                    "Mollina",
                    "Almogía",
                    "Torrenueva",
                    "Villanueva del Rosario",
                    "El Chaparral",
                    "Cuevas del Becerro",
                    "Zalea",
                    "Alhaurín el Grande",
                    "Ardales",
                    "Tolox",
                    "Cortes de la Frontera",
                    "La Duquesa",
                    "El Faro",
                    "Playamar",
                    "Campillos",
                    "Miraflores",
                    "Algatocin",
                    "Benarrabá",
                    "Valle de Abdalajis",
                    "Montejaque",
                    "Alpandeire",
                    "San Luis de Sabinillas",
                    "Guaro",
                    "Alora",
                    "Málaga Centro",
                    "Coín",
                    "Pizarra",
                    "Benalauría",
                    "Yunquera",
                    "Casabermeja",
                    "Estacion de Cartama",
                    "Jubrique",
                    "Alozaina",
                    "Cañete la Real",
                    "Estación de Gaucin",
                    "Villafranco del Guadalhorce",
                    "Casarabonela",
                    "Bel Air",
                    "Jimera de Líbar"
                ],
                "marbella": [
                    "Río Real",
                    "Las Chapas",
                    "La Quinta",
                    "Santa Clara",
                    "Hacienda Las Chapas",
                    "Los Monteros",
                    "Carib Playa",
                    "Costabella",
                    "Torre Real",
                    "Altos de los Monteros",
                    "Sierra Blanca",
                    "Nagüeles",
                    "Nueva Andalucía",
                    "Elviria",
                    "Aloha",
                    "Puerto de Cabopino",
                    "The Golden Mile",
                    "Puerto Banús",
                    "New Golden Mile",
                    "Cortijo Blanco",
                    "Artola",
                    "Los Almendros",
                    "Bahía de Marbella",
                    "Marbesa",
                    "Cabopino",
                    "Reserva de Marbella"
                ],
                "fuengirolla": [
                    "Las Lagunas",
                    "Carvajal",
                    "Los Boliches",
                    "Los Pacos",
                    "Torreblanca"
                ],
                "manilva": [
                    "Punta Chullera"
                ],
                "casares": [
                    "Casares Playa",
                    "Casares Pueblo",
                    "Doña Julia"
                ],
                "sevilla": [
                    "La Campana"
                ],
                "mijas": [
                    "La Cala",
                    "Campo Mijas",
                    "La Cala de Mijas",
                    "Valtocado",
                    "Riviera del Sol",
                    "Sierrezuela",
                    "Calanova Golf",
                    "Mijas Costa",
                    "La Cala Golf",
                    "La Cala Hills",
                    "Calypso",
                    "Mijas Golf",
                    "Cerros del Aguila"
                ],
                "benahavis": [
                    "La Heredia",
                    "Los Arqueros",
                    "La Zagaleta",
                    "El Madroñal",
                    "Los Flamingos",
                    "Monte Halcones"
                ],
                "Benalmadena": [
                    "Benalmadena Pueblo",
                    "La Capellania",
                    "Arroyo de la Miel",
                    "Torremuelle",
                    "Benalmadena Costa",
                    "Torrequebrada"
                ],
                "Torremolinos": [
                    "La Carihuela",
                    "El Pinillo"
                ],
            }

            try {
                const accessKey = "rijVnGe6lBwcsWop";
                const secretKey = "0FnSmmqRcM1X0V5y28Mx9rMYyo2mQdVt";

                const params = new URLSearchParams({
                    accessKey: accessKey,
                    secretKey: secretKey,
                    isPagination: "true",
                    size: "7",
                    page: 0,
                });

                const headers = {
                    "Content-Type": "application/json",
                };

                const body = {};

                body.provinces = localAreas[area]

                const requestBody = Object.keys(body).length ? body : {};

                const response = await fetch(
                    `https://crm.server.pro-part.es/api/v1/secondary-projects/integration/projects?${params.toString()}`,
                    {
                        method: "POST",
                        headers,
                        body: JSON.stringify(requestBody),
                    }
                );

                if (!response.ok) {
                    throw new Error("Failed to fetch projects");
                }

                const projectData = await response.json();
                mapSlidesList.innerHTML = "";
                projectData.projects.map(item => mapSlidesList.appendChild(createSlide(item)))


            } catch (e) {

            }

        }


        if (mapAreaDetailsText) {
            readMoreButton.addEventListener("click", () => {
                mapAreaDetailsText.classList.add("opened");
                readMoreButton.classList.add("hidden");
                hideTextButton.classList.remove("hidden");
            });

            hideTextButton.addEventListener("click", () => {
                mapAreaDetailsText.classList.remove("opened");
                hideTextButton.classList.add("hidden");
                readMoreButton.classList.remove("hidden");
                document.body.classList.remove("no-hover");
            });
        }

        if (mapBlock) {
            mapBlock.addEventListener("click", (event) => {
                if (event.target.closest(".mapAreaDetailedInfo")) {
                    return;
                }

                if ([...mapAreas].some((area) => area === event.target)) {
                    mapAreas.forEach((area) => area.classList.remove("clicked"));
                    event.target.classList.add("clicked");
                    mapAreaDetailsText.textContent = mapAreasData[event.target.id].text
                    mapAreaName.textContent = mapAreasData[event.target.id].name
                    mapAreaImageContainer.style.background = `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.1)), url(<?php echo get_template_directory_uri(); ?>${mapAreasData[event.target.id].img}) no-repeat center / cover`;



                    getProjectsToMap(event.target.id)
                    document.body.classList.add("no-hover");

                    window.scrollTo({
                        top: 3650,
                        behavior: "smooth",
                    });

                    return;
                }

                if (!mapAreaDetailedInfo.classList.contains("hidden")) {
                    mapAreaDetailedInfo.classList.add("hidden");
                    mapSliderContainer.classList.add("hidden");
                    mapBlock.style.marginBottom = "104px";
                }

                mapAreas.forEach((area) => area.classList.remove("clicked"));
                document.body.classList.remove("no-hover");
            });
        }

        if (mapSlidePrevButton) {
            mapSlidePrevButton.addEventListener("click", (event) => {
                event.stopPropagation();
                mapSlidesList.scrollLeft -= 432 + 8;
            });
        }

        if (mapSlideNextButton) {
            mapSlideNextButton.addEventListener("click", (event) => {
                event.stopPropagation();
                mapSlidesList.scrollLeft += 432 + 8;
            });
        }

        //   const checkMapButtonsDisability = (scroll) => {
        //     mapSlidePrevButton.disabled = scroll === 0;
        //     mapSlideNextButton.disabled = scroll === maxSlideListScroll;
        //   };

        //   if (mapSlidesList) {
        //     mapSlidesList.addEventListener("scroll", () => {
        //       switch (mapSlidesList.scrollLeft) {
        //         case 0:
        //         case 440:
        //         case maxSlideListScroll:
        //           checkMapButtonsDisability(mapSlidesList.scrollLeft);
        //           break;
        //         default:
        //           break;
        //       }
        //     });
        //   }
    }

    function formatToQuarter(dateArray) {
        const year = dateArray[0];
        const month = dateArray[1];

        let quarter;
        if (month >= 1 && month <= 3) {
            quarter = "Q1";
        } else if (month >= 4 && month <= 6) {
            quarter = "Q2";
        } else if (month >= 7 && month <= 9) {
            quarter = "Q3";
        } else if (month >= 10 && month <= 12) {
            quarter = "Q4";
        }

        return `${quarter} ${year}`;
    }

    const swiper = new Swiper('.swiper-container', {
        slidesPerView: 'auto',
        spaceBetween: 12,
        loop: true,
        navigation: {
            nextEl: '.swiper-custom-button-next',
            prevEl: '.swiper-custom-button-prev',
        },
    });


    function formatHandoverDate(handoverArray) {
        const year = handoverArray[0];
        const month = handoverArray[1];
        if (1 <= month && month <= 3) {
            return `Q1 ${year}`;
        } else if (4 <= month && month <= 6) {
            return `Q2 ${year}`;
        } else if (7 <= month && month <= 9) {
            return `Q3 ${year}`;
        } else if (10 <= month && month <= 12) {
            return `Q4 ${year}`;
        }
        return `${year}`;
    }

    const accessKey = "rijVnGe6lBwcsWop";
    const secretKey = "0FnSmmqRcM1X0V5y28Mx9rMYyo2mQdVt";
    const body = {};

    const params = new URLSearchParams({
        accessKey: accessKey,
        secretKey: secretKey,
        isPagination: "true",
        size: "10",
        page: "0",
    });

    const headers = {
        "Content-Type": "application/json",
    };

    const requestBody = Object.keys(body).length ? body : {};

    async function fetchAndRenderSlides() {
        const locationElement = document.getElementById('projectLocation');
        const locationText = locationElement ? locationElement.textContent.trim() : '';

        try {
            // Fetching data from the new Xano API
            const response = await fetch(
                `https://xf9m-jkaj-lcsq.p7.xano.io/api:v5maUE6u/properties?perPage=10&page=1`, // Adjusted URL and parameters for Xano
                {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json",
                    },
                }
            );

            // Check if the response is not ok
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            // Parse the response JSON
            const data = await response.json();

            // Grab the Swiper wrapper where we will append the slides
            const swiperWrapper = document.querySelector('.swiper-wrapper');
            const savedOffPlanProjects = JSON.parse(localStorage.getItem('favoriteProjects')) || [];

            // Loop through the fetched data (items array from Xano)
            data.items?.forEach(xanoProject => { // Changed data.projects to data.items for Xano
                // --- Relationship/Mapping Layer ---
                // Transform Xano project data to match the expected 'project' structure
                const project = {
                    _id: xanoProject.id, // Use 'id' from Xano
                    generalInfo: {
                        name: xanoProject.development_name || xanoProject.urbanisation_name || `Property ${xanoProject.id}`, // Use appropriate name from Xano, or a fallback
                        province: xanoProject.province, // Use 'province' from Xano
                        developer: xanoProject.developer || 'N/A', // Xano data doesn't have a direct 'developer' field, use 'N/A' or try to derive
                        handover: xanoProject.completion_date ? [new Date(xanoProject.completion_date).getFullYear(), new Date(xanoProject.completion_date).getMonth() + 1] : [new Date().getFullYear(), new Date().getMonth() + 1], // Convert completion_date to array [year, month]
                    },
                    units: [
                        {
                            type: xanoProject.type, // Use 'type' from Xano
                            bedrooms: xanoProject.beds, // Use 'beds' from Xano
                            size: xanoProject.built_area, // Use 'built_area' from Xano
                            price: xanoProject.price, // Use 'price' from Xano
                        }
                    ],
                    images: xanoProject.images.map(img => ({
                        original: img.image_url // Map Xano's image_url to 'original'
                    }))
                };
                // --- End Relationship/Mapping Layer ---

                const slide = document.createElement('div');
                slide.classList.add('swiper-slide');
                const handover = formatHandoverDate(project.generalInfo.handover);
                const isFavorite = savedOffPlanProjects.some(p => p._id === project._id);

                // Generate the slide content
                slide.innerHTML = `
        <div class="swiper-card">
          <div class="rectangle-parent">
            <div class="image-slider-container">
                <div class="image-wrapper">
                  <img
                    class="frame-child current-image"
                    src="${project.images[0].original}"
                    alt="${project.generalInfo.name}"
                    style="transition: opacity 0.3s ease;"
                  />
                </div>
                <button class="card-buttons-swiper-btn-left">
                      <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none">
                        <path d="M10.5 5L7.18352 8.5286C6.93883 8.78894 6.93883 9.21106 7.18352 9.4714L10.5 13" stroke="#717171" stroke-width="1.2" stroke-linecap="round"/>
                      </svg>
                </button>
                <button class="card-buttons-swiper-btn-right" style="rotate: 180deg">
                      <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none">
                        <path d="M7.5 5L10.8165 8.5286C11.0612 8.78894 11.0612 9.21106 10.8165 9.4714L7.5 13" stroke="#717171" stroke-width="1.2" stroke-linecap="round"/>
                      </svg>
                </button>
              </div>

            <div class="frame-group">
              <div class="off-plan-wrapper"><div class="off-plan">${project.units[0].type
                    }</div></div>
              <div class="off-plan-wrapper"><div class="off-plan">${project.units[0].bedrooms
                    } beds</div></div>
              <div class="off-plan-wrapper"><div class="off-plan">${project.units[0].size
                    } m<sup>2</sup></div></div>
            </div>
            <div class="instance-parent">
              <div class="heart-wrapper">
                <svg
                  class="heart-icon"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="${isFavorite ? '#313131' : 'none'}"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
              </div>
              <div class="call-us-wrapper"><div class="off-plan">Call us</div></div>
            </div>
          </div>
          <div class="frame-container">
            <div class="frame-div">
              <div class="marein-natura-parent">
                <a href="${'/new-building?project=' + project._id}">
                        <div class="marein-natura">${project.generalInfo.name}</div>
                </a>
                <div class="marbella-spain">${project.generalInfo.province}</div>
              </div>
              <div class="parent">
                <div class="marein-natura">€ ${project.units[0].price.toLocaleString()}</div>
                <div class="m21">€ ${Math.round(
                        project.units[0].price / project.units[0].size
                    ).toLocaleString()} m²</div>
              </div>
            </div>
            <div class="frame-item"></div>
            <div class="developer-name-parent">
              <div class="off-plan">${project.generalInfo.developer}</div>
              <div class="off-plan">${handover}</div>
            </div>
          </div>
        </div>
      `;
                const container = slide.querySelector('.image-slider-container');
                const leftButton = container.querySelector('.card-buttons-swiper-btn-left');
                const rightButton = container.querySelector('.card-buttons-swiper-btn-right');
                const image = container.querySelector('.current-image');
                container.dataset.currentIndex = '0';

                function updateImage(direction) {
                    const currentIndex = parseInt(container.dataset.currentIndex, 10);
                    const totalImages = project.images && project.images.length;

                    if (!totalImages) {
                        console.error(`No images available for project ID: ${project._id}`);
                        return;
                    }

                    let newIndex = direction === 'next'
                        ? (currentIndex + 1) % totalImages
                        : (currentIndex - 1 + totalImages) % totalImages;

                    image.style.opacity = '0';
                    setTimeout(() => {
                        if (project.images[newIndex]?.original) {
                            image.src = project.images[newIndex].original;
                            image.style.opacity = '1';
                        } else {
                            console.warn(`Missing 'original' field for image at index ${newIndex} in project ID: ${project._id}`);
                        }
                    }, 100);

                    container.dataset.currentIndex = newIndex;
                }

                leftButton.addEventListener('click', (e) => {
                    e.preventDefault();
                    updateImage('prev');
                });

                rightButton.addEventListener('click', (e) => {
                    e.preventDefault();
                    updateImage('next');
                });

                const heartWrapper = slide.querySelector('.heart-wrapper');
                heartWrapper.addEventListener('click', function (event) {
                    event.preventDefault();
                    event.stopPropagation();

                    console.log('Heart clicked for project:', project._id);

                    let savedOffPlanProjects = JSON.parse(localStorage.getItem('favoriteProjects')) || [];
                    const projectIndex = savedOffPlanProjects.findIndex(p => p._id === project._id);
                    const heartIcon = this.querySelector('.heart-icon');

                    if (projectIndex > -1) {
                        // Remove from favorites
                        console.log('Removing from favorites');
                        savedOffPlanProjects.splice(projectIndex, 1);
                        heartIcon.setAttribute('fill', 'none');
                    } else {
                        // Add to favorites
                        console.log('Adding to favorites');
                        savedOffPlanProjects.push(project);
                        heartIcon.setAttribute('fill', '#313131');
                    }

                    // Update localStorage
                    localStorage.setItem('favoriteProjects', JSON.stringify(savedOffPlanProjects));
                    
                    // Dispatch event to update badge
                    if (window.dispatchLikesUpdateEvent) {
                        window.dispatchLikesUpdateEvent();
                    }
                });

                swiperWrapper.appendChild(slide);
            });

            swiper.update();

        } catch (error) {
            console.error('There was a problem with the fetch operation:', error);
        }
    }

	const createElement = (item) => document.createElement(item);
	document.addEventListener("DOMContentLoaded", () => {
		const headerContainer = document.getElementById("header");
		const mainContent = document.getElementById("main-content");
		const feedbackFormContainer = document.getElementById("feedbackBlock");
		const footerContainer = document.getElementById("footer");

		renderMainPage(mainContent);
		headerContainer.appendChild(Header());
		feedbackFormContainer.appendChild(FeedbackForm());
		footerContainer.appendChild(Footer());
		fetchAndRenderSlides()
	});

</script>

<?php

get_footer();
